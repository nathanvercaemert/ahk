(undo-tree-save-format-version . 1)
"8d60db7683076d290e4b6fad6eb9199a9af5e160"
[nil nil nil nil (25572 53790 787049 100000) 0 nil]
([nil nil ((3406 . 3434) 3391 (t 25570 52689 200466 400000)) nil (25572 53790 787047 800000) 0 nil])
([nil nil ((3434 . 3462) 3407) nil (25572 53790 787046 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3406) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("#Include window-manager.ahk" 0 8 (face font-lock-preprocessor-face fontified t) 8 15 (fontified t) 15 16 (face font-lock-builtin-face fontified t) 16 23 (fontified t) 23 24 (face font-lock-builtin-face fontified t) 24 27 (fontified t)) . 3407) (undo-tree-id14 . -27) (undo-tree-id15 . -27) (undo-tree-id16 . -27) (undo-tree-id17 . -27) (undo-tree-id18 . -27) (undo-tree-id19 . -27) (undo-tree-id20 . -27) 3434) nil (25572 53790 787045 100000) 0 nil])
([nil nil ((3406 . 3407)) nil (25572 53790 787013 0) 0 nil])
([nil nil ((3417 . 3421) (t 25572 53790 807700 400000)) nil (25572 53798 446955 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3564) (undo-tree-id36 . -1) (#("        WinGetTitle Title, ahk_id %Id%" 0 8 (fontified t) 8 19 (face font-lock-keyword-face fontified t) 19 25 (fontified t) 25 26 (face font-lock-builtin-face fontified t) 26 27 (fontified t) 27 33 (face font-lock-keyword-face fontified t) 33 34 (fontified t) 34 38 (face font-lock-variable-name-face fontified t)) . 3565) (undo-tree-id37 . -17) 3582 (t 25572 53798 468274 300000)) nil (25572 53992 959515 0) 0 nil])
([nil nil ((#("if (Title != \"\") && (Title != \"ZPToolBarParentWnd\") && (Title != \"JamPostMessageWindow\")" 0 2 (face font-lock-keyword-face fontified t) 2 10 (fontified t) 10 12 (face font-lock-builtin-face fontified t) 12 13 (fontified t) 13 15 (face font-lock-string-face fontified t) 15 17 (fontified t) 17 19 (face font-lock-builtin-face fontified t) 19 27 (fontified t) 27 29 (face font-lock-builtin-face fontified t) 29 30 (fontified t) 30 50 (face font-lock-string-face fontified t) 50 52 (fontified t) 52 54 (face font-lock-builtin-face fontified t) 54 62 (fontified t) 62 64 (face font-lock-builtin-face fontified t) 64 65 (fontified t) 65 87 (face font-lock-string-face fontified t) 87 88 (fontified t)) . 3573) (undo-tree-id29 . -88) (undo-tree-id30 . -88) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (undo-tree-id33 . -88) (undo-tree-id34 . 33) (undo-tree-id35 . -56) 3661) nil (25572 53992 959513 600000) 0 nil])
([nil nil ((4399 . 4487) 4361) nil (25572 53992 959510 900000) 0 nil])
([nil nil ((4400 . 4408) (4351 . 4359) (#("        " 0 8 (fontified nil)) . 4351) (4359 . 4359) (4399 . 4400)) nil (25572 53992 959509 400000) 0 nil])
([nil nil ((#("        if" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t)) . 4497) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . -10)) nil (25572 53992 959507 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4496) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 4497) nil (25572 53992 959505 100000) 0 nil])
([nil nil ((4496 . 4499)) nil (25572 53992 959489 100000) 0 nil])
([nil nil ((3574 . 3608) (#("
" 0 1 (fontified t)) . -3583) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("            AllWindowIds.Push(Id)" 0 24 (fontified t) 24 25 (face font-lock-builtin-face fontified t) 25 30 (fontified t) 30 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t)) . 3584) (undo-tree-id832 . -12) (undo-tree-id833 . -12) (undo-tree-id834 . -13) (undo-tree-id835 . -12) (undo-tree-id836 . -14) (undo-tree-id837 . -12) (undo-tree-id838 . -15) (undo-tree-id839 . -12) (undo-tree-id840 . -15) (undo-tree-id841 . -12) (undo-tree-id842 . -12) (undo-tree-id843 . -12) (undo-tree-id844 . -12) (undo-tree-id845 . -12) (undo-tree-id846 . -12) (undo-tree-id847 . -12) (undo-tree-id848 . -12) (undo-tree-id849 . -12) (undo-tree-id850 . -12) (undo-tree-id851 . -12) (undo-tree-id852 . -12) (undo-tree-id853 . -12) (undo-tree-id854 . -12) (undo-tree-id855 . -12) (undo-tree-id856 . -12) (undo-tree-id857 . -12) (undo-tree-id858 . -12) (undo-tree-id859 . -12) (undo-tree-id860 . -12) (undo-tree-id861 . -12) (undo-tree-id862 . -12) (undo-tree-id863 . -12) (undo-tree-id864 . -12) (undo-tree-id865 . -12) (undo-tree-id866 . -12) (undo-tree-id867 . -12) (undo-tree-id868 . -12) (undo-tree-id869 . -12) (undo-tree-id870 . -12) (undo-tree-id871 . -12) (undo-tree-id872 . -12) (undo-tree-id873 . -12) (undo-tree-id874 . -12) (undo-tree-id875 . -12) (undo-tree-id876 . -12) (undo-tree-id877 . -12) (undo-tree-id878 . -12) (undo-tree-id879 . -12) (undo-tree-id880 . -12) (undo-tree-id881 . -12) (undo-tree-id882 . -12) (undo-tree-id883 . -12) (undo-tree-id884 . -12) (undo-tree-id885 . -12) (undo-tree-id886 . -12) (undo-tree-id887 . -12) (undo-tree-id888 . -12) (undo-tree-id889 . -12) (undo-tree-id890 . -12) (undo-tree-id891 . -12) (undo-tree-id892 . -12) (undo-tree-id893 . -12) (undo-tree-id894 . -12) (undo-tree-id895 . -12) (undo-tree-id896 . -12) (undo-tree-id897 . -12) (undo-tree-id898 . -12) (undo-tree-id899 . -12) (undo-tree-id900 . -12) (undo-tree-id901 . -12) (undo-tree-id902 . -12) (undo-tree-id903 . -12) (undo-tree-id904 . -12) (undo-tree-id905 . -12) (undo-tree-id906 . -12) (undo-tree-id907 . -12) (undo-tree-id908 . -12) (undo-tree-id909 . -12) (undo-tree-id910 . -12) (undo-tree-id911 . -12) (undo-tree-id912 . -12) (undo-tree-id913 . -12) (undo-tree-id914 . -12) (undo-tree-id915 . -12) (undo-tree-id916 . -12) (undo-tree-id917 . -12) (undo-tree-id918 . -12) (undo-tree-id919 . -12) (undo-tree-id920 . -12) (undo-tree-id921 . -12) (undo-tree-id922 . -12) (undo-tree-id923 . -12) (undo-tree-id924 . -12) (undo-tree-id925 . -12) (undo-tree-id926 . -12) (undo-tree-id927 . -12) (undo-tree-id928 . -12) (undo-tree-id929 . -12) (undo-tree-id930 . -12) (undo-tree-id931 . -12) (undo-tree-id932 . -12) (undo-tree-id933 . -12) (undo-tree-id934 . -12) (undo-tree-id935 . -12) (undo-tree-id936 . -12) (undo-tree-id937 . -12) (undo-tree-id938 . -12) (undo-tree-id939 . -12) (undo-tree-id940 . -12) (undo-tree-id941 . -12) (undo-tree-id942 . -12) (undo-tree-id943 . -12) (undo-tree-id944 . -12) (undo-tree-id945 . -12) (undo-tree-id946 . -12) (undo-tree-id947 . -12) (undo-tree-id948 . -12) (undo-tree-id949 . -12) (undo-tree-id950 . -12) (undo-tree-id951 . -12) (undo-tree-id952 . -12) (undo-tree-id953 . -12) (undo-tree-id954 . -12) (undo-tree-id955 . -12) (undo-tree-id956 . -12) (undo-tree-id957 . -12) (undo-tree-id958 . -12) (undo-tree-id959 . -12) (undo-tree-id960 . -12) (undo-tree-id961 . -12) (undo-tree-id962 . -12) (undo-tree-id963 . -12) (undo-tree-id964 . -12) (undo-tree-id965 . -12) (undo-tree-id966 . -12) (undo-tree-id967 . -12) (undo-tree-id968 . -12) (undo-tree-id969 . -12) (undo-tree-id970 . -12) (undo-tree-id971 . -12) (undo-tree-id972 . -12) (undo-tree-id973 . -12) (undo-tree-id974 . -12) (undo-tree-id975 . -12) (undo-tree-id976 . -12) (undo-tree-id977 . -12) (undo-tree-id978 . -12) (undo-tree-id979 . -12) (undo-tree-id980 . -12) (undo-tree-id981 . -12) (undo-tree-id982 . -12) (undo-tree-id983 . -12) (undo-tree-id984 . -12) (undo-tree-id985 . -12) (undo-tree-id986 . -12) (undo-tree-id987 . -12) (undo-tree-id988 . -12) (undo-tree-id989 . -12) (undo-tree-id990 . -12) (undo-tree-id991 . -12) (undo-tree-id992 . -12) (undo-tree-id993 . -12) (undo-tree-id994 . -12) (undo-tree-id995 . -12) (undo-tree-id996 . -12) (undo-tree-id997 . -12) (undo-tree-id998 . -12) (undo-tree-id999 . -12) (undo-tree-id1000 . -12) (undo-tree-id1001 . -12) (undo-tree-id1002 . -12) (undo-tree-id1003 . -12) (undo-tree-id1004 . -12) (undo-tree-id1005 . -12) (undo-tree-id1006 . -12) (undo-tree-id1007 . -12) (undo-tree-id1008 . -12) (undo-tree-id1009 . -12) (undo-tree-id1010 . -12) (undo-tree-id1011 . -12) (undo-tree-id1012 . -12) (undo-tree-id1013 . -12) (undo-tree-id1014 . -12) (undo-tree-id1015 . -12) (undo-tree-id1016 . -12) (undo-tree-id1017 . -12) (undo-tree-id1018 . -12) (undo-tree-id1019 . -12) (undo-tree-id1020 . -12) (undo-tree-id1021 . -12) (undo-tree-id1022 . -12) (undo-tree-id1023 . -12) (undo-tree-id1024 . -12) (undo-tree-id1025 . -12) (undo-tree-id1026 . -12) (undo-tree-id1027 . -12) (undo-tree-id1028 . -12) (undo-tree-id1029 . -12) (undo-tree-id1030 . -12) (undo-tree-id1031 . -12) (undo-tree-id1032 . -12) (undo-tree-id1033 . -12) (undo-tree-id1034 . -12) (undo-tree-id1035 . -12) (undo-tree-id1036 . -12) (undo-tree-id1037 . -12) (undo-tree-id1038 . -12) (undo-tree-id1039 . -12) (undo-tree-id1040 . -12) (undo-tree-id1041 . -12) (undo-tree-id1042 . -12) (undo-tree-id1043 . -12) (undo-tree-id1044 . -12) (undo-tree-id1045 . -12) (undo-tree-id1046 . -12) (undo-tree-id1047 . -12) (undo-tree-id1048 . -12) 3596 (t 25572 53992 987081 300000)) nil (25572 54013 193994 900000) 0 nil])
([nil nil ((3565 . 3599) (#("
" 0 1 (fontified t)) . -3573) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (#("            AllWindowIds.Push(Id)" 0 24 (fontified t) 24 25 (face font-lock-builtin-face fontified t) 25 30 (fontified t) 30 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t)) . 3574) (undo-tree-id607 . -12) (undo-tree-id608 . -12) (undo-tree-id609 . -12) (undo-tree-id610 . -12) (undo-tree-id611 . -12) (undo-tree-id612 . -12) (undo-tree-id613 . -12) 3586) nil (25572 54013 193894 800000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -3573) (undo-tree-id586 . -12) (undo-tree-id587 . -12) (undo-tree-id588 . -12) (undo-tree-id589 . -12) (undo-tree-id590 . -12) (undo-tree-id591 . -12) (undo-tree-id592 . -12) (undo-tree-id593 . -12) (undo-tree-id594 . -12) (undo-tree-id595 . -12) (undo-tree-id596 . -12) (undo-tree-id597 . -12) (undo-tree-id598 . -12) (3565 . 3573) 3577) nil (25572 54013 193890 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3594) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("        
        {
        }" 0 8 (fontified t) 8 9 (fontified t) 9 18 (fontified t) 18 19 (fontified t) 19 28 (fontified t)) . 3595) (undo-tree-id312 . -27) (undo-tree-id313 . -27) (undo-tree-id314 . -8) (undo-tree-id315 . -18) (undo-tree-id316 . -18) (undo-tree-id317 . -18) (undo-tree-id318 . -18) (undo-tree-id319 . -18) (undo-tree-id320 . -18) (undo-tree-id321 . -18) (undo-tree-id322 . -18) (undo-tree-id323 . -18) (undo-tree-id324 . -18) (undo-tree-id325 . -18) (undo-tree-id326 . -18) (undo-tree-id327 . -18) (undo-tree-id328 . -18) (undo-tree-id329 . -18) (undo-tree-id330 . -18) (undo-tree-id331 . -18) (undo-tree-id332 . -18) (undo-tree-id333 . -18) (undo-tree-id334 . -18) (undo-tree-id335 . -18) (undo-tree-id336 . -18) (undo-tree-id337 . -18) (undo-tree-id338 . -18) (undo-tree-id339 . -18) (undo-tree-id340 . -18) (undo-tree-id341 . -18) (undo-tree-id342 . -18) (undo-tree-id343 . -18) (undo-tree-id344 . -18) (undo-tree-id345 . -18) (undo-tree-id346 . -18) (undo-tree-id347 . -18) (undo-tree-id348 . -18) (undo-tree-id349 . -18) (undo-tree-id350 . -18) (undo-tree-id351 . -18) (undo-tree-id352 . -18) (undo-tree-id353 . -18) (undo-tree-id354 . -18) (undo-tree-id355 . -18) (undo-tree-id356 . -18) (undo-tree-id357 . -18) (undo-tree-id358 . -18) (undo-tree-id359 . -18) (undo-tree-id360 . -18) (undo-tree-id361 . -18) (undo-tree-id362 . -18) (undo-tree-id363 . -18) (undo-tree-id364 . -18) (undo-tree-id365 . -18) (undo-tree-id366 . -18) (undo-tree-id367 . -18) (undo-tree-id368 . -18) (undo-tree-id369 . -18) (undo-tree-id370 . -18) (undo-tree-id371 . -18) (undo-tree-id372 . -18) (undo-tree-id373 . -18) (undo-tree-id374 . -18) (undo-tree-id375 . -18) (undo-tree-id376 . -18) (undo-tree-id377 . -18) (undo-tree-id378 . -18) (undo-tree-id379 . -18) (undo-tree-id380 . -18) (undo-tree-id381 . -18) (undo-tree-id382 . -18) (undo-tree-id383 . -18) (undo-tree-id384 . -18) (undo-tree-id385 . -18) (undo-tree-id386 . -18) (undo-tree-id387 . -18) (undo-tree-id388 . -18) (undo-tree-id389 . -18) (undo-tree-id390 . -18) (undo-tree-id391 . -18) (undo-tree-id392 . -18) (undo-tree-id393 . -18) (undo-tree-id394 . -18) (undo-tree-id395 . -18) (undo-tree-id396 . -18) (undo-tree-id397 . -18) (undo-tree-id398 . -18) (undo-tree-id399 . -18) (undo-tree-id400 . -18) (undo-tree-id401 . -18) (undo-tree-id402 . -18) (undo-tree-id403 . -18) (undo-tree-id404 . -18) (undo-tree-id405 . -18) (undo-tree-id406 . -18) (undo-tree-id407 . -18) (undo-tree-id408 . -18) (undo-tree-id409 . -18) (undo-tree-id410 . -18) (undo-tree-id411 . -18) (undo-tree-id412 . -18) (undo-tree-id413 . -18) (undo-tree-id414 . -18) (undo-tree-id415 . -18) (undo-tree-id416 . -18) (undo-tree-id417 . -18) (undo-tree-id418 . -18) (undo-tree-id419 . -18) (undo-tree-id420 . -18) (undo-tree-id421 . -18) (undo-tree-id422 . -18) (undo-tree-id423 . -18) (undo-tree-id424 . -18) (undo-tree-id425 . -18) (undo-tree-id426 . -18) (undo-tree-id427 . -18) (undo-tree-id428 . -18) (undo-tree-id429 . -18) (undo-tree-id430 . -18) (undo-tree-id431 . -18) (undo-tree-id432 . -18) (undo-tree-id433 . -18) (undo-tree-id434 . -18) (undo-tree-id435 . -18) (undo-tree-id436 . -18) (undo-tree-id437 . -18) (undo-tree-id438 . -18) (undo-tree-id439 . -18) (undo-tree-id440 . -18) (undo-tree-id441 . -18) (undo-tree-id442 . -18) (undo-tree-id443 . -18) (undo-tree-id444 . -18) (undo-tree-id445 . -18) (undo-tree-id446 . -18) (undo-tree-id447 . -18) (undo-tree-id448 . -18) (undo-tree-id449 . -18) (undo-tree-id450 . -18) (undo-tree-id451 . -18) (undo-tree-id452 . -18) (undo-tree-id453 . -18) (undo-tree-id454 . -18) (undo-tree-id455 . -18) (undo-tree-id456 . -18) (undo-tree-id457 . -18) (undo-tree-id458 . -18) (undo-tree-id459 . -18) (undo-tree-id460 . -18) (undo-tree-id461 . -18) (undo-tree-id462 . -18) (undo-tree-id463 . -18) (undo-tree-id464 . -18) (undo-tree-id465 . -18) (undo-tree-id466 . -18) (undo-tree-id467 . -18) (undo-tree-id468 . -18) (undo-tree-id469 . -18) (undo-tree-id470 . -18) (undo-tree-id471 . -18) (undo-tree-id472 . -18) (undo-tree-id473 . -18) (undo-tree-id474 . -18) (undo-tree-id475 . -18) (undo-tree-id476 . -18) (undo-tree-id477 . -18) (undo-tree-id478 . -18) (undo-tree-id479 . -18) (undo-tree-id480 . -18) (undo-tree-id481 . -18) (undo-tree-id482 . -18) (undo-tree-id483 . -18) (undo-tree-id484 . -18) (undo-tree-id485 . -18) (undo-tree-id486 . -18) (undo-tree-id487 . -18) (undo-tree-id488 . -18) (undo-tree-id489 . -18) (undo-tree-id490 . -18) (undo-tree-id491 . -18) (undo-tree-id492 . -18) (undo-tree-id493 . -18) (undo-tree-id494 . -18) (undo-tree-id495 . -18) (undo-tree-id496 . -18) (undo-tree-id497 . -18) (undo-tree-id498 . -18) (undo-tree-id499 . -18) (undo-tree-id500 . -18) (undo-tree-id501 . -18) (undo-tree-id502 . -18) (undo-tree-id503 . -18) (undo-tree-id504 . -18) (undo-tree-id505 . -18) (undo-tree-id506 . -18) (undo-tree-id507 . -18) (undo-tree-id508 . -18) (undo-tree-id509 . -18) (undo-tree-id510 . -18) (undo-tree-id511 . -18) (undo-tree-id512 . -18) (undo-tree-id513 . -18) (undo-tree-id514 . -18) (undo-tree-id515 . -18) (undo-tree-id516 . -18) (undo-tree-id517 . -18) (undo-tree-id518 . -18) (undo-tree-id519 . -18) (undo-tree-id520 . -18) (undo-tree-id521 . -18) (undo-tree-id522 . -18) (undo-tree-id523 . -18) (undo-tree-id524 . -18) (undo-tree-id525 . -18) (undo-tree-id526 . -18) (undo-tree-id527 . -18) (undo-tree-id528 . -18) (undo-tree-id529 . -18) (undo-tree-id530 . -18) (undo-tree-id531 . -8) (undo-tree-id532 . -8) (undo-tree-id533 . -8) (undo-tree-id534 . -8) (undo-tree-id535 . -8) (undo-tree-id536 . -8) (undo-tree-id537 . -8) (undo-tree-id538 . -8) (undo-tree-id539 . -8) (undo-tree-id540 . -8) (undo-tree-id541 . -8) (undo-tree-id542 . -8) (undo-tree-id543 . -8) (undo-tree-id544 . -8) (undo-tree-id545 . -8) (undo-tree-id546 . -8) (undo-tree-id547 . -8) (undo-tree-id548 . -8) (undo-tree-id549 . -8) (undo-tree-id550 . -8) (undo-tree-id551 . -8) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . -8) (undo-tree-id555 . -8) (undo-tree-id556 . -8) (undo-tree-id557 . -8) (undo-tree-id558 . -8) (undo-tree-id559 . -8) (undo-tree-id560 . -27) (undo-tree-id561 . -17) (undo-tree-id562 . -17) (undo-tree-id563 . -17) (undo-tree-id564 . -17) (undo-tree-id565 . -17) (undo-tree-id566 . -17) (undo-tree-id567 . -17) (undo-tree-id568 . -17) (undo-tree-id569 . -17) (undo-tree-id570 . -17) (undo-tree-id571 . -17) (undo-tree-id572 . -19) (undo-tree-id573 . -8) (undo-tree-id574 . -9) (undo-tree-id575 . -27) (undo-tree-id576 . -27) (undo-tree-id577 . -27) (undo-tree-id578 . -27) (undo-tree-id579 . -27) (undo-tree-id580 . -27) (undo-tree-id581 . -27) (undo-tree-id582 . -27) (undo-tree-id583 . -27) (undo-tree-id584 . -27) (undo-tree-id585 . -27) 3622) nil (25572 54013 193878 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3600) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (t 25572 54013 214630 300000)) nil (25572 54017 140238 200000) 0 nil])
([nil nil ((#("ScreenHeight" 0 12 (fontified t)) . 1180) (undo-tree-id81 . -12) (undo-tree-id82 . -12) (undo-tree-id83 . -12) 1181 (t 25572 54017 161593 500000)) nil (25579 47279 124747 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1190 . 1191) (nil fontified nil 1180 . 1191) (1180 . 1191)) nil (25579 47279 124744 0) 0 nil])
([nil nil ((#("ScreenHeight" 0 12 (fontified t)) . 1230) (undo-tree-id78 . -12) (undo-tree-id79 . -12) (undo-tree-id80 . -12) 1241) nil (25579 47279 124743 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1240 . 1241) (nil fontified nil 1230 . 1241) (1230 . 1241)) nil (25579 47280 111646 300000) 0 nil])
([nil nil ((#("ScreenWidth" 0 11 (fontified t)) . 1263) (undo-tree-id88 . -11) (undo-tree-id89 . -11) (undo-tree-id90 . -10) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . -10) (undo-tree-id94 . -10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -11) (undo-tree-id98 . -11) 1273) nil (25579 47282 895399 100000) 0 nil] [nil nil ((#("ScreenWidth" 0 10 (fontified t) 10 11 (fontified t rear-nonsticky t)) . 1230) (undo-tree-id0 . -11) (undo-tree-id1 . -11) (undo-tree-id2 . -11) (undo-tree-id3 . -11) (undo-tree-id4 . -11) (undo-tree-id5 . -11) (undo-tree-id6 . -11) (undo-tree-id7 . -11) (undo-tree-id8 . -11) (undo-tree-id9 . -11) (undo-tree-id10 . -11) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -11) (undo-tree-id18 . -10) (undo-tree-id19 . -10) (undo-tree-id20 . -10) (undo-tree-id21 . -10) (undo-tree-id22 . -10) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . -10) (undo-tree-id29 . -10) (undo-tree-id30 . -10) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -10) (undo-tree-id34 . -11) (undo-tree-id35 . -11) (undo-tree-id36 . -11) (undo-tree-id37 . -11) (undo-tree-id38 . -11) (undo-tree-id39 . -11) (undo-tree-id40 . -10) (undo-tree-id41 . -11) (undo-tree-id42 . -11) (undo-tree-id43 . -11) (undo-tree-id44 . -11) (undo-tree-id45 . -11) (undo-tree-id46 . -11) (undo-tree-id47 . -11) (undo-tree-id48 . -11) (undo-tree-id49 . -11) (undo-tree-id50 . -11) (undo-tree-id51 . -11) (undo-tree-id52 . -11) (undo-tree-id53 . -11) (undo-tree-id54 . -11) (undo-tree-id55 . -11) (undo-tree-id56 . -11) (undo-tree-id57 . -11) (undo-tree-id58 . -11) (undo-tree-id59 . -11) (undo-tree-id60 . -11) (undo-tree-id61 . -11) (undo-tree-id62 . -11) (undo-tree-id63 . -11) (undo-tree-id64 . -11) (undo-tree-id65 . -11) (undo-tree-id66 . -11) (undo-tree-id67 . -11) (undo-tree-id68 . -11) (undo-tree-id69 . -11) (undo-tree-id70 . -11) (undo-tree-id71 . -11) (undo-tree-id72 . -11) (undo-tree-id73 . -11) (undo-tree-id74 . -11) (undo-tree-id75 . -11) (undo-tree-id76 . -11) (undo-tree-id77 . -11) 1241) ((1230 . 1241)) (25579 47279 133622 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1274 . 1275) (nil fontified nil 1263 . 1275) (1263 . 1275)) nil (25579 47282 895383 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1241 . 1242) (nil fontified nil 1230 . 1242) (1230 . 1242)) ((#("ScreenHeight" 0 11 (fontified nil) 11 12 (fontified nil rear-nonsticky nil)) . 1230) (undo-tree-id84 . -12) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -12) (nil rear-nonsticky t 1241 . 1242)) (25579 47279 124664 400000) 0 nil])
([nil nil ((14796 . 14798) (t 25579 47282 918354 700000)) nil (25580 49161 79201 800000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 18209 . 18210) (nil fontified nil 18209 . 18210) (nil fontified nil 18155 . 18209) (nil fontified nil 18153 . 18155) (nil fontified nil 18149 . 18153) (nil fontified nil 18118 . 18149) (nil fontified nil 18116 . 18118) (nil fontified nil 18110 . 18116) (nil fontified nil 18088 . 18110) (nil fontified nil 18087 . 18088) (nil fontified nil 18081 . 18087) (nil fontified nil 18080 . 18081) (nil fontified nil 18079 . 18080) (nil fontified nil 18068 . 18079) (nil fontified nil 18040 . 18068) (nil fontified nil 18038 . 18040) (nil fontified nil 17997 . 18038) (nil fontified nil 17996 . 17997) (nil fontified nil 17983 . 17996) (nil fontified nil 17982 . 17983) (nil fontified nil 17973 . 17982) (nil fontified nil 17972 . 17973) (nil fontified nil 17963 . 17972) (nil fontified nil 17962 . 17963) (nil fontified nil 17922 . 17962) (nil fontified nil 17920 . 17922) (nil fontified nil 17897 . 17920) (nil fontified nil 17851 . 17897) (nil fontified nil 17849 . 17851) (nil fontified nil 17845 . 17849) (nil fontified nil 17798 . 17845) (nil fontified nil 17796 . 17798) (nil fontified nil 17760 . 17796) (nil fontified nil 17758 . 17760) (nil fontified nil 17716 . 17758) (nil fontified nil 17714 . 17716) (nil fontified nil 17695 . 17714) (nil fontified nil 17690 . 17695) (nil fontified nil 17666 . 17690) (nil fontified nil 17664 . 17666) (nil fontified nil 17620 . 17664) (nil fontified nil 17618 . 17620) (nil fontified nil 17571 . 17618) (nil fontified nil 17569 . 17571) (nil fontified nil 17526 . 17569) (nil fontified nil 17524 . 17526) (nil fontified nil 17484 . 17524) (nil fontified nil 17483 . 17484) (nil fontified nil 17462 . 17483) (nil fontified nil 17461 . 17462) (nil fontified nil 17436 . 17461) (nil fontified nil 17435 . 17436) (nil fontified nil 17410 . 17435) (nil fontified nil 17404 . 17410) (nil fontified nil 17394 . 17404) (nil fontified nil 17384 . 17394) (nil fontified nil 17348 . 17384) (nil fontified nil 17346 . 17348) (nil fontified nil 17303 . 17346) (nil fontified nil 17301 . 17303) (nil fontified nil 17255 . 17301) (nil fontified nil 17253 . 17255) (nil fontified nil 17211 . 17253) (nil fontified nil 17209 . 17211) (nil fontified nil 17170 . 17209) (nil fontified nil 17169 . 17170) (nil fontified nil 17149 . 17169) (nil fontified nil 17148 . 17149) (nil fontified nil 17124 . 17148) (nil fontified nil 17123 . 17124) (nil fontified nil 17099 . 17123) (nil fontified nil 17093 . 17099) (nil fontified nil 17083 . 17093) (nil fontified nil 17074 . 17083) (nil fontified nil 17039 . 17074) (nil fontified nil 17037 . 17039) (nil fontified nil 16995 . 17037) (nil fontified nil 16993 . 16995) (nil fontified nil 16948 . 16993) (nil fontified nil 16946 . 16948) (nil fontified nil 16905 . 16946) (nil fontified nil 16903 . 16905) (nil fontified nil 16865 . 16903) (nil fontified nil 16864 . 16865) (nil fontified nil 16845 . 16864) (nil fontified nil 16844 . 16845) (nil fontified nil 16821 . 16844) (nil fontified nil 16820 . 16821) (nil fontified nil 16797 . 16820) (nil fontified nil 16791 . 16797) (nil fontified nil 16783 . 16791) (nil fontified nil 16315 . 16783) (nil fontified nil 16297 . 16315) (nil fontified nil 16287 . 16297) (nil fontified nil 16285 . 16287) (nil fontified nil 16243 . 16285) (nil fontified nil 16242 . 16243) (nil fontified nil 16219 . 16242) (nil fontified nil 16218 . 16219) (nil fontified nil 16191 . 16218) (nil fontified nil 16190 . 16191) (nil fontified nil 16163 . 16190) (nil fontified nil 16157 . 16163) (nil fontified nil 16147 . 16157) (nil fontified nil 16135 . 16147) (nil fontified nil 16102 . 16135) (nil fontified nil 16100 . 16102) (nil fontified nil 16060 . 16100) (nil fontified nil 16058 . 16060) (nil fontified nil 16015 . 16058) (nil fontified nil 16013 . 16015) (nil fontified nil 15974 . 16013) (nil fontified nil 15972 . 15974) (nil fontified nil 15936 . 15972) (nil fontified nil 15935 . 15936) (nil fontified nil 15918 . 15935) (nil fontified nil 15917 . 15918) (nil fontified nil 15896 . 15917) (nil fontified nil 15895 . 15896) (nil fontified nil 15874 . 15895) (nil fontified nil 15868 . 15874) (nil fontified nil 15858 . 15868) (nil fontified nil 15852 . 15858) (nil fontified nil 15812 . 15852) (nil fontified nil 15810 . 15812) (nil fontified nil 15763 . 15810) (nil fontified nil 15761 . 15763) (nil fontified nil 15711 . 15761) (nil fontified nil 15709 . 15711) (nil fontified nil 15663 . 15709) (nil fontified nil 15661 . 15663) (nil fontified nil 15618 . 15661) (nil fontified nil 15617 . 15618) (nil fontified nil 15593 . 15617) (nil fontified nil 15592 . 15593) (nil fontified nil 15564 . 15592) (nil fontified nil 15563 . 15564) (nil fontified nil 15535 . 15563) (nil fontified nil 15529 . 15535) (nil fontified nil 15519 . 15529) (nil fontified nil 15506 . 15519) (nil fontified nil 15472 . 15506) (nil fontified nil 15470 . 15472) (nil fontified nil 15429 . 15470) (nil fontified nil 15427 . 15429) (nil fontified nil 15383 . 15427) (nil fontified nil 15381 . 15383) (nil fontified nil 15341 . 15381) (nil fontified nil 15339 . 15341) (nil fontified nil 15302 . 15339) (nil fontified nil 15301 . 15302) (nil fontified nil 15283 . 15301) (nil fontified nil 15282 . 15283) (nil fontified nil 15260 . 15282) (nil fontified nil 15259 . 15260) (nil fontified nil 15237 . 15259) (nil fontified nil 15231 . 15237) (nil fontified nil 15221 . 15231) (nil fontified nil 15214 . 15221) (nil fontified nil 15179 . 15214) (nil fontified nil 15177 . 15179) (nil fontified nil 15135 . 15177) (nil fontified nil 15133 . 15135) (nil fontified nil 15094 . 15133) (nil fontified nil 15092 . 15094) (nil fontified nil 15057 . 15092) (nil fontified nil 15055 . 15057) (nil fontified nil 15017 . 15055) (nil fontified nil 15016 . 15017) (nil fontified nil 14997 . 15016) (nil fontified nil 14996 . 14997) (nil fontified nil 14979 . 14996) (nil fontified nil 14978 . 14979) (nil fontified nil 14961 . 14978) (nil fontified nil 14955 . 14961) (nil fontified nil 14945 . 14955) (nil fontified nil 14937 . 14945) (nil fontified nil 14895 . 14937) (nil fontified nil 14893 . 14895) (nil fontified nil 14872 . 14893) (nil fontified nil 14870 . 14872) (nil fontified nil 14850 . 14870) (nil fontified nil 14848 . 14850) (nil fontified nil 14832 . 14848) (nil fontified nil 14830 . 14832) (nil fontified nil 14805 . 14830) (nil fontified nil 14797 . 14805) (14797 . 18210)) nil (25580 49161 79199 700000) 0 nil])
([nil nil ((#("{
        case \"Middle\":
        global EdgeForgivenessX, EdgeForgivenessY, MiddleMonitorWidth, MiddleMonitorHeight
        MonitorX := EdgeForgivenessX
        MonitorY := EdgeForgivenessY
        MonitorWidth := MiddleMonitorWidth
        MonitorHeight := MiddleMonitorHeight

        case \"Right\":
        global RightEdgeForgivenessX, RightEdgeForgivenessY, RightMonitorWidth, RightMonitorHeight
        MonitorX := RightEdgeForgivenessX
        MonitorY := RightEdgeForgivenessY
        MonitorWidth := RightMonitorWidth
        MonitorHeight := RightMonitorHeight

        case \"BottomRight\":
        global BottomRightEdgeForgivenessX, BottomRightEdgeForgivenessY, BottomRightMonitorWidth, BottomRightMonitorHeight
        MonitorX := BottomRightEdgeForgivenessX
        MonitorY := BottomRightEdgeForgivenessY
        MonitorWidth := BottomRightMonitorWidth
        MonitorHeight := BottomRightMonitorHeight

        case \"Left\":
        global LeftEdgeForgivenessX, LeftEdgeForgivenessY, LeftMonitorWidth, LeftMonitorHeight
        MonitorX := LeftEdgeForgivenessX
        MonitorY := LeftEdgeForgivenessY
        MonitorWidth := LeftMonitorWidth
        MonitorHeight := LeftMonitorHeight

        case \"BottomLeft\":
        global BottomLeftEdgeForgivenessX, BottomLeftEdgeForgivenessY, BottomLeftMonitorWidth, BottomLeftMonitorHeight
        MonitorX := BottomLeftEdgeForgivenessX
        MonitorY := BottomLeftEdgeForgivenessY
        MonitorWidth := BottomLeftMonitorWidth
        MonitorHeight := BottomLeftMonitorHeight

        case \"Bottom\":
        global BottomEdgeForgivenessX, BottomEdgeForgivenessY, BottomMonitorWidth, BottomMonitorHeight
        MonitorX := BottomEdgeForgivenessX
        MonitorY := BottomEdgeForgivenessY
        MonitorWidth := BottomMonitorWidth
        MonitorHeight := BottomMonitorHeight

        case \"UpLeft\":
        global UpLeftEdgeForgivenessX, UpLeftEdgeForgivenessY, UpLeftMonitorWidth, UpLeftMonitorHeight
        MonitorX := UpLeftEdgeForgivenessX
        MonitorY := UpLeftEdgeForgivenessY
        MonitorWidth := UpLeftMonitorWidth
        MonitorHeight := UpLeftMonitorHeight

        case \"UpRight\":
        global UpRightEdgeForgivenessX, UpRightEdgeForgivenessY, UpRightMonitorWidth, UpRightMonitorHeight
        MonitorX := UpRightEdgeForgivenessX
        MonitorY := UpRightEdgeForgivenessY
        MonitorWidth := UpRightMonitorWidth
        MonitorHeight := UpRightMonitorHeight

        case \"UpCenter\":
        global UpCenterEdgeForgivenessX, UpCenterEdgeForgivenessY, UpCenterMonitorWidth, UpCenterMonitorHeight
        MonitorX := UpCenterEdgeForgivenessX
        MonitorY := UpCenterEdgeForgivenessY
        MonitorWidth := UpCenterMonitorWidth
        MonitorHeight := UpCenterMonitorHeight

    }" 0 15 (fontified t) 15 23 (face font-lock-string-face fontified t) 23 33 (fontified t) 33 39 (face font-lock-keyword-face fontified t) 39 56 (fontified t) 56 57 (face font-lock-builtin-face fontified t) 57 74 (fontified t) 74 75 (face font-lock-builtin-face fontified t) 75 94 (fontified t) 94 95 (face font-lock-builtin-face fontified t) 95 133 (fontified t) 133 135 (face font-lock-builtin-face fontified t) 135 170 (fontified t) 170 172 (face font-lock-builtin-face fontified t) 172 211 (fontified t) 211 213 (face font-lock-builtin-face fontified t) 213 255 (fontified t) 255 257 (face font-lock-builtin-face fontified t) 257 292 (fontified t) 292 299 (face font-lock-string-face fontified t) 299 309 (fontified t) 309 315 (face font-lock-keyword-face fontified t) 315 337 (fontified t) 337 338 (face font-lock-builtin-face fontified t) 338 360 (fontified t) 360 361 (face font-lock-builtin-face fontified t) 361 379 (fontified t) 379 380 (face font-lock-builtin-face fontified t) 380 417 (fontified t) 417 419 (face font-lock-builtin-face fontified t) 419 459 (fontified t) 459 461 (face font-lock-builtin-face fontified t) 461 505 (fontified t) 505 507 (face font-lock-builtin-face fontified t) 507 548 (fontified t) 548 550 (face font-lock-builtin-face fontified t) 550 584 (fontified t) 584 597 (face font-lock-string-face fontified t) 597 607 (fontified t) 607 613 (face font-lock-keyword-face fontified t) 613 641 (fontified t) 641 642 (face font-lock-builtin-face fontified t) 642 670 (fontified t) 670 671 (face font-lock-builtin-face fontified t) 671 695 (fontified t) 695 696 (face font-lock-builtin-face fontified t) 696 739 (fontified t) 739 741 (face font-lock-builtin-face fontified t) 741 787 (fontified t) 787 789 (face font-lock-builtin-face fontified t) 789 839 (fontified t) 839 841 (face font-lock-builtin-face fontified t) 841 888 (fontified t) 888 890 (face font-lock-builtin-face fontified t) 890 930 (fontified t) 930 936 (face font-lock-string-face fontified t) 936 946 (fontified t) 946 952 (face font-lock-keyword-face fontified t) 952 973 (fontified t) 973 974 (face font-lock-builtin-face fontified t) 974 995 (fontified t) 995 996 (face font-lock-builtin-face fontified t) 996 1013 (fontified t) 1013 1014 (face font-lock-builtin-face fontified t) 1014 1050 (fontified t) 1050 1052 (face font-lock-builtin-face fontified t) 1052 1091 (fontified t) 1091 1093 (face font-lock-builtin-face fontified t) 1093 1136 (fontified t) 1136 1138 (face font-lock-builtin-face fontified t) 1138 1178 (fontified t) 1178 1180 (face font-lock-builtin-face fontified t) 1180 1213 (fontified t) 1213 1225 (face font-lock-string-face fontified t) 1225 1235 (fontified t) 1235 1241 (face font-lock-keyword-face fontified t) 1241 1268 (fontified t) 1268 1269 (face font-lock-builtin-face fontified t) 1269 1296 (fontified t) 1296 1297 (face font-lock-builtin-face fontified t) 1297 1320 (fontified t) 1320 1321 (face font-lock-builtin-face fontified t) 1321 1363 (fontified t) 1363 1365 (face font-lock-builtin-face fontified t) 1365 1375 (fontified t) 1375 1393 (fontified t) 1869 1875 (face font-lock-keyword-face) 1898 1899 (face font-lock-builtin-face) 1922 1923 (face font-lock-builtin-face) 1942 1943 (face font-lock-builtin-face) 1981 1983 (face font-lock-builtin-face) 2024 2026 (face font-lock-builtin-face) 2071 2073 (face font-lock-builtin-face) 2115 2117 (face font-lock-builtin-face) 2152 2161 (face font-lock-string-face) 2171 2177 (face font-lock-keyword-face) 2201 2202 (face font-lock-builtin-face) 2226 2227 (face font-lock-builtin-face) 2247 2248 (face font-lock-builtin-face) 2287 2289 (face font-lock-builtin-face) 2331 2333 (face font-lock-builtin-face) 2379 2381 (face font-lock-builtin-face) 2424 2426 (face font-lock-builtin-face) 2462 2472 (face font-lock-string-face) 2482 2488 (face font-lock-keyword-face) 2513 2514 (face font-lock-builtin-face) 2539 2540 (face font-lock-builtin-face) 2561 2562 (face font-lock-builtin-face) 2585 2602 (fontified t) 2602 2604 (face font-lock-builtin-face fontified t) 2604 2647 (fontified t) 2647 2649 (face font-lock-builtin-face fontified t) 2649 2696 (fontified t) 2696 2698 (face font-lock-builtin-face fontified t) 2698 2742 (fontified t) 2742 2744 (face font-lock-builtin-face fontified t) 2744 2768 (fontified t) 2768 2773 (fontified t)) . 14922) (undo-tree-id25 . -2773) (undo-tree-id26 . -2773) (undo-tree-id27 . 2773) (undo-tree-id28 . -1) (undo-tree-id29 . 1) (undo-tree-id30 . -2773) (undo-tree-id31 . -2773) (undo-tree-id32 . -2773) (undo-tree-id33 . -2773)) nil (25580 49161 79192 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14816) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("
" 0 1 (fontified t)) . -14816) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("    MonitorX := 0
    MonitorY := 0
    MonitorWidth := 0
    MonitorHeight := 0

    switch Monitor
    " 0 13 (fontified t) 13 15 (face font-lock-builtin-face fontified t) 15 31 (fontified t) 31 33 (face font-lock-builtin-face fontified t) 33 53 (fontified t) 53 55 (face font-lock-builtin-face fontified t) 55 76 (fontified t) 76 78 (face font-lock-builtin-face fontified t) 78 101 (fontified t) 101 105 (fontified t)) . 14817) (undo-tree-id18 . -11) (undo-tree-id19 . -105) (undo-tree-id20 . -105) (undo-tree-id21 . -105) (undo-tree-id22 . -11) (undo-tree-id23 . -105) (undo-tree-id24 . -105) 14828) nil (25580 49161 79189 900000) 0 nil])
([nil nil ((14805 . 14808)) nil (25580 49161 79185 400000) 0 nil])
([nil nil ((#("Monitor" 0 7 (fontified t)) . -14809) (undo-tree-id0 . -7) (undo-tree-id1 . -1) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7) (undo-tree-id5 . -7) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (undo-tree-id8 . -7) 14816) nil (25580 49161 79181 900000) 0 nil])
([nil nil ((14812 . 14813) (t 25580 49161 88275 0)) nil (25580 49229 22479 200000) 0 nil])
([nil nil ((14813 . 14815)) nil (25580 49229 22478 700000) 0 nil])
([nil nil ((14813 . 14817) 14815) nil (25580 49229 22478 0) 0 nil])
([nil nil ((14819 . 14822)) nil (25580 49229 22477 400000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t)) . -14820) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("o" 0 1 (fontified t)) . -14821) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 14822) nil (25580 49229 22476 600000) 0 nil])
([nil nil ((14820 . 14823)) nil (25580 49229 22467 500000) 0 nil])
([nil nil ((14824 . 14825) (#("\"" 0 1 (fontified nil)) . -14824) (14824 . 14825) (14823 . 14825)) nil (25580 49229 22467 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -14824) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 14825) nil (25580 49229 22466 100000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -14823) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#(")" 0 1 (fontified t)) . 14824)) nil (25580 49229 22463 300000) 0 nil])
([nil nil ((14823 . 14826)) nil (25580 49229 22442 500000) 0 nil])
([nil nil ((14813 . 14817) (#("    " 0 4 (fontified nil)) . 14813) (14817 . 14817) (14826 . 14827) (t 25580 49229 42340 600000)) nil (25580 49231 282732 800000) 0 nil])
([nil nil ((14827 . 14833)) nil (25580 49231 282728 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14826) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("return" 0 6 (face font-lock-warning-face fontified t)) . 14827) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) 14833 (t 25580 49231 300824 0)) nil (25580 49432 722893 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14812) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("    MsgBox Go" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 13 (fontified t)) . 14813) (undo-tree-id123 . -13) (undo-tree-id124 . -13) (undo-tree-id125 . -13) (undo-tree-id126 . -13) (undo-tree-id127 . -13) (undo-tree-id128 . -13) (undo-tree-id129 . -13) (undo-tree-id130 . -13) (undo-tree-id131 . -13) (undo-tree-id132 . -13) (undo-tree-id133 . -13) (undo-tree-id134 . -13) (undo-tree-id135 . -13) (undo-tree-id136 . -13) (undo-tree-id137 . -13) (undo-tree-id138 . -13) (undo-tree-id139 . -13) (undo-tree-id140 . -13) (undo-tree-id141 . -13) (undo-tree-id142 . -13) (undo-tree-id143 . -13) (undo-tree-id144 . -13) (undo-tree-id145 . -13) (undo-tree-id146 . -13) (undo-tree-id147 . -13) 14826) nil (25580 49432 722622 500000) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4098) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4077) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4071) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4014) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3965) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3926) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3887) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3864) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3858) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3818) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3801) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3795) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3766) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3708) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3702) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3664) 4142)) (t 25580 49432 741189 900000)) nil (25580 49444 219818 500000) 0 nil])
([nil nil ((4110 . 4125) (t 25580 49444 235749 300000)) nil (25580 49632 430712 500000) 0 nil])
([nil nil ((#("100000000000000" 0 15 (fontified t)) . 4110) (undo-tree-id167 . -15) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -5) (undo-tree-id193 . -5) (undo-tree-id194 . -5) (undo-tree-id195 . -5) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -7) (undo-tree-id205 . -7) (undo-tree-id206 . -7) (undo-tree-id207 . -7) (undo-tree-id208 . -7) (undo-tree-id209 . -7) (undo-tree-id210 . -8) (undo-tree-id211 . -8) (undo-tree-id212 . -8) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (undo-tree-id215 . -8) (undo-tree-id216 . -9) (undo-tree-id217 . -9) (undo-tree-id218 . -9) (undo-tree-id219 . -9) (undo-tree-id220 . -9) (undo-tree-id221 . -9) (undo-tree-id222 . -10) (undo-tree-id223 . -10) (undo-tree-id224 . -10) (undo-tree-id225 . -10) (undo-tree-id226 . -10) (undo-tree-id227 . -10) (undo-tree-id228 . -11) (undo-tree-id229 . -11) (undo-tree-id230 . -11) (undo-tree-id231 . -11) (undo-tree-id232 . -11) (undo-tree-id233 . -11) (undo-tree-id234 . -12) (undo-tree-id235 . -12) (undo-tree-id236 . -12) (undo-tree-id237 . -12) (undo-tree-id238 . -12) (undo-tree-id239 . -12) (undo-tree-id240 . -13) (undo-tree-id241 . -13) (undo-tree-id242 . -13) (undo-tree-id243 . -13) (undo-tree-id244 . -13) (undo-tree-id245 . -13) (undo-tree-id246 . -14) (undo-tree-id247 . -14) (undo-tree-id248 . -14) (undo-tree-id249 . -14) (undo-tree-id250 . -14) (undo-tree-id251 . -14) (undo-tree-id252 . -15) (undo-tree-id253 . -15) (undo-tree-id254 . -15) (undo-tree-id255 . -15) (undo-tree-id256 . -15) (undo-tree-id257 . -15) (undo-tree-id258 . -15) (undo-tree-id259 . -15) (undo-tree-id260 . -15) (undo-tree-id261 . -15) (undo-tree-id262 . -15) (undo-tree-id263 . -15) (undo-tree-id264 . -15) (undo-tree-id265 . -15) (undo-tree-id266 . -15) (undo-tree-id267 . -15) (undo-tree-id268 . -15) (undo-tree-id269 . -15) (undo-tree-id270 . -15)) nil (25580 49632 430706 500000) 0 nil])
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659))) nil (25580 49632 430586 0) 0 nil])
([nil nil ((#("WindowIds" 0 9 (fontified t)) . -14883) (undo-tree-id271 . -9) (undo-tree-id272 . -1) (undo-tree-id273 . -9) (undo-tree-id274 . -9) (undo-tree-id275 . -9) (undo-tree-id276 . -9) (undo-tree-id277 . -9) (undo-tree-id278 . -9) (undo-tree-id279 . -9) (undo-tree-id280 . -9) (undo-tree-id281 . -9) (undo-tree-id282 . -9) (undo-tree-id283 . -9) (t 25580 49632 467169 800000)) nil (25580 49661 610689 900000) 0 nil])
([nil nil ((14883 . 14886)) nil (25580 49661 610663 0) 0 nil])
([nil nil ((4588 . 4590) (t 25580 49661 639821 900000)) nil (25580 49705 284293 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5550 . 5551) (nil fontified nil 5532 . 5551) (nil fontified nil 5526 . 5532) (nil fontified nil 5491 . 5526) (nil fontified nil 5490 . 5491) (nil fontified nil 5463 . 5490) (nil fontified nil 5453 . 5463) (nil fontified nil 5451 . 5453) (nil fontified nil 5447 . 5451) (nil fontified nil 5438 . 5447) (nil fontified nil 5437 . 5438) (nil fontified nil 5435 . 5437) (nil fontified nil 5427 . 5435) (nil fontified nil 5425 . 5427) (nil fontified nil 5423 . 5425) (nil fontified nil 5401 . 5423) (nil fontified nil 5400 . 5401) (nil fontified nil 5398 . 5400) (nil fontified nil 5390 . 5398) (nil fontified nil 5388 . 5390) (nil fontified nil 5386 . 5388) (nil fontified nil 5366 . 5386) (nil fontified nil 5365 . 5366) (nil fontified nil 5363 . 5365) (nil fontified nil 5355 . 5363) (nil fontified nil 5353 . 5355) (nil fontified nil 5351 . 5353) (nil fontified nil 5349 . 5351) (nil fontified nil 5348 . 5349) (nil fontified nil 5346 . 5348) (nil fontified nil 5338 . 5346) (nil fontified nil 5336 . 5338) (nil fontified nil 5327 . 5336) (nil fontified nil 5323 . 5327) (nil fontified nil 5322 . 5323) (nil fontified nil 5316 . 5322) (nil fontified nil 5315 . 5316) (nil fontified nil 5314 . 5315) (nil fontified nil 5312 . 5314) (nil fontified nil 5311 . 5312) (nil fontified nil 5309 . 5311) (nil fontified nil 5308 . 5309) (nil fontified nil 5303 . 5308) (nil fontified nil 5302 . 5303) (nil fontified nil 5297 . 5302) (nil fontified nil 5296 . 5297) (nil fontified nil 5287 . 5296) (nil fontified nil 5278 . 5287) (nil fontified nil 5274 . 5278) (nil fontified nil 5273 . 5274) (nil fontified nil 5267 . 5273) (nil fontified nil 5266 . 5267) (nil fontified nil 5265 . 5266) (nil fontified nil 5259 . 5265) (nil fontified nil 5248 . 5259) (nil fontified nil 5239 . 5248) (nil fontified nil 5235 . 5239) (nil fontified nil 5234 . 5235) (nil fontified nil 5228 . 5234) (nil fontified nil 5227 . 5228) (nil fontified nil 5226 . 5227) (nil fontified nil 5220 . 5226) (nil fontified nil 5209 . 5220) (nil fontified nil 5191 . 5209) (nil fontified nil 5189 . 5191) (nil fontified nil 5188 . 5189) (nil fontified nil 5186 . 5188) (nil fontified nil 5158 . 5186) (nil fontified nil 5156 . 5158) (nil fontified nil 5146 . 5156) (nil fontified nil 5145 . 5146) (nil fontified nil 5139 . 5145) (nil fontified nil 5136 . 5139) (nil fontified nil 5132 . 5136) (nil fontified nil 5128 . 5132) (nil fontified nil 5126 . 5128) (nil fontified nil 5106 . 5126) (nil fontified nil 5105 . 5106) (nil fontified nil 5095 . 5105) (nil fontified nil 5093 . 5095) (nil fontified nil 5091 . 5093) (nil fontified nil 5087 . 5091) (nil fontified nil 5086 . 5087) (nil fontified nil 5078 . 5086) (nil fontified nil 5077 . 5078) (nil fontified nil 5076 . 5077) (nil fontified nil 5070 . 5076) (nil fontified nil 5068 . 5070) (nil fontified nil 5064 . 5068) (nil fontified nil 5062 . 5064) (nil fontified nil 5060 . 5062) (nil fontified nil 5056 . 5060) (nil fontified nil 5053 . 5056) (nil fontified nil 5046 . 5053) (nil fontified nil 5045 . 5046) (nil fontified nil 5038 . 5045) (nil fontified nil 5037 . 5038) (nil fontified nil 5031 . 5037) (nil fontified nil 5030 . 5031) (nil fontified nil 5024 . 5030) (nil fontified nil 5016 . 5024) (nil fontified nil 5015 . 5016) (nil fontified nil 5014 . 5015) (nil fontified nil 5007 . 5014) (nil fontified nil 5003 . 5007) (nil fontified nil 5001 . 5003) (nil fontified nil 4997 . 5001) (nil fontified nil 4996 . 4997) (nil fontified nil 4992 . 4996) (nil fontified nil 4991 . 4992) (nil fontified nil 4985 . 4991) (nil fontified nil 4984 . 4985) (nil fontified nil 4983 . 4984) (nil fontified nil 4981 . 4983) (nil fontified nil 4980 . 4981) (nil fontified nil 4978 . 4980) (nil fontified nil 4977 . 4978) (nil fontified nil 4972 . 4977) (nil fontified nil 4971 . 4972) (nil fontified nil 4966 . 4971) (nil fontified nil 4965 . 4966) (nil fontified nil 4956 . 4965) (nil fontified nil 4952 . 4956) (nil fontified nil 4950 . 4952) (nil fontified nil 4946 . 4950) (nil fontified nil 4945 . 4946) (nil fontified nil 4941 . 4945) (nil fontified nil 4940 . 4941) (nil fontified nil 4934 . 4940) (nil fontified nil 4933 . 4934) (nil fontified nil 4932 . 4933) (nil fontified nil 4926 . 4932) (nil fontified nil 4915 . 4926) (nil fontified nil 4911 . 4915) (nil fontified nil 4909 . 4911) (nil fontified nil 4905 . 4909) (nil fontified nil 4904 . 4905) (nil fontified nil 4900 . 4904) (nil fontified nil 4899 . 4900) (nil fontified nil 4893 . 4899) (nil fontified nil 4892 . 4893) (nil fontified nil 4891 . 4892) (nil fontified nil 4885 . 4891) (nil fontified nil 4874 . 4885) (nil fontified nil 4870 . 4874) (nil fontified nil 4868 . 4870) (nil fontified nil 4864 . 4868) (nil fontified nil 4854 . 4864) (nil fontified nil 4852 . 4854) (nil fontified nil 4851 . 4852) (nil fontified nil 4849 . 4851) (nil fontified nil 4845 . 4849) (nil fontified nil 4843 . 4845) (nil fontified nil 4839 . 4843) (nil fontified nil 4837 . 4839) (nil fontified nil 4835 . 4837) (nil fontified nil 4831 . 4835) (nil fontified nil 4817 . 4831) (nil fontified nil 4815 . 4817) (nil fontified nil 4805 . 4815) (nil fontified nil 4804 . 4805) (nil fontified nil 4798 . 4804) (nil fontified nil 4795 . 4798) (nil fontified nil 4793 . 4795) (nil fontified nil 4789 . 4793) (nil fontified nil 4788 . 4789) (nil fontified nil 4786 . 4788) (nil fontified nil 4785 . 4786) (nil fontified nil 4783 . 4785) (nil fontified nil 4776 . 4783) (nil fontified nil 4774 . 4776) (nil fontified nil 4770 . 4774) (nil fontified nil 4769 . 4770) (nil fontified nil 4768 . 4769) (nil fontified nil 4766 . 4768) (nil fontified nil 4762 . 4766) (nil fontified nil 4739 . 4762) (nil fontified nil 4737 . 4739) (nil fontified nil 4735 . 4737) (nil fontified nil 4731 . 4735) (nil fontified nil 4679 . 4731) (nil fontified nil 4677 . 4679) (nil fontified nil 4675 . 4677) (nil fontified nil 4671 . 4675) (nil fontified nil 4670 . 4671) (nil fontified nil 4669 . 4670) (nil fontified nil 4667 . 4669) (nil fontified nil 4663 . 4667) (nil fontified nil 4631 . 4663) (nil fontified nil 4629 . 4631) (nil fontified nil 4627 . 4629) (nil fontified nil 4622 . 4627) (nil fontified nil 4605 . 4622) (nil fontified nil 4590 . 4605) (4590 . 5551)) nil (25580 49705 284288 200000) 0 nil])
([nil nil ((#("
    ; ; for finding names to blacklist:
    ; ;
    ; ; if something says it's there and it's not actually,
    ; ; add to blacklist above
    ; ;
    ; Output := \"\"
    ; for Index, WindowId in AllWindowIds
    ; {
    ;     Id := WindowId
    ;     WinGetTitle Title, ahk_id %Id%
    ;     WinGetClass Class, ahk_id %Id%
    ;     WinGetPos, Xpos, Ypos, W, H, ahk_id %Id%
    ;     Output = %Output%%Xpos%,%Ypos%,%Class%,%Title%`n
    ; }
    ; MsgBox, %Output%
    ; ; return []
" 0 5 (fontified t) 5 7 (face font-lock-comment-delimiter-face fontified t) 7 9 (face font-lock-comment-face fontified t) 9 41 (face font-lock-comment-face fontified t) 41 45 (fontified t) 45 47 (face font-lock-comment-delimiter-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face fontified t) 49 53 (fontified t) 53 55 (face font-lock-comment-delimiter-face fontified t) 55 57 (face font-lock-comment-face fontified t) 57 109 (face font-lock-comment-face fontified t) 109 113 (fontified t) 113 115 (face font-lock-comment-delimiter-face fontified t) 115 117 (face font-lock-comment-face fontified t) 117 140 (face font-lock-comment-face fontified t) 140 144 (fontified t) 144 146 (face font-lock-comment-delimiter-face fontified t) 146 147 (face font-lock-comment-face fontified t) 147 148 (face font-lock-comment-face fontified t) 148 152 (fontified t) 152 154 (face font-lock-comment-delimiter-face fontified t) 154 161 (face font-lock-comment-face fontified t) 161 163 (face font-lock-comment-face fontified t) 163 164 (face font-lock-comment-face fontified t) 164 166 (face font-lock-comment-face fontified t) 166 167 (face font-lock-comment-face fontified t) 167 171 (fontified t) 171 173 (face font-lock-comment-delimiter-face fontified t) 173 176 (face font-lock-comment-face fontified t) 176 182 (face font-lock-comment-face fontified t) 182 183 (face font-lock-comment-face fontified t) 183 193 (face font-lock-comment-face fontified t) 193 195 (face font-lock-comment-face fontified t) 195 209 (face font-lock-comment-face fontified t) 209 213 (fontified t) 213 215 (face font-lock-comment-delimiter-face fontified t) 215 217 (face font-lock-comment-face fontified t) 217 221 (fontified t) 221 223 (face font-lock-comment-delimiter-face fontified t) 223 227 (face font-lock-comment-delimiter-face fontified t) 227 229 (face font-lock-comment-face fontified t) 229 230 (face font-lock-comment-face fontified t) 230 232 (face font-lock-comment-face fontified t) 232 242 (face font-lock-comment-face fontified t) 242 246 (fontified t) 246 248 (face font-lock-comment-delimiter-face fontified t) 248 252 (face font-lock-comment-delimiter-face fontified t) 252 263 (face font-lock-comment-face fontified t) 263 269 (face font-lock-comment-face fontified t) 269 270 (face font-lock-comment-face fontified t) 270 271 (face font-lock-comment-face fontified t) 271 277 (face font-lock-comment-face fontified t) 277 278 (face font-lock-comment-face fontified t) 278 282 (face font-lock-comment-face fontified t) 282 283 (face font-lock-comment-face fontified t) 283 287 (fontified t) 287 289 (face font-lock-comment-delimiter-face fontified t) 289 293 (face font-lock-comment-delimiter-face fontified t) 293 304 (face font-lock-comment-face fontified t) 304 310 (face font-lock-comment-face fontified t) 310 311 (face font-lock-comment-face fontified t) 311 312 (face font-lock-comment-face fontified t) 312 318 (face font-lock-comment-face fontified t) 318 319 (face font-lock-comment-face fontified t) 319 323 (face font-lock-comment-face fontified t) 323 324 (face font-lock-comment-face fontified t) 324 328 (fontified t) 328 330 (face font-lock-comment-delimiter-face fontified t) 330 334 (face font-lock-comment-delimiter-face fontified t) 334 343 (face font-lock-comment-face fontified t) 343 344 (face font-lock-comment-face fontified t) 344 349 (face font-lock-comment-face fontified t) 349 350 (face font-lock-comment-face fontified t) 350 355 (face font-lock-comment-face fontified t) 355 356 (face font-lock-comment-face fontified t) 356 358 (face font-lock-comment-face fontified t) 358 359 (face font-lock-comment-face fontified t) 359 361 (face font-lock-comment-face fontified t) 361 362 (face font-lock-comment-face fontified t) 362 363 (face font-lock-comment-face fontified t) 363 369 (face font-lock-comment-face fontified t) 369 370 (face font-lock-comment-face fontified t) 370 374 (face font-lock-comment-face fontified t) 374 375 (face font-lock-comment-face fontified t) 375 379 (fontified t) 379 381 (face font-lock-comment-delimiter-face fontified t) 381 385 (face font-lock-comment-delimiter-face fontified t) 385 392 (face font-lock-comment-face fontified t) 392 393 (face font-lock-comment-face fontified t) 393 394 (face font-lock-comment-face fontified t) 394 402 (face font-lock-comment-face fontified t) 402 408 (face font-lock-comment-face fontified t) 408 409 (face font-lock-comment-face fontified t) 409 415 (face font-lock-comment-face fontified t) 415 416 (face font-lock-comment-face fontified t) 416 423 (face font-lock-comment-face fontified t) 423 424 (face font-lock-comment-face fontified t) 424 431 (face font-lock-comment-face fontified t) 431 434 (face font-lock-comment-face fontified t) 434 438 (fontified t) 438 440 (face font-lock-comment-delimiter-face fontified t) 440 442 (face font-lock-comment-face fontified t) 442 446 (fontified t) 446 448 (face font-lock-comment-delimiter-face fontified t) 448 454 (face font-lock-comment-face fontified t) 454 455 (face font-lock-comment-face fontified t) 455 456 (face font-lock-comment-face fontified t) 456 464 (face font-lock-comment-face fontified t) 464 465 (face font-lock-comment-face fontified t) 465 469 (fontified t) 469 471 (face font-lock-comment-delimiter-face fontified t) 471 473 (face font-lock-comment-face fontified t) 473 483 (face font-lock-comment-face fontified t)) . -4622) (undo-tree-id290 . -483) (undo-tree-id291 . -1) (undo-tree-id292 . -483) 5105) nil (25580 49705 284272 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4622)) nil (25580 49705 284269 300000) 0 nil])
([nil nil ((#(" && (Title != \"ZPToolBarParentWnd\") && (Title != \"JamPostMessageWindow\") && (Class != \"Progman\") { ; blacklist" 0 1 (fontified t) 1 3 (face font-lock-builtin-face fontified t) 3 11 (fontified t) 11 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 34 (face font-lock-string-face fontified t) 34 36 (fontified t) 36 38 (face font-lock-builtin-face fontified t) 38 46 (fontified t) 46 48 (face font-lock-builtin-face fontified t) 48 49 (fontified t) 49 71 (face font-lock-string-face fontified t) 71 73 (fontified t) 73 75 (face font-lock-builtin-face fontified t) 75 83 (fontified t) 83 85 (face font-lock-builtin-face fontified t) 85 86 (fontified t) 86 95 (face font-lock-string-face fontified t) 95 99 (fontified t) 99 101 (face font-lock-comment-delimiter-face fontified t) 101 110 (face font-lock-comment-face fontified t)) . -4868) (undo-tree-id285 . -110) (undo-tree-id286 . -110) (undo-tree-id287 . 95) (undo-tree-id288 . -33) (undo-tree-id289 . -1) 4978) nil (25580 49705 284267 700000) 0 nil])
([nil nil ((#("!" 0 1 (face font-lock-builtin-face fontified t)) . -4862) (undo-tree-id284 . -1) 4863) nil (25580 49705 284261 600000) 0 nil])
([nil nil ((4862 . 4863)) nil (25580 49705 284244 900000) 0 nil])
([nil nil ((4866 . 4867)) nil (25580 49705 284243 0) 0 nil])
([nil nil ((4867 . 4883)) nil (25580 49705 284235 600000) 0 nil])
([nil nil ((#("indowIds" 0 8 (face font-lock-function-name-face fontified t)) . -4597) (undo-tree-id293 . -8) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -8) (undo-tree-id306 . -8) (undo-tree-id307 . -8) (undo-tree-id308 . -8) (undo-tree-id309 . -8) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (t 25580 49705 317841 700000)) nil (25580 49718 872456 100000) 0 nil])
([nil nil ((4597 . 4599)) nil (25580 49718 872417 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15280) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (#("
    ; these are retrieved in the order in which they
    ; stack - index 0 is top (and ahk is 1-indexed)
    WindowIdsInMonitor := GetWindowIdsInMonitor(FilteredWindowIds, MonitorX, MonitorY, MonitorWidth, MonitorHeight)" 0 5 (fontified t) 5 7 (face font-lock-comment-delimiter-face fontified t) 7 54 (face font-lock-comment-face fontified t) 54 58 (fontified t) 58 60 (face font-lock-comment-delimiter-face fontified t) 60 106 (face font-lock-comment-face fontified t) 106 129 (fontified t) 129 131 (face font-lock-builtin-face fontified t) 131 171 (fontified t) 171 172 (face font-lock-builtin-face fontified t) 172 181 (fontified t) 181 182 (face font-lock-builtin-face fontified t) 182 191 (fontified t) 191 192 (face font-lock-builtin-face fontified t) 192 205 (fontified t) 205 206 (face font-lock-builtin-face fontified t) 206 221 (fontified t)) . 15281) (undo-tree-id328 . -192) (undo-tree-id329 . -192) (undo-tree-id330 . -192) (undo-tree-id331 . -1) (undo-tree-id332 . -192) 15473 (t 25580 49718 904837 200000)) nil (25580 49841 493688 100000) 0 nil])
([nil nil ((15232 . 15236) (#("    " 0 4 (fontified nil)) . 15232) (15236 . 15236) (15280 . 15281)) nil (25580 49850 458199 0) 0 nil])
([nil nil ((#("TopWindowIdInMonitor" 0 20 (fontified t)) . 15286) (undo-tree-id413 . -20) (undo-tree-id414 . -20) (undo-tree-id415 . -20) (undo-tree-id416 . -20) (undo-tree-id417 . -20) (undo-tree-id418 . -20) (undo-tree-id419 . -20) (undo-tree-id420 . -20) (undo-tree-id421 . -20) (undo-tree-id422 . -20) (undo-tree-id423 . -20) (undo-tree-id424 . -20) (undo-tree-id425 . -20) (undo-tree-id426 . -20) (undo-tree-id427 . -20) (undo-tree-id428 . -20) (undo-tree-id429 . -20) (undo-tree-id430 . -20) (undo-tree-id431 . -20) (undo-tree-id432 . -20) (undo-tree-id433 . -20) (undo-tree-id434 . -20) (undo-tree-id435 . -20) (undo-tree-id436 . -20) (undo-tree-id437 . -20) (undo-tree-id438 . -20) (undo-tree-id439 . -20) (undo-tree-id440 . -20) (undo-tree-id441 . -20) (undo-tree-id442 . -20) (undo-tree-id443 . -20) (undo-tree-id444 . -20) (undo-tree-id445 . -20) (undo-tree-id446 . -20) (undo-tree-id447 . -20) (undo-tree-id448 . -20) (undo-tree-id449 . -20) (undo-tree-id450 . -20) (undo-tree-id451 . -20) (undo-tree-id452 . -20) (undo-tree-id453 . -20) (undo-tree-id454 . -20) (undo-tree-id455 . -20) (undo-tree-id456 . -20) (undo-tree-id457 . -20) (undo-tree-id458 . -20) (undo-tree-id459 . -20) (undo-tree-id460 . -20) (undo-tree-id461 . -20) (undo-tree-id462 . -20) (undo-tree-id463 . -20) (undo-tree-id464 . -20) (undo-tree-id465 . -20) (undo-tree-id466 . -20) (undo-tree-id467 . -20) (undo-tree-id468 . -20) (undo-tree-id469 . -20) (undo-tree-id470 . -20) (undo-tree-id471 . -20) (undo-tree-id472 . -20) (undo-tree-id473 . -20) (undo-tree-id474 . -20) (undo-tree-id475 . -20) (undo-tree-id476 . -20) (undo-tree-id477 . -20) (undo-tree-id478 . -20) (undo-tree-id479 . -20) (undo-tree-id480 . -20) (undo-tree-id481 . -20) 15306) nil (25580 49869 389127 300000) 0 nil] [nil nil ((15306 . 15328) (#(" := WindowIdsInMonitor" 0 1 (fontified t) 1 3 (face font-lock-builtin-face fontified t) 3 22 (fontified t)) . 15306)) ((15306 . 15328) (#(" := windowidsinmonitor" 0 1 (fontified t) 1 3 (face font-lock-builtin-face fontified t) 3 22 (fontified t)) . 15306) (undo-tree-id363 . -22) (undo-tree-id364 . -4) (undo-tree-id365 . -2) (undo-tree-id366 . -22) (undo-tree-id367 . -22) (undo-tree-id368 . -22) (undo-tree-id369 . -22) (undo-tree-id370 . -22) (undo-tree-id371 . -22) (undo-tree-id372 . -22) (undo-tree-id373 . -22) (undo-tree-id374 . -22) (undo-tree-id375 . -22) (undo-tree-id376 . -22) (undo-tree-id377 . -22) (undo-tree-id378 . -22) (undo-tree-id379 . -22) (undo-tree-id380 . -22) (undo-tree-id381 . -22) (undo-tree-id382 . -22) (undo-tree-id383 . -22) (undo-tree-id384 . -22) (undo-tree-id385 . -22) (undo-tree-id386 . -22) (undo-tree-id387 . -22) (undo-tree-id388 . -22) (undo-tree-id389 . -22) (undo-tree-id390 . -22) (undo-tree-id391 . -22) (undo-tree-id392 . -22) (undo-tree-id393 . -22) (undo-tree-id394 . -22) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -22) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2)) (25580 49845 259301 700000) 0 nil] [nil nil ((#("TopWindowIdInMonitor" 0 20 (fontified t)) . -15286) (undo-tree-id312 . -20) (undo-tree-id313 . -1) (undo-tree-id314 . -20) (undo-tree-id315 . -20) (undo-tree-id316 . -20) (undo-tree-id317 . -20) (undo-tree-id318 . -20) (undo-tree-id319 . -20)) ((15286 . 15306)) (25580 49841 749970 0) 0 nil])
([nil nil ((15286 . 15289)) nil (25580 49869 656216 100000) 0 nil])
([nil nil ((15328 . 15330) (#("[1" 0 2 (fontified t)) . 15328)) ((15328 . 15330) (#("[1" 0 2 (fontified t)) . 15328) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2)) (25580 49844 862922 200000) 0 nil])
([nil nil ((15283 . 15287) (#(" " 0 1 (fontified nil)) . 15283) (15284 . 15284) (#("    " 0 4 (fontified nil)) . 15282) (15286 . 15286) (15286 . 15287)) ((#("
" 0 1 (fontified nil)) . 15286) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (15282 . 15286) (15283 . 15284) (#("    " 0 4 (fontified t)) . 15283)) (25580 49841 493841 700000) 0 nil])
([nil nil ((#("WindowIdsInMonitor" 0 10 (fontified t) 10 18 (fontified t)) . 15293) (undo-tree-id494 . -18) (undo-tree-id495 . -18) (undo-tree-id496 . -10) (undo-tree-id497 . -10) (undo-tree-id498 . -10) (undo-tree-id499 . -10) (undo-tree-id500 . -10) (undo-tree-id501 . -10) (undo-tree-id502 . -10) (undo-tree-id503 . -10) (undo-tree-id504 . -10) (undo-tree-id505 . -10) (undo-tree-id506 . -10) (undo-tree-id507 . -10) (undo-tree-id508 . -10) (undo-tree-id509 . -10) (undo-tree-id510 . -10) (undo-tree-id511 . -10) (undo-tree-id512 . -10) (undo-tree-id513 . -10) (undo-tree-id514 . -10) (undo-tree-id515 . -10) (undo-tree-id516 . -10) (undo-tree-id517 . -10) (undo-tree-id518 . -10) (undo-tree-id519 . -18) (undo-tree-id520 . -18) (undo-tree-id521 . -18) (undo-tree-id522 . -18) (undo-tree-id523 . -18) (undo-tree-id524 . -18) (undo-tree-id525 . -18) (undo-tree-id526 . -18) (undo-tree-id527 . -18) (undo-tree-id528 . -18) (undo-tree-id529 . -18) (undo-tree-id530 . -18) (undo-tree-id531 . -18) (undo-tree-id532 . -18) 15311) nil (25580 49876 559206 500000) 0 nil] [nil nil ((15304 . 15308) (15282 . 15286) (#("    " 0 4 (fontified nil)) . 15282) (15286 . 15286) (15303 . 15304)) ((#("
" 0 1 (fontified nil)) . 15303) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (15282 . 15286) (#("    " 0 4 (fontified t)) . 15282) (undo-tree-id493 . -1) (#("    " 0 4 (fontified t)) . 15304)) (25580 49869 389300 800000) 0 nil])
([nil nil ((15330 . 15348) (#("]

    WinActivate" 0 2 (fontified t) 2 7 (fontified t) 7 18 (face font-lock-keyword-face fontified t)) . 15330)) ((15330 . 15348) (#("]

    winactivate" 0 2 (fontified t) 2 3 (fontified t) 3 7 (fontified t) 7 18 (face font-lock-keyword-face fontified t)) . 15330) (undo-tree-id345 . -18) (undo-tree-id346 . -7) (undo-tree-id347 . -18) (undo-tree-id348 . -3) (undo-tree-id349 . -18) (undo-tree-id350 . -7) (undo-tree-id351 . -18) (undo-tree-id352 . -7)) (25580 49844 862541 100000) 0 nil])
([nil nil ((15283 . 15284)) ((#("r" 0 1 (fontified t)) . 15283) (undo-tree-id333 . -1) (undo-tree-id334 . -1)) (25580 49841 493644 100000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15309 . 15310) (nil fontified nil 15293 . 15310) (15293 . 15310)) nil (25580 49880 876244 500000) 0 nil])
([nil nil ((15304 . 15305)) ((#("s" 0 1 (fontified t)) . 15304) (undo-tree-id482 . -1) (undo-tree-id483 . -1)) (25580 49869 387526 400000) 0 nil])
nil
nil
([nil nil ((#("TopWindowIdInMonitor%" 0 3 (face font-lock-variable-name-face fontified t) 3 21 (face font-lock-variable-name-face fontified t)) . -15340) (undo-tree-id619 . -21) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -1) (undo-tree-id644 . -21) (undo-tree-id645 . -21) (undo-tree-id646 . -21) (undo-tree-id647 . -21) (undo-tree-id648 . -21) (undo-tree-id649 . -21)) nil (25580 49885 332614 600000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -15314) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (#("    WinActivate, ahk_id %TopWindowIdInMonitor%" 0 4 (fontified t) 4 15 (face font-lock-keyword-face fontified t) 15 16 (face font-lock-builtin-face fontified t) 16 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t) 24 28 (face font-lock-variable-name-face fontified t) 28 46 (face font-lock-variable-name-face fontified t)) . 15315) (undo-tree-id582 . -28) (undo-tree-id583 . -25) (undo-tree-id584 . -28) (undo-tree-id585 . -28) (undo-tree-id586 . -28) (undo-tree-id587 . -28) (undo-tree-id588 . -28) (undo-tree-id589 . -28) (undo-tree-id590 . -28) (undo-tree-id591 . -28) (undo-tree-id592 . -28) (undo-tree-id593 . -28) (undo-tree-id594 . -28) (undo-tree-id595 . -28) (undo-tree-id596 . -28) (undo-tree-id597 . -28) (undo-tree-id598 . -28) (undo-tree-id599 . -28) (undo-tree-id600 . -28) (undo-tree-id601 . -28) (undo-tree-id602 . -28) (undo-tree-id603 . -28) (undo-tree-id604 . -28) (undo-tree-id605 . -28) (undo-tree-id606 . -28) (undo-tree-id607 . -24) (undo-tree-id608 . -24) (undo-tree-id609 . -24) (undo-tree-id610 . -24) (undo-tree-id611 . -24) (undo-tree-id612 . -24) (undo-tree-id613 . -25) (undo-tree-id614 . -25) (undo-tree-id615 . -25) (undo-tree-id616 . -25) (undo-tree-id617 . -25) (undo-tree-id618 . -25) 15340) ((15314 . 15361)) (25580 49880 875225 200000) 0 nil] [nil nil ((15344 . 15348) (15315 . 15319) (#("    " 0 4 (fontified nil)) . 15315) (15319 . 15319) (15343 . 15344)) ((#("
" 0 1 (fontified nil)) . 15343) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (15315 . 15319) (#("    " 0 4 (fontified t)) . 15315) (#("    " 0 4 (fontified t)) . 15344)) (25580 49876 559372 600000) 0 nil])
nil
([nil nil ((15340 . 15344)) nil (25580 49885 332171 600000) 0 nil])
nil
([nil nil ((15344 . 15345)) ((#("s" 0 1 (fontified t)) . 15344) (undo-tree-id533 . -1) (undo-tree-id534 . -1)) (25580 49876 559151 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15344) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("
    ; ActiveWindow := WinActive(\"A\")
    ; DllCall(\"FlashWindow\", UInt, ActiveWindow, Int, True)" 0 5 (fontified t) 5 7 (face font-lock-comment-delimiter-face fontified t) 7 38 (face font-lock-comment-face fontified t) 38 42 (fontified t) 42 44 (face font-lock-comment-delimiter-face fontified t) 44 97 (face font-lock-comment-face fontified t)) . 15345) (undo-tree-id691 . -67) (undo-tree-id692 . -67) (undo-tree-id693 . -67) (undo-tree-id694 . -30) (undo-tree-id695 . -30) (undo-tree-id696 . -30) (undo-tree-id697 . -30) (undo-tree-id698 . -30) (undo-tree-id699 . -30) (undo-tree-id700 . -38) (undo-tree-id701 . -1) (undo-tree-id702 . -67) (undo-tree-id703 . -67) (undo-tree-id704 . -67) (undo-tree-id705 . -67) (undo-tree-id706 . -67) (undo-tree-id707 . -67) 15412 (t 25580 49885 377876 700000)) nil (25580 49891 512536 200000) 0 nil])
nil
([nil nil ((15344 . 15346) (t 25580 49891 553467 400000)) nil (25580 49997 758260 700000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -15344) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("e" 0 1 (fontified t)) . -15345) (undo-tree-id713 . -1) 15346) nil (25580 49997 758258 200000) 0 nil])
([nil nil ((15344 . 15346)) nil (25580 49997 758253 800000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -15344) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (#("b" 0 1 (fontified t)) . -15345) (undo-tree-id710 . -1) 15346) nil (25580 50040 664363 600000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-builtin-face fontified t)) . 4856) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (t 25580 49997 799506 400000)) nil (25580 50052 962317 200000) 0 nil] [nil nil ((4142 . 4150) (t 25580 49997 799506 400000)) ((#("''''''''" 0 2 (face font-lock-string-face fontified t) 2 4 (face font-lock-string-face fontified t) 4 6 (face font-lock-string-face fontified t) 6 8 (face font-lock-string-face fontified t)) . 4142) (undo-tree-id714 . -8) (undo-tree-id715 . -8)) (25580 50040 662648 400000) 0 nil])
([nil nil ((4856 . 4857) (t 25580 50053 4480 0)) nil (25580 50204 149467 100000) 0 nil])
nil
([nil nil ((4879 . 4881) (t 25580 50204 205801 700000)) nil (25580 50217 962891 800000) 0 nil])
([nil nil ((4881 . 4883) (t 25580 50217 998160 100000)) nil (25580 50261 985959 500000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4881) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (#("q" 0 1 (fontified t)) . -4882) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) 4883) nil (25580 50261 985951 500000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 10) (4963 . 4964) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (4903 . 4904) (apply deactivate-cursor-after-undo 9) (4627 . 4628) (apply activate-cursor-for-undo 9) (4901 . 4902) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 10) (4959 . 4960) (apply deactivate-cursor-after-undo 10) (4626 . 4627) (t 25580 50262 24085 300000)) nil (25580 51071 452826 300000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 13) (4581 . 4582) (apply deactivate-cursor-after-undo 13) (apply activate-cursor-for-undo 12) (4521 . 4522) (apply deactivate-cursor-after-undo 12) (4154 . 4155) (apply activate-cursor-for-undo 12) (4519 . 4520) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 13) (4577 . 4578) (apply deactivate-cursor-after-undo 13) (4153 . 4154)) nil (25580 52369 797753 400000) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4098) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4077) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4071) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4014) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3965) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3926) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3887) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3864) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3858) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3818) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3801) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3795) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3766) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3708) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3702) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3664) 3659))) nil (25580 52375 683676 700000) 0 nil] [nil nil ((#("
    ; ; for finding names to blacklist:
    ; ;
    ; ; if something says it's there and it's not actually,
    ; ; add to blacklist above
    ; ;
    ; Output := \"\"
    ; for Index, WindowId in AllWindowIds
    ; {
    ;     Id := WindowId
    ;     WinGetTitle Title, ahk_id %Id%
    ;     WinGetClass Class, ahk_id %Id%
    ;     WinGetPos, Xpos, Ypos, W, H, ahk_id %Id%
    ;     Output = %Output%%Xpos%,%Ypos%,%Class%,%Title%`n
    ; }
    ; MsgBox, %Output%
    ; ; return []
" 0 5 (fontified t) 5 7 (face font-lock-comment-delimiter-face fontified t) 7 9 (face font-lock-comment-face fontified t) 9 41 (face font-lock-comment-face fontified t) 41 45 (fontified t) 45 47 (face font-lock-comment-delimiter-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face fontified t) 49 53 (fontified t) 53 55 (face font-lock-comment-delimiter-face fontified t) 55 57 (face font-lock-comment-face fontified t) 57 109 (face font-lock-comment-face fontified t) 109 113 (fontified t) 113 115 (face font-lock-comment-delimiter-face fontified t) 115 117 (face font-lock-comment-face fontified t) 117 140 (face font-lock-comment-face fontified t) 140 144 (fontified t) 144 146 (face font-lock-comment-delimiter-face fontified t) 146 147 (face font-lock-comment-face fontified t) 147 148 (face font-lock-comment-face fontified t) 148 152 (fontified t) 152 154 (face font-lock-comment-delimiter-face fontified t) 154 161 (face font-lock-comment-face fontified t) 161 163 (face font-lock-comment-face fontified t) 163 164 (face font-lock-comment-face fontified t) 164 166 (face font-lock-comment-face fontified t) 166 167 (face font-lock-comment-face fontified t) 167 171 (fontified t) 171 173 (face font-lock-comment-delimiter-face fontified t) 173 176 (face font-lock-comment-face fontified t) 176 182 (face font-lock-comment-face fontified t) 182 183 (face font-lock-comment-face fontified t) 183 193 (face font-lock-comment-face fontified t) 193 195 (face font-lock-comment-face fontified t) 195 209 (face font-lock-comment-face fontified t) 209 213 (fontified t) 213 215 (face font-lock-comment-delimiter-face fontified t) 215 217 (face font-lock-comment-face fontified t) 217 221 (fontified t) 221 223 (face font-lock-comment-delimiter-face fontified t) 223 227 (face font-lock-comment-delimiter-face fontified t) 227 229 (face font-lock-comment-face fontified t) 229 230 (face font-lock-comment-face fontified t) 230 232 (face font-lock-comment-face fontified t) 232 242 (face font-lock-comment-face fontified t) 242 246 (fontified t) 246 248 (face font-lock-comment-delimiter-face fontified t) 248 252 (face font-lock-comment-delimiter-face fontified t) 252 263 (face font-lock-comment-face fontified t) 263 269 (face font-lock-comment-face fontified t) 269 270 (face font-lock-comment-face fontified t) 270 271 (face font-lock-comment-face fontified t) 271 277 (face font-lock-comment-face fontified t) 277 278 (face font-lock-comment-face fontified t) 278 282 (face font-lock-comment-face fontified t) 282 283 (face font-lock-comment-face fontified t) 283 287 (fontified t) 287 289 (face font-lock-comment-delimiter-face fontified t) 289 293 (face font-lock-comment-delimiter-face fontified t) 293 304 (face font-lock-comment-face fontified t) 304 310 (face font-lock-comment-face fontified t) 310 311 (face font-lock-comment-face fontified t) 311 312 (face font-lock-comment-face fontified t) 312 318 (face font-lock-comment-face fontified t) 318 319 (face font-lock-comment-face fontified t) 319 323 (face font-lock-comment-face fontified t) 323 324 (face font-lock-comment-face fontified t) 324 328 (fontified t) 328 330 (face font-lock-comment-delimiter-face fontified t) 330 334 (face font-lock-comment-delimiter-face fontified t) 334 343 (face font-lock-comment-face fontified t) 343 344 (face font-lock-comment-face fontified t) 344 349 (face font-lock-comment-face fontified t) 349 350 (face font-lock-comment-face fontified t) 350 355 (face font-lock-comment-face fontified t) 355 356 (face font-lock-comment-face fontified t) 356 358 (face font-lock-comment-face fontified t) 358 359 (face font-lock-comment-face fontified t) 359 361 (face font-lock-comment-face fontified t) 361 362 (face font-lock-comment-face fontified t) 362 363 (face font-lock-comment-face fontified t) 363 369 (face font-lock-comment-face fontified t) 369 370 (face font-lock-comment-face fontified t) 370 374 (face font-lock-comment-face fontified t) 374 375 (face font-lock-comment-face fontified t) 375 379 (fontified t) 379 381 (face font-lock-comment-delimiter-face fontified t) 381 385 (face font-lock-comment-delimiter-face fontified t) 385 392 (face font-lock-comment-face fontified t) 392 393 (face font-lock-comment-face fontified t) 393 394 (face font-lock-comment-face fontified t) 394 402 (face font-lock-comment-face fontified t) 402 408 (face font-lock-comment-face fontified t) 408 409 (face font-lock-comment-face fontified t) 409 415 (face font-lock-comment-face fontified t) 415 416 (face font-lock-comment-face fontified t) 416 423 (face font-lock-comment-face fontified t) 423 424 (face font-lock-comment-face fontified t) 424 431 (face font-lock-comment-face fontified t) 431 434 (face font-lock-comment-face fontified t) 434 438 (fontified t) 438 440 (face font-lock-comment-delimiter-face fontified t) 440 442 (face font-lock-comment-face fontified t) 442 446 (fontified t) 446 448 (face font-lock-comment-delimiter-face fontified t) 448 454 (face font-lock-comment-face fontified t) 454 455 (face font-lock-comment-face fontified t) 455 456 (face font-lock-comment-face fontified t) 456 464 (face font-lock-comment-face fontified t) 464 465 (face font-lock-comment-face fontified t) 465 469 (fontified t) 469 471 (face font-lock-comment-delimiter-face fontified t) 471 473 (face font-lock-comment-face fontified t) 473 483 (face font-lock-comment-face fontified t)) . -3659) (undo-tree-id768 . 287) (undo-tree-id769 . -208) (undo-tree-id770 . -167) (undo-tree-id771 . -483) (undo-tree-id772 . -483) (undo-tree-id773 . -1) (undo-tree-id774 . -483) (undo-tree-id775 . -483) (undo-tree-id776 . -483) (undo-tree-id777 . -483) (undo-tree-id778 . -483) (undo-tree-id779 . -483) (undo-tree-id780 . -483) (undo-tree-id781 . -483) (undo-tree-id782 . -483) (undo-tree-id783 . -483) (undo-tree-id784 . -483) (undo-tree-id785 . -483) (undo-tree-id786 . -483) (undo-tree-id787 . -483) (undo-tree-id788 . -483) (undo-tree-id789 . -483) (undo-tree-id790 . -483) (undo-tree-id791 . -483) (undo-tree-id792 . -483) (undo-tree-id793 . -483) (undo-tree-id794 . -483) (undo-tree-id795 . -483) (undo-tree-id796 . -483) (undo-tree-id797 . -483) (undo-tree-id798 . -483) (undo-tree-id799 . -483) (undo-tree-id800 . -483) (undo-tree-id801 . -483) (undo-tree-id802 . -483) (undo-tree-id803 . -483) (undo-tree-id804 . -483) (undo-tree-id805 . -483) (undo-tree-id806 . -483) (undo-tree-id807 . -483) (undo-tree-id808 . -483) (undo-tree-id809 . -483) (undo-tree-id810 . -483) (undo-tree-id811 . -483) (undo-tree-id812 . -483) (undo-tree-id813 . -483) (undo-tree-id814 . -483) (undo-tree-id815 . -483) (undo-tree-id816 . -483) (undo-tree-id817 . -483) (undo-tree-id818 . -483) (undo-tree-id819 . -483) (undo-tree-id820 . -483) (undo-tree-id821 . -483) (undo-tree-id822 . -483) (undo-tree-id823 . -483) (undo-tree-id824 . -483) (undo-tree-id825 . -483) (undo-tree-id826 . -483) (undo-tree-id827 . -483) (undo-tree-id828 . -483) (undo-tree-id829 . -483) (undo-tree-id830 . -483) (undo-tree-id831 . -483) (undo-tree-id832 . -483) (undo-tree-id833 . -483) (undo-tree-id834 . -483) (undo-tree-id835 . -483) (undo-tree-id836 . -483) (undo-tree-id837 . -483) (undo-tree-id838 . -483) (undo-tree-id839 . -483) (undo-tree-id840 . -483) (undo-tree-id841 . -483) (undo-tree-id842 . -483) (undo-tree-id843 . -483) (undo-tree-id844 . -483) (undo-tree-id845 . -483) (undo-tree-id846 . -483) (undo-tree-id847 . -483) (undo-tree-id848 . -483) (undo-tree-id849 . -483) (undo-tree-id850 . -483) (undo-tree-id851 . -483) (undo-tree-id852 . -483) (undo-tree-id853 . -483) (undo-tree-id854 . -483) (undo-tree-id855 . -483) (undo-tree-id856 . -483) (undo-tree-id857 . -483) (undo-tree-id858 . -483) (undo-tree-id859 . -483) (undo-tree-id860 . -483) (undo-tree-id861 . -483) (undo-tree-id862 . -483) (undo-tree-id863 . -483) (undo-tree-id864 . -483) (undo-tree-id865 . -483) (undo-tree-id866 . -483) (undo-tree-id867 . -483) (undo-tree-id868 . -483) (undo-tree-id869 . -483) (undo-tree-id870 . -483) (undo-tree-id871 . -483) (undo-tree-id872 . -483) (undo-tree-id873 . -483) (undo-tree-id874 . -483) (undo-tree-id875 . -483) (undo-tree-id876 . -483) (undo-tree-id877 . -483) (undo-tree-id878 . -483) (undo-tree-id879 . -483) (undo-tree-id880 . -483) (undo-tree-id881 . -483) (undo-tree-id882 . -483) (undo-tree-id883 . -483) (undo-tree-id884 . -483) (undo-tree-id885 . -483) (undo-tree-id886 . -483) (undo-tree-id887 . -483) (undo-tree-id888 . -483) (undo-tree-id889 . -483) (undo-tree-id890 . -483) (undo-tree-id891 . -483) (undo-tree-id892 . -483) (undo-tree-id893 . -483) (undo-tree-id894 . -483) (undo-tree-id895 . -483) (undo-tree-id896 . -483) (undo-tree-id897 . -483) (undo-tree-id898 . -483) (undo-tree-id899 . -483) (undo-tree-id900 . -483) (undo-tree-id901 . -483) (undo-tree-id902 . -483) (undo-tree-id903 . -483) (undo-tree-id904 . -483) (undo-tree-id905 . -483) (undo-tree-id906 . -483) (undo-tree-id907 . -483) (undo-tree-id908 . -483) (undo-tree-id909 . -483) (undo-tree-id910 . -483) (undo-tree-id911 . -483) (undo-tree-id912 . -483) (undo-tree-id913 . -483) (undo-tree-id914 . -483) (undo-tree-id915 . -483) (undo-tree-id916 . -483) (undo-tree-id917 . -483) (undo-tree-id918 . -483) (undo-tree-id919 . -483) (undo-tree-id920 . -483) (undo-tree-id921 . -483) (undo-tree-id922 . -483) (undo-tree-id923 . -483) (undo-tree-id924 . -483) (undo-tree-id925 . -483) (undo-tree-id926 . -483) (undo-tree-id927 . -483) (undo-tree-id928 . -483) (undo-tree-id929 . -483) (undo-tree-id930 . -483) (undo-tree-id931 . -483) (undo-tree-id932 . -483) (undo-tree-id933 . -483) (undo-tree-id934 . -483) (undo-tree-id935 . -483) (undo-tree-id936 . -483) (undo-tree-id937 . -483) (undo-tree-id938 . -483) (undo-tree-id939 . -483) (undo-tree-id940 . -483) (undo-tree-id941 . -483) (undo-tree-id942 . -483) (undo-tree-id943 . -483) (undo-tree-id944 . -483) (t 25580 51071 486256 500000)) ((3659 . 4142)) (25580 52369 372125 700000) 0 nil])
([nil nil ((3659 . 3660)) nil (25580 52375 683674 300000) 0 nil])
([nil nil ((3659 . 3660)) ((#("^" 0 1 (face font-lock-builtin-face fontified t)) . 3659) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (t 25580 52368 353624 300000)) (25580 52368 307823 700000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -3659) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) 3660) nil (25580 52375 683667 300000) 0 nil])
nil
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 4110)) (t 25580 52375 723660 0)) nil (25580 52559 206357 500000) 0 nil])
([nil nil ((4392 . 4404) (#(" " 0 1 (fontified nil)) . 4392) (4393 . 4393) (4367 . 4375) (#("        " 0 8 (fontified nil)) . 4367) (4375 . 4375) (4391 . 4392) (t 25580 52559 248932 200000)) nil (25626 62717 582591 100000) 0 nil])
([nil nil ((4439 . 4447) (#(" " 0 1 (fontified nil)) . 4439) (4440 . 4440) (4392 . 4404) (#("            " 0 12 (fontified nil)) . 4392) (4404 . 4404) (4438 . 4439)) nil (25626 62717 582590 100000) 0 nil])
([nil nil ((4439 . 4447) (#("        " 0 8 (fontified t)) . 4439) (4447 . 4447) 4439) nil (25626 62717 582589 200000) 0 nil])
([nil nil ((4439 . 4447) (#("        " 0 8 (fontified t)) . 4439) (4447 . 4447) 4439) nil (25626 62717 582588 300000) 0 nil])
([nil nil ((4392 . 4404) (#("            " 0 12 (fontified t)) . 4392) (4404 . 4404) 4392) nil (25626 62717 582587 500000) 0 nil])
([nil nil ((4439 . 4440)) nil (25626 62717 582586 700000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 4439)) nil (25626 62717 582585 200000) 0 nil])
([nil nil ((4439 . 4447) (#("        " 0 8 (fontified t)) . 4439) (4447 . 4447) 4439) nil (25626 62717 582584 300000) 0 nil])
([nil nil ((4439 . 4447) (#("        " 0 8 (fontified t)) . 4439) (4447 . 4447) 4483) nil (25626 62717 582583 200000) 0 nil])
([nil nil ((4484 . 4492) (#(" " 0 1 (fontified nil)) . 4484) (4485 . 4485) (4439 . 4447) (#("        " 0 8 (fontified nil)) . 4439) (4447 . 4447) (4483 . 4484)) nil (25626 62717 582578 900000) 0 nil])
([nil nil ((#("; blacklist" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 11 (fontified t face font-lock-comment-face)) . 4518) (undo-tree-id3 . -11) (undo-tree-id4 . -5) (undo-tree-id5 . -1) (undo-tree-id6 . -5) (undo-tree-id7 . -6) (undo-tree-id8 . -11) (undo-tree-id9 . -11) 4529 (t 25626 62717 600481 400000)) nil (25626 62762 171235 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4517) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 4518) nil (25626 62762 171231 700000) 0 nil])
([nil nil ((4318 . 4326) (#("        " 0 8 (fontified nil)) . 4318) (4326 . 4326) (4366 . 4367)) nil (25626 62762 171216 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4377 . 4378) (nil fontified nil 4369 . 4378) (nil fontified nil 4367 . 4369) (4367 . 4378)) nil (25626 62762 171215 500000) 0 nil])
([nil nil ((4367 . 4375) 4378) nil (25626 62762 171210 800000) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4077) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4071) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4014) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3926) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3887) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3864) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3858) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3818) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3801) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3795) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3766) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3708) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3702) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3664) 3659)) (t 25626 62762 192703 100000)) nil (25626 62840 196469 900000) 0 nil])
([nil nil ((apply 2 4094 4107 undo--wrap-and-run-primitive-undo 4094 4107 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) 4094)) (t 25626 62840 207337 500000)) nil (25626 62844 710850 100000) 0 nil])
([nil nil ((apply -2 4094 4110 undo--wrap-and-run-primitive-undo 4094 4110 ((4098 . 4100) 4094)) (t 25626 62844 725834 100000)) nil (25626 62881 376044 800000) 0 nil])
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659))) nil (25626 62881 376041 0) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4077) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4071) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4014) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3926) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3887) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3864) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3858) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3818) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3801) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3795) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3766) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3708) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3702) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3664) 4142)) (t 25626 62881 395053 200000)) nil (25626 62964 757984 600000) 0 nil])
([nil nil ((apply 2 4094 4107 undo--wrap-and-run-primitive-undo 4094 4107 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) 4094))) nil (25626 62964 757980 700000) 0 nil])
([nil nil ((4425 . 4433) (#("        " 0 8 (fontified nil)) . 4425) (4433 . 4433) (4469 . 4470) (t 25626 62964 782106 600000)) nil (25626 63063 779526 500000) 0 nil])
([nil nil ((4470 . 4472)) nil (25626 63063 779524 400000) 0 nil])
([nil nil ((4470 . 4478) 4472) nil (25626 63063 779523 200000) 0 nil])
([nil nil ((4491 . 4492) (#("\"" 0 1 (fontified nil)) . -4491) (4482 . 4492) (4480 . 4483)) nil (25626 63063 779521 400000) 0 nil])
([nil nil ((4492 . 4513)) nil (25626 63063 779519 900000) 0 nil])
([nil nil ((4517 . 4518) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -4517) (4513 . 4518)) nil (25626 63063 779513 700000) 0 nil])
([nil nil ((apply -2 4094 4110 undo--wrap-and-run-primitive-undo 4094 4110 ((4098 . 4100) 4094)) (t 25626 63063 799431 400000)) nil (25626 63077 119137 500000) 0 nil])
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659))) nil (25626 63077 119133 600000) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4077) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4071) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4014) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3926) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3887) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3864) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3858) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3818) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3801) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3795) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3766) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3708) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3702) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3664) 4142)) (t 25626 63077 138669 900000)) nil (25626 63100 594019 300000) 0 nil])
([nil nil ((apply 2 4094 4107 undo--wrap-and-run-primitive-undo 4094 4107 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) 4094))) nil (25626 63100 594015 600000) 0 nil])
([nil nil ((4470 . 4478) (#("        " 0 8 (fontified nil)) . 4470) (4478 . 4478) (4519 . 4520) (t 25626 63100 605735 100000)) nil (25626 63266 648733 200000) 0 nil])
([nil nil ((4520 . 4522)) nil (25626 63266 648732 100000) 0 nil])
([nil nil ((4520 . 4528) 4522) nil (25626 63266 648731 300000) 0 nil])
([nil nil ((4532 . 4541) (4530 . 4533)) nil (25626 63266 648730 700000) 0 nil])
([nil nil ((4561 . 4562) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -4561) (4541 . 4562) (#("\"" 0 1 (fontified nil)) . -4541) (4541 . 4542)) nil (25626 63266 648730 0) 0 nil])
([nil nil ((4520 . 4528) (#("        " 0 8 (fontified nil)) . 4520) (4528 . 4528) (4563 . 4564)) nil (25626 63266 648728 300000) 0 nil])
([nil nil ((4564 . 4566)) nil (25626 63266 648726 800000) 0 nil])
([nil nil ((4564 . 4572) 4566) nil (25626 63266 648725 500000) 0 nil])
([nil nil ((4576 . 4581) (4574 . 4577)) nil (25626 63266 648724 200000) 0 nil])
([nil nil ((4599 . 4600) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -4599) (4585 . 4600) (#("\"" 0 1 (fontified nil)) . -4585) (4581 . 4586)) nil (25626 63266 648722 600000) 0 nil])
([nil nil ((4564 . 4572) (#("        " 0 8 (fontified nil)) . 4564) (4572 . 4572) (4601 . 4602)) nil (25626 63266 648721 0) 0 nil])
([nil nil ((4602 . 4603)) nil (25626 63266 648719 600000) 0 nil])
([nil nil ((4603 . 4604)) nil (25626 63266 648718 700000) 0 nil])
([nil nil ((4602 . 4610) 4604) nil (25626 63266 648717 700000) 0 nil])
([nil nil ((4623 . 4633) (#("\"" 0 1 (fontified nil)) . -4623) (4614 . 4624) (4612 . 4615)) nil (25626 63266 648715 700000) 0 nil])
([nil nil ((4633 . 4640)) nil (25626 63266 648713 700000) 0 nil])
([nil nil ((4646 . 4647) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -4646) (4640 . 4647)) nil (25626 63266 648707 900000) 0 nil])
([nil nil ((apply -2 4094 4110 undo--wrap-and-run-primitive-undo 4094 4110 ((4098 . 4100) 4094)) (t 25626 63266 667575 700000)) nil (25626 63271 510832 100000) 0 nil])
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659))) nil (25626 63271 510828 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4458) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 4459 (t 25626 63271 522150 800000)) nil (25626 63372 95172 0) 0 nil])
([nil nil ((#("       " 0 7 (fontified t)) . -4459) 4458) nil (25626 63372 95169 700000) 0 nil])
([nil nil ((4495 . 4496)) nil (25626 63372 95168 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4496)) nil (25626 63372 95168 100000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -4496)) nil (25626 63372 95167 0) 0 nil])
([nil nil ((4537 . 4538)) nil (25626 63372 95166 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 4538)) nil (25626 63372 95165 100000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -4538)) nil (25626 63372 95164 400000) 0 nil])
([nil nil ((4573 . 4574)) nil (25626 63372 95163 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 4574)) nil (25626 63372 95162 400000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -4574)) nil (25626 63372 95161 500000) 0 nil])
([nil nil ((4603 . 4604)) nil (25626 63372 95160 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 4604)) nil (25626 63372 95159 900000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -4604)) nil (25626 63372 95158 900000) 0 nil])
([nil nil ((4642 . 4643)) nil (25626 63372 95158 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 4643) (undo-tree-id10 . -1)) nil (25626 63372 95157 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -4643)) nil (25626 63372 95143 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4411) (t 25626 63372 115558 700000)) nil (25626 63417 761656 600000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . -4412) 4411) nil (25626 63417 761652 100000) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4077) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4071) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4014) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3926) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3887) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3864) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3858) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3818) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3801) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3795) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3766) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3708) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3702) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3664) 3659)) (t 25626 63417 775037 300000)) nil (25626 63469 120794 100000) 0 nil])
([nil nil ((apply 2 4094 4107 undo--wrap-and-run-primitive-undo 4094 4107 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) 4094))) nil (25626 63470 772129 300000) 0 nil] [nil nil ((4094 . 4096)) ((#("d;" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 4094) (undo-tree-id18 . -2)) (25626 63467 947647 400000) 0 nil])
([nil nil ((4625 . 4630) (4621 . 4626) (t 25626 63470 799625 300000)) nil (25626 63628 898158 200000) 0 nil])
([nil nil ((#("; for finding names to blacklist:
    ;
    ; if something says it's there and it's not actually,
    ; add to blacklist above
    ;
    Output := \"\"
    for Index, WindowId in AllWindowIds
    {
        Id := WindowId
        WinGetTitle Title, ahk_id %Id%
        WinGetClass Class, ahk_id %Id%
        WinGetPos, Xpos, Ypos, W, H, ahk_id %Id%
        Output = %Output%%Xpos%,%Ypos%,%Class%,%Title%`n
    }
    MsgBox, %Output%
d;" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 34 (fontified t face font-lock-comment-face) 34 38 (fontified t) 38 39 (fontified t face font-lock-comment-delimiter-face) 39 40 (fontified t face font-lock-comment-face) 40 44 (fontified t) 44 46 (fontified t face font-lock-comment-delimiter-face) 46 98 (fontified t face font-lock-comment-face) 98 102 (fontified t) 102 104 (fontified t face font-lock-comment-delimiter-face) 104 127 (fontified t face font-lock-comment-face) 127 131 (fontified t) 131 132 (fontified t face font-lock-comment-delimiter-face) 132 133 (fontified t face font-lock-comment-face) 133 137 (fontified t) 137 144 (fontified t) 144 146 (fontified t face font-lock-builtin-face) 146 147 (fontified t) 147 149 (fontified t face font-lock-string-face) 149 150 (fontified t) 150 154 (fontified t) 154 157 (fontified t face font-lock-keyword-face) 157 163 (fontified t) 163 164 (fontified t face font-lock-builtin-face) 164 174 (fontified t) 174 176 (fontified t face font-lock-keyword-face) 176 190 (fontified t) 190 194 (fontified t) 194 196 (fontified t) 196 200 (fontified t) 200 204 (fontified t) 204 206 (fontified t face font-lock-keyword-face) 206 207 (fontified t) 207 209 (fontified t face font-lock-builtin-face) 209 219 (fontified t) 219 223 (fontified t) 223 227 (fontified t) 227 238 (fontified t face font-lock-keyword-face) 238 244 (fontified t) 244 245 (fontified t face font-lock-builtin-face) 245 246 (fontified t) 246 252 (fontified t face font-lock-keyword-face) 252 253 (fontified t) 253 257 (fontified t face font-lock-variable-name-face) 257 258 (fontified t) 258 262 (fontified t) 262 266 (fontified t) 266 277 (fontified t face font-lock-keyword-face) 277 283 (fontified t) 283 284 (fontified t face font-lock-builtin-face) 284 285 (fontified t) 285 291 (fontified t face font-lock-keyword-face) 291 292 (fontified t) 292 296 (fontified t face font-lock-variable-name-face) 296 297 (fontified t) 297 301 (fontified t) 301 305 (fontified t) 305 314 (fontified t face font-lock-keyword-face) 314 315 (fontified t face font-lock-builtin-face) 315 320 (fontified t) 320 321 (fontified t face font-lock-builtin-face) 321 326 (fontified t) 326 327 (fontified t face font-lock-builtin-face) 327 329 (fontified t) 329 330 (fontified t face font-lock-builtin-face) 330 332 (fontified t) 332 333 (fontified t face font-lock-builtin-face) 333 334 (fontified t) 334 340 (fontified t face font-lock-keyword-face) 340 341 (fontified t) 341 345 (fontified t face font-lock-variable-name-face) 345 346 (fontified t) 346 350 (fontified t) 350 354 (fontified t) 354 361 (fontified t) 361 362 (fontified t face font-lock-builtin-face) 362 363 (fontified t) 363 371 (fontified t face font-lock-variable-name-face) 371 377 (fontified t face font-lock-variable-name-face) 377 378 (fontified t face font-lock-builtin-face) 378 384 (fontified t face font-lock-variable-name-face) 384 385 (fontified t face font-lock-builtin-face) 385 392 (fontified t face font-lock-variable-name-face) 392 393 (fontified t face font-lock-builtin-face) 393 400 (fontified t face font-lock-variable-name-face) 400 403 (fontified t) 403 407 (fontified t) 407 409 (fontified t) 409 413 (fontified t) 413 419 (fontified t face font-lock-keyword-face) 419 420 (fontified t face font-lock-builtin-face) 420 421 (fontified t) 421 429 (fontified t face font-lock-variable-name-face) 429 430 (fontified t) 430 431 (fontified t) 431 432 (fontified t face font-lock-comment-delimiter-face)) . -3664) (undo-tree-id15 . -432) (undo-tree-id16 . -430) (undo-tree-id17 . -430) 4096) ((3664 . 4096)) (25626 63467 559054 900000) 0 nil])
([nil nil ((4631 . 4632)) nil (25626 63628 898157 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3663) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 3664) ((3663 . 3664)) (25626 63467 558958 300000) 0 nil])
([nil nil ((4630 . 4632)) nil (25626 63628 898156 700000) 0 nil])
nil
([nil nil ((4635 . 4636) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -4635) (4634 . 4636) (#("\"" 0 1 (fontified nil)) . -4634) (4632 . 4635)) nil (25626 63628 898155 800000) 0 nil])
([nil nil ((4635 . 4649)) nil (25626 63628 898154 700000) 0 nil])
([nil nil ((4649 . 4670)) nil (25626 63628 898153 900000) 0 nil])
([nil nil ((4670 . 4674)) nil (25626 63628 898153 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -4672) (undo-tree-id23 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -4673) (undo-tree-id24 . -1) 4674) nil (25626 63628 898152 300000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-string-face)) . -4670) (undo-tree-id21 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -4671) (undo-tree-id22 . -1) 4672) nil (25626 63628 898150 700000) 0 nil])
([nil nil ((4670 . 4679)) nil (25626 63628 898147 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-string-face)) . -4674) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 4675) nil (25626 63628 898145 500000) 0 nil])
([nil nil ((4674 . 4675)) nil (25626 63628 898132 0) 0 nil])
([nil nil ((apply -2 4094 4110 undo--wrap-and-run-primitive-undo 4094 4110 ((4098 . 4100) 4094)) (t 25626 63628 915845 600000)) nil (25626 63636 839833 300000) 0 nil])
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659))) nil (25626 63636 839829 200000) 0 nil])
([nil nil ((6654 . 6658) (#("    " 0 4 (fontified nil)) . 6654) (6658 . 6658) (6686 . 6687) (t 25626 63636 860994 0)) nil (25626 63923 246769 100000) 0 nil])
([nil nil ((6687 . 6690)) nil (25626 63923 246768 200000) 0 nil])
([nil nil ((6690 . 6692)) nil (25626 63923 246767 500000) 0 nil])
([nil nil ((6687 . 6693) (#("WinGe" 0 5 (fontified t)) . -6687) (undo-tree-id28 . -5) 6692) nil (25626 63923 246766 800000) 0 nil])
([nil nil ((6693 . 6694)) nil (25626 63923 246765 600000) 0 nil])
([nil nil ((6687 . 6698) (#("WinGetC" 0 7 (fontified t)) . -6687) (undo-tree-id27 . -7) 6694) nil (25626 63923 246764 700000) 0 nil])
([nil nil ((6687 . 6691) 6698) nil (25626 63923 246763 200000) 0 nil])
([nil nil ((6702 . 6713)) nil (25626 63923 246762 300000) 0 nil])
([nil nil ((#("Test_Clas" 0 9 (fontified t)) . -6704) (undo-tree-id26 . -9) 6713) nil (25626 63923 246832 100000) 0 nil])
([nil nil ((6704 . 6709)) nil (25626 63965 781867 0) 0 nil] [nil nil ((#("WinGetClass, " 0 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-builtin-face) 12 13 (fontified t)) . -6691) (undo-tree-id25 . -13) 6704) ((6691 . 6704)) (25626 63923 246756 900000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t)) . -6704) (undo-tree-id41 . -1) (#("u" 0 1 (fontified t)) . -6705) (undo-tree-id42 . -1) (#("r" 0 1 (fontified t)) . -6706) (undo-tree-id43 . -1) (#("r" 0 1 (fontified t)) . -6707) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t)) . -6708) (undo-tree-id45 . -1) 6709) nil (25626 63965 781865 800000) 0 nil])
nil
([nil nil ((6704 . 6719)) nil (25626 63965 781861 500000) 0 nil])
([nil nil ((#("Active_Monitor_" 0 15 (fontified t)) . -6704) (undo-tree-id40 . -15) 6719) nil (25626 63965 781860 600000) 0 nil])
([nil nil ((6704 . 6713)) nil (25626 63965 781859 400000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6712) (undo-tree-id39 . -1) 6713) nil (25626 63965 781858 500000) 0 nil])
([nil nil ((6712 . 6725)) nil (25626 63965 781857 100000) 0 nil])
([nil nil ((6687 . 6691) (#("    " 0 4 (fontified nil)) . 6687) (6691 . 6691) (6725 . 6726)) nil (25626 63965 781856 100000) 0 nil])
([nil nil ((6726 . 6733)) nil (25626 63965 781842 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6732) (undo-tree-id38 . -1) 6733) nil (25626 63965 781841 600000) 0 nil])
([nil nil ((6732 . 6734)) nil (25626 63965 781840 700000) 0 nil])
([nil nil ((6734 . 6740)) nil (25626 63965 781840 100000) 0 nil])
([nil nil ((6740 . 6741)) nil (25626 63965 781839 300000) 0 nil])
([nil nil ((#("%Activ;" 0 6 (fontified t) 6 7 (fontified t face font-lock-comment-delimiter-face)) . -6734) (undo-tree-id37 . -7) 6741) nil (25626 63965 781838 500000) 0 nil])
([nil nil ((6734 . 6735)) nil (25626 63965 781837 500000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -6734) (undo-tree-id36 . -1) 6735) nil (25626 63965 781836 600000) 0 nil])
([nil nil ((6734 . 6735)) nil (25626 63965 781834 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6741 . 6742) (nil fontified nil 6741 . 6742) (nil fontified nil 6735 . 6741) (6735 . 6742)) nil (25626 63965 781834 0) 0 nil])
([nil nil ((6742 . 6743)) nil (25626 63965 781833 200000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -6740) (undo-tree-id33 . -1) (#(";" 0 1 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face)) . -6741) (undo-tree-id34 . -1) (#("%" 0 1 (fontified t face font-lock-comment-face)) . -6742) (undo-tree-id35 . -1) 6743) nil (25626 63965 781832 100000) 0 nil])
([nil nil ((#("%%Acti" 0 1 (fontified t) 1 6 (fontified t)) . -6734) (undo-tree-id29 . -6) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -2) 6740) nil (25626 63965 781936 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6751 . 6752) (nil fontified nil 6734 . 6752) (6734 . 6752)) nil (25626 63979 302518 500000) 0 nil] [nil nil ((nil rear-nonsticky nil 6739 . 6740) (nil fontified nil 6735 . 6740) (nil fontified nil 6734 . 6735) (6734 . 6740)) ((#("%%Acti" 0 1 (fontified nil) 1 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 6734) (undo-tree-id46 . -6) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (nil rear-nonsticky t 6739 . 6740)) (25626 63965 781814 700000) 0 nil])
([nil nil ((6734 . 6735)) nil (25626 63979 302517 0) 0 nil])
nil
([nil nil ((6753 . 6756)) nil (25626 63979 302515 300000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-builtin-face)) . -6754) (undo-tree-id49 . -1) (#(" " 0 1 (fontified t)) . -6755) (undo-tree-id50 . -1) 6756) nil (25626 63979 302511 0) 0 nil])
([nil nil ((6726 . 6730) 6754 (t 25626 63979 354314 800000)) nil (25626 63980 532091 0) 0 nil])
([nil nil ((apply -4 6687 6763 undo--wrap-and-run-primitive-undo 6687 6763 ((6732 . 6734) (6691 . 6693) 6719)) (t 25626 63980 560549 600000)) nil (25626 64237 934990 500000) 0 nil])
([nil nil ((4387 . 4395) (#("        " 0 8 (fontified nil)) . 4387) (4395 . 4395) (4717 . 4718) (t 25626 64237 961898 600000)) nil (25652 8444 753747 800000) 0 nil])
([nil nil ((4718 . 4724)) nil (25652 8444 753747 200000) 0 nil])
([nil nil ((4724 . 4729)) nil (25652 8444 753746 700000) 0 nil])
([nil nil ((4729 . 4738)) nil (25652 8444 753746 200000) 0 nil])
([nil nil ((4718 . 4730) 4738) nil (25652 8444 753745 500000) 0 nil])
([nil nil ((4718 . 4730) (#("            " 0 12 (fontified nil)) . 4718) (4730 . 4730) (4750 . 4751)) nil (25652 8444 753744 800000) 0 nil])
([nil nil ((4751 . 4754)) nil (25652 8444 753744 200000) 0 nil])
([nil nil ((4751 . 4763) 4754) nil (25652 8444 753743 700000) 0 nil])
([nil nil ((4777 . 4778) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -4777) (4776 . 4778) (#("\"" 0 1 (fontified nil)) . -4776) (4767 . 4777) (4766 . 4768)) nil (25652 8444 753742 900000) 0 nil])
([nil nil ((4779 . 4782)) nil (25652 8444 753742 100000) 0 nil])
([nil nil ((4751 . 4763) (#("            " 0 12 (fontified nil)) . 4751) (4763 . 4763) (4781 . 4795)) nil (25652 8444 753741 400000) 0 nil])
([nil nil ((4782 . 4785)) nil (25652 8444 753740 700000) 0 nil])
([nil nil ((4782 . 4798) 4785) nil (25652 8444 753740 0) 0 nil])
([nil nil ((4801 . 4807)) nil (25652 8444 753738 800000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -4806) (undo-tree-id0 . -1) 4807) nil (25652 8458 565768 300000) 0 nil])
([nil nil ((apply 30 3659 4093 undo--wrap-and-run-primitive-undo 3659 4093 ((#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4077) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4071) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4014) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3965) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3926) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3887) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3864) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3858) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3818) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3801) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3795) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3766) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3708) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3702) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3664) 3659)) (t 25652 8444 775831 300000)) nil (25652 8463 523129 200000) 0 nil] [nil nil ((4911 . 4913) (t 25652 8444 775831 300000)) ((#("pp" 0 2 (fontified t)) . 4911) (undo-tree-id1 . -2)) (25652 8458 565147 0) 0 nil])
([nil nil ((4747 . 4759) (t 25652 8463 539775 300000)) nil (25652 8667 961287 300000) 0 nil])
nil
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . 4748) (t 25652 8667 975035 600000)) nil (25652 8693 47675 300000) 0 nil])
([nil nil ((4748 . 4749)) nil (25652 8693 47671 400000) 0 nil])
([nil nil ((apply -30 3659 4124 undo--wrap-and-run-primitive-undo 3659 4124 ((4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659)) (t 25652 8693 74049 700000)) nil (25652 8784 637963 400000) 0 nil])
([nil nil ((apply 30 3659 4093 undo--wrap-and-run-primitive-undo 3659 4093 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4077) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4071) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4014) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3926) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3887) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3864) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3858) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3818) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3801) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3795) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3766) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3708) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3702) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3664) 3659)) (t 25652 8784 651988 900000)) nil (25653 26496 302271 900000) 0 nil])
([nil nil ((#("Title" 0 5 (fontified t)) . 4737) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (t 25653 26496 314275 200000)) nil (25653 26522 522060 700000) 0 nil])
([nil nil ((4737 . 4742)) nil (25653 26522 522028 100000) 0 nil])
([nil nil ((apply -30 3659 4124 undo--wrap-and-run-primitive-undo 3659 4124 ((4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659)) (t 25653 26522 547582 700000)) nil (25653 26539 425346 700000) 0 nil])
([nil nil ((15497 . 15498) (15450 . 15454) (#("    " 0 4 (fontified nil)) . 15450) (15454 . 15454) (15496 . 15497) (t 25653 26539 445761 0)) nil (25716 46255 395774 0) 0 nil])
([nil nil ((15498 . 15499)) nil (25716 46255 395772 300000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -15498) (undo-tree-id5 . -1) 15499) nil (25716 46255 395770 700000) 0 nil])
([nil nil ((15498 . 15499)) nil (25716 46255 395768 300000) 0 nil])
([nil nil ((15499 . 15500)) nil (25716 46255 395767 100000) 0 nil])
([nil nil ((15498 . 15502) 15500) nil (25716 46255 395765 900000) 0 nil])
([nil nil ((15504 . 15505)) nil (25716 46255 395764 600000) 0 nil])
([nil nil ((15497 . 15498)) nil (25716 46255 395763 400000) 0 nil])
([nil nil ((15498 . 15508)) nil (25716 46255 395762 200000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -15506) (undo-tree-id3 . -1) (#("c" 0 1 (fontified t)) . -15507) (undo-tree-id4 . -1) 15508) nil (25716 46255 395760 300000) 0 nil])
([nil nil ((15506 . 15515)) nil (25716 46255 395757 200000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-builtin-face fontified t)) . -15513) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t)) . -15514) (undo-tree-id2 . -1) 15515) nil (25716 46255 395755 400000) 0 nil])
([nil nil ((15513 . 15516)) nil (25716 46255 395750 800000) 0 nil])
([nil nil ((15498 . 15502) 15516) nil (25716 46255 395749 400000) 0 nil])
([nil nil ((15520 . 15529)) nil (25716 46255 395748 0) 0 nil])
([nil nil ((15523 . 15543) (#("getCur" 0 6 (fontified t)) . -15523) (undo-tree-id0 . -6) 15529) nil (25716 46255 395745 700000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -15544) (15544 . 15545) (#(")" 0 1 (fontified nil)) . -15544) (15544 . 15545) (15543 . 15545)) nil (25716 46255 395708 600000) 0 nil])
([nil nil ((15553 . 15555) (t 25716 46255 420264 400000)) nil (25716 46267 557578 100000) 0 nil])
([nil nil ((15546 . 15550) (#("    " 0 4 (fontified t)) . 15546) (15550 . 15550) 15555) nil (25716 46267 557576 400000) 0 nil])
([nil nil ((15555 . 15560)) nil (25716 46267 557574 500000) 0 nil])
([nil nil ((15557 . 15571) (#("cur" 0 3 (fontified t)) . -15557) (undo-tree-id6 . -3) 15560) nil (25716 46267 557569 300000) 0 nil])
([nil nil ((15571 . 15572) (t 25716 46267 598140 800000)) nil (25716 46280 881785 100000) 0 nil])
([nil nil ((15557 . 15558)) nil (25716 46280 881779 100000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . 15557) (apply deactivate-cursor-after-undo 1) (#("c" 0 1 (fontified t)) . 15502) (t 25716 46280 905345 200000)) nil (25716 46358 435869 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 1) (15558 . 15559) (apply deactivate-cursor-after-undo 1) (15502 . 15503)) nil (25716 46358 435867 300000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -15565) (apply deactivate-cursor-after-undo 1) (#("a" 0 1 (fontified t)) . -15510) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 15511) nil (25716 46358 435865 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 1) (15566 . 15567) (apply deactivate-cursor-after-undo 1) (15510 . 15511)) nil (25716 46358 435860 700000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -15564) (apply deactivate-cursor-after-undo 1) (#("_" 0 1 (fontified t)) . -15509) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 15510) nil (25716 46358 435854 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15544) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("    msgBox %CurrentActive%" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 13 (face font-lock-variable-name-face fontified t) 13 26 (face font-lock-variable-name-face fontified t)) . 15545) (undo-tree-id13 . -11) 15556 (t 25716 46358 466691 300000)) nil (25716 46366 726915 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15496) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("
    CurrentActive := VD.getCurrentDesktopNum()" 0 1 (fontified t) 1 6 (fontified t) 6 19 (fontified t) 19 21 (face font-lock-builtin-face fontified t) 21 24 (fontified t) 24 25 (face font-lock-builtin-face fontified t) 25 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t)) . 15497) (undo-tree-id30 . -47) (undo-tree-id31 . -18) (undo-tree-id32 . -12) (undo-tree-id33 . -18) (undo-tree-id34 . -47) (undo-tree-id35 . -18) (undo-tree-id36 . -19) (undo-tree-id37 . -47) (t 25716 46366 750001 700000)) nil (25716 46391 350912 0) 0 nil])
([nil nil ((6298 . 6346) 6297) nil (25716 46391 350895 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6298) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 6299) nil (25716 46391 350893 200000) 0 nil])
([nil nil ((6316 . 6320)) nil (25716 46391 350889 500000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6317) (undo-tree-id14 . -1) (#("s" 0 1 (fontified t)) . -6318) (undo-tree-id15 . -1) (#("k" 0 1 (fontified t)) . -6319) (undo-tree-id16 . -1) 6320) nil (25716 46391 350887 100000) 0 nil])
([nil nil ((6317 . 6323)) nil (25716 46391 350864 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6298) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("    CurrentActiveDesktop := VD.getCurrentDesktopNum()" 0 5 (fontified t) 5 25 (fontified t) 25 27 (face font-lock-builtin-face fontified t) 27 30 (fontified t) 30 31 (face font-lock-builtin-face fontified t) 31 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 6299) (undo-tree-id41 . -28) (undo-tree-id42 . -24) 6327 (t 25716 46391 387799 900000)) nil (25716 46466 780201 0) 0 nil])
([nil nil ((4142 . 4144)) nil (25716 46529 591822 800000) 0 nil] [nil nil ((12283 . 12337) 12261 (t 25716 46430 431679 500000)) ((#("
    CurrentActiveDesktop := VD.getCurrentDesktopNum()" 0 1 (fontified t) 1 6 (fontified t) 6 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 31 (fontified t) 31 32 (face font-lock-builtin-face fontified t) 32 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t)) . 12283)) (25716 46466 38253 100000) 0 nil])
([nil nil ((4143 . 4197)) nil (25716 46529 591822 200000) 0 nil])
([nil nil ((12261 . 12265) (#("    " 0 4 (fontified nil)) . 12261) (12265 . 12265) (12283 . 12284)) ((#("
" 0 1 (fontified nil)) . 12283) (undo-tree-id43 . -1) (12261 . 12265) (#("    " 0 4 (fontified t)) . 12261) (t 25716 46444 225454 200000)) (25716 46444 200117 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4142) (undo-tree-id45 . -1) 4143) nil (25716 46529 591821 300000) 0 nil])
nil
([nil nil ((4874 . 4886) (#("            " 0 12 (fontified nil)) . 4874) (4886 . 4886) (4887 . 4888)) nil (25716 46529 591819 700000) 0 nil])
([nil nil ((4888 . 4890)) nil (25716 46529 591818 800000) 0 nil])
([nil nil ((4888 . 4900) 4890) nil (25716 46529 591818 0) 0 nil])
([nil nil ((4874 . 4886) (#("            " 0 12 (fontified nil)) . 4874) (4886 . 4886) (4887 . 4888)) nil (25716 46529 591816 500000) 0 nil])
([nil nil ((4888 . 4903)) nil (25716 46529 591814 800000) 0 nil])
([nil nil ((4903 . 4918)) nil (25716 46529 591814 0) 0 nil])
([nil nil ((4935 . 4939) (4933 . 4936)) nil (25716 46529 591813 300000) 0 nil])
([nil nil ((4935 . 4955) (#("Curr" 0 4 (fontified t)) . -4935) (undo-tree-id44 . -4) 4939) nil (25716 46533 948381 400000) 0 nil])
([nil nil ((4955 . 4958)) nil (25716 46645 465416 100000) 0 nil] [nil nil ((4955 . 4957)) ((#(" !" 0 2 (fontified t)) . 4955)) (25716 46533 948270 500000) 0 nil] [nil nil ((4955 . 4957)) ((#(" !" 0 2 (fontified t)) . 4955)) (25716 46529 591796 900000) 0 nil])
([nil nil ((4888 . 4900) (4918 . 4919)) nil (25716 46645 465415 0) 0 nil])
nil
nil
([nil nil ((4931 . 4938)) nil (25716 46645 465413 900000) 0 nil])
([nil nil ((4931 . 4943) 4938) nil (25716 46645 465412 700000) 0 nil])
([nil nil ((4950 . 4957)) nil (25716 46645 465411 400000) 0 nil])
([nil nil ((4957 . 4958)) nil (25716 46645 465410 200000) 0 nil])
([nil nil ((#("WindowActiveDes" 0 15 (fontified t)) . -4943) (undo-tree-id56 . -15) 4958) nil (25716 46645 465408 800000) 0 nil])
([nil nil ((4943 . 4963)) nil (25716 46645 465406 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4983 . 4984) (nil fontified nil 4963 . 4984) (4963 . 4984)) nil (25716 46645 465405 200000) 0 nil])
([nil nil ((4985 . 4986) (4984 . 4986)) nil (25716 46645 465403 600000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -4985) (undo-tree-id55 . -1) 4986) nil (25716 46645 465401 900000) 0 nil])
([nil nil ((4985 . 4991)) nil (25716 46645 465399 800000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -4985) (undo-tree-id49 . -1) (#("T" 0 1 (fontified t)) . -4986) (undo-tree-id50 . -1) (#("i" 0 1 (fontified t)) . -4987) (undo-tree-id51 . -1) (#("t" 0 1 (fontified t)) . -4988) (undo-tree-id52 . -1) (#("l" 0 1 (fontified t)) . -4989) (undo-tree-id53 . -1) (#("e" 0 1 (fontified t)) . -4990) (undo-tree-id54 . -1) 4991) nil (25716 46645 465397 0) 0 nil])
([nil nil ((4985 . 4986)) nil (25716 46645 465391 100000) 0 nil])
([nil nil ((4986 . 4990)) nil (25716 46645 465390 100000) 0 nil])
([nil nil ((5031 . 5033)) nil (25716 46645 465389 0) 0 nil])
([nil nil ((5033 . 5036)) nil (25716 46645 465387 700000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5035) (undo-tree-id48 . -1) 5036) nil (25716 46645 465386 0) 0 nil])
([nil nil ((5035 . 5038)) nil (25716 46645 465383 600000) 0 nil])
([nil nil ((5032 . 5045) (#("Window" 0 6 (fontified t)) . -5032) (undo-tree-id47 . -6) 5038) nil (25716 46645 465382 100000) 0 nil])
([nil nil ((5046 . 5049)) nil (25716 46645 465379 0) 0 nil])
([nil nil ((4992 . 5004) (#("            " 0 12 (fontified nil)) . 4992) (5004 . 5004) (5048 . 5062)) nil (25716 46645 465377 500000) 0 nil])
([nil nil ((5049 . 5052)) nil (25716 46645 465376 0) 0 nil])
([nil nil ((5049 . 5057) (#("con" 0 3 (fontified t)) . -5049) (undo-tree-id46 . -3) 5052) nil (25716 46645 465373 700000) 0 nil])
([nil nil ((5049 . 5065) 5057) nil (25716 46645 465353 700000) 0 nil])
([nil nil ((#("Title" 0 5 (fontified t)) . 4985) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) 4990 (t 25716 46645 515657 400000)) nil (25716 46857 538348 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4986 . 4987) (nil fontified nil 4985 . 4987) (4985 . 4987)) nil (25716 46857 538326 800000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -4985) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("d" 0 1 (face font-lock-keyword-face rear-nonsticky t fontified t)) . -4986) (undo-tree-id63 . -1) 4987 (t 25716 46857 557173 900000)) nil (25716 46874 573543 300000) 0 nil])
([nil nil ((4985 . 4989)) nil (25716 46877 556423 400000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -4985) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("I" 0 1 (fontified t)) . -4986) (undo-tree-id69 . -1) (#("d" 0 1 (fontified t)) . -4987) (undo-tree-id70 . -1) (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -4988) (undo-tree-id71 . -1) 4989 (t 25716 46874 597702 900000)) nil (25716 46899 422969 600000) 0 nil] [nil nil ((4990 . 5002) (4931 . 4943) (#("            " 0 12 (fontified nil)) . 4931) (4943 . 4943) (4989 . 4990) (t 25716 46874 597702 900000)) ((#("
" 0 1 (fontified nil)) . 4989) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (4931 . 4943) (#("            " 0 12 (fontified t)) . 4931) (#("            " 0 12 (fontified t)) . 4990)) (25716 46877 555303 200000) 0 nil])
([nil nil ((4985 . 4990)) nil (25716 46899 422944 900000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 5122 . 5123) (nil fontified nil 5105 . 5123) (nil fontified nil 5104 . 5105) (nil fontified nil 5078 . 5104) (nil fontified nil 5076 . 5078) (nil fontified nil 5042 . 5076) (nil fontified nil 5040 . 5042) (nil fontified nil 5006 . 5040) (nil fontified nil 5004 . 5006) (nil fontified nil 4968 . 5004) (nil fontified nil 4967 . 4968) (nil fontified nil 4963 . 4967) (nil fontified nil 4961 . 4963) (nil fontified nil 4930 . 4961) (4930 . 5123) (t 25716 46899 460881 400000)) nil (25716 48249 169833 200000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -5141) (5129 . 5141) (#("            " 0 12 (fontified nil)) . -5081) (5065 . 5081) (#("        " 0 8 (fontified nil)) . -5052) (5040 . 5052) (#("        " 0 8 (fontified nil)) . -5007) (4995 . 5007) (#("        " 0 8 (fontified nil)) . -4943) (4931 . 4943)) nil (25716 48249 169829 900000) 0 nil])
([nil nil ((4888 . 4900) (#("            " 0 12 (fontified nil)) . 4888) (4900 . 4900) (4930 . 4931)) nil (25716 48249 169827 400000) 0 nil])
([nil nil ((#("VD.getDesktopNumOfWindow(Title)" 0 2 (fontified t) 2 3 (face font-lock-builtin-face fontified t) 3 23 (fontified t) 23 24 (fontified t rear-nonsticky t) 24 30 (fontified t) 30 31 (fontified t)) . 5174) (undo-tree-id140 . -31) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . 28) (undo-tree-id144 . -24) (undo-tree-id145 . -3) (undo-tree-id146 . -25) (undo-tree-id147 . -31) (undo-tree-id148 . -30) (undo-tree-id149 . -30) (undo-tree-id150 . -25) (undo-tree-id151 . -31) (undo-tree-id152 . -31)) nil (25716 48249 169823 900000) 0 nil])
([nil nil ((5174 . 5175)) nil (25716 48249 169811 600000) 0 nil])
([nil nil ((5144 . 5175) (#("
" 0 1 (fontified t)) . -5144) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("            WindowDesktop := 0" 0 12 (fontified t) 12 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 30 (fontified t)) . -5145) (undo-tree-id127 . -29) (undo-tree-id128 . -29) (undo-tree-id129 . -29) (undo-tree-id130 . -29) (undo-tree-id131 . -29) (undo-tree-id132 . -29) (undo-tree-id133 . -30) (undo-tree-id134 . -29) (undo-tree-id135 . -29) (undo-tree-id136 . -29) (undo-tree-id137 . -29) (undo-tree-id138 . -30) (undo-tree-id139 . -1) 5175) nil (25716 48249 169808 300000) 0 nil])
([nil nil ((5130 . 5161) (#("
" 0 1 (fontified t rear-nonsticky t)) . -5143) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("            WindowDesktop := 0" 0 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 30 (fontified t)) . -5144) (undo-tree-id108 . -30) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 5174) nil (25716 48249 169781 400000) 0 nil])
([nil nil ((5066 . 5097) (#("
" 0 1 (fontified t)) . -5129) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("            WindowDesktop := 0" 0 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 30 (fontified t)) . -5130) (undo-tree-id90 . -30) 5160) nil (25716 48249 169258 300000) 0 nil])
([nil nil ((5041 . 5072) (#("
" 0 1 (fontified t)) . -5065) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("            WindowDesktop := 0" 0 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 30 (fontified t)) . -5066) (undo-tree-id87 . -30) 5096) nil (25716 48249 169254 400000) 0 nil])
([nil nil ((4996 . 5027) (#("
" 0 1 (fontified t)) . -5040) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("            WindowDesktop := 0" 0 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 30 (fontified t)) . -5041) (undo-tree-id84 . -30) 5071) nil (25716 48249 169250 200000) 0 nil])
([nil nil ((4932 . 4963) (#("
" 0 1 (fontified t)) . -4995) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("            WindowDesktop := 0" 0 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 30 (fontified t)) . -4996) (undo-tree-id81 . -30) 5026) nil (25716 48249 169242 600000) 0 nil])
([nil nil ((#("returnValue" 0 11 (fontified t)) . 5113) (undo-tree-id76 . -11) (undo-tree-id77 . -11) (undo-tree-id78 . -11) 5116) nil (25716 48249 169238 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5125 . 5126) (nil fontified nil 5113 . 5126) (5113 . 5126)) nil (25716 48249 169232 700000) 0 nil])
([nil nil ((5126 . 5127)) nil (25716 48249 169231 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5126) (undo-tree-id75 . -1) 5127) nil (25716 48249 169229 800000) 0 nil])
([nil nil ((#("=this" 0 1 (face font-lock-builtin-face fontified t) 1 5 (fontified t)) . 4998) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -5) 4999) nil (25716 48249 169226 600000) 0 nil])
([nil nil ((4998 . 5001)) nil (25716 48249 169204 900000) 0 nil])
([nil nil ((#("someID" 0 6 (fontified t)) . 5017) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) 5023 (t 25716 48249 202816 200000)) nil (25716 48307 258174 500000) 0 nil])
([nil nil ((5017 . 5019)) nil (25716 48307 258169 600000) 0 nil])
([nil nil ((5017 . 5018)) nil (25716 48307 258168 300000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 5018)) nil (25716 48307 258166 600000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -5017) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 5018) nil (25716 48307 258164 400000) 0 nil])
([nil nil ((5017 . 5018)) nil (25716 48307 258143 400000) 0 nil])
([nil nil ((#("_isValidWindow" 0 14 (fontified t)) . 5002) (undo-tree-id158 . -14) (undo-tree-id159 . -14) (undo-tree-id160 . -14) 5003 (t 25716 48307 297261 300000)) nil (25716 48447 435184 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5022 . 5023) (nil fontified nil 5002 . 5023) (5002 . 5023)) nil (25716 48452 652624 800000) 0 nil] [nil nil ((nil rear-nonsticky nil 35012 . 35013) (nil fontified nil 34981 . 35013) (nil fontified nil 34954 . 34981) (nil fontified nil 34953 . 34954) (nil fontified nil 34950 . 34953) (nil fontified nil 34944 . 34950) (nil fontified nil 34911 . 34944) (nil fontified nil 34904 . 34911) (nil fontified nil 34903 . 34904) (nil fontified nil 34897 . 34903) (nil fontified nil 34881 . 34897) (nil fontified nil 34861 . 34881) (nil fontified nil 34859 . 34861) (nil fontified nil 34847 . 34859) (nil fontified nil 34831 . 34847) (nil fontified nil 34829 . 34831) (nil fontified nil 34814 . 34829) (nil fontified nil 34807 . 34814) (nil fontified nil 34801 . 34807) (nil fontified nil 34800 . 34801) (nil fontified nil 34788 . 34800) (nil fontified nil 34786 . 34788) (nil fontified nil 34728 . 34786) (nil fontified nil 34727 . 34728) (nil fontified nil 34712 . 34727) (nil fontified nil 34708 . 34712) (nil fontified nil 34681 . 34708) (nil fontified nil 34680 . 34681) (nil fontified nil 34676 . 34680) (nil fontified nil 34674 . 34676) (nil fontified nil 34565 . 34674) (nil fontified nil 34559 . 34565) (nil fontified nil 34523 . 34559) (nil fontified nil 34522 . 34523) (nil fontified nil 34516 . 34522) (nil fontified nil 34515 . 34516) (nil fontified nil 34514 . 34515) (nil fontified nil 34502 . 34514) (nil fontified nil 34501 . 34502) (nil fontified nil 34500 . 34501) (nil fontified nil 34499 . 34500) (nil fontified nil 34494 . 34499) (nil fontified nil 34493 . 34494) (nil fontified nil 34492 . 34493) (nil fontified nil 34462 . 34492) (nil fontified nil 34461 . 34462) (nil fontified nil 34456 . 34461) (nil fontified nil 34455 . 34456) (nil fontified nil 34449 . 34455) (nil fontified nil 34448 . 34449) (nil fontified nil 34447 . 34448) (nil fontified nil 34436 . 34447) (nil fontified nil 34435 . 34436) (nil fontified nil 34430 . 34435) (nil fontified nil 34423 . 34430) (nil fontified nil 34413 . 34423) (nil fontified nil 34411 . 34413) (nil fontified nil 34367 . 34411) (nil fontified nil 34362 . 34367) (nil fontified nil 34361 . 34362) (nil fontified nil 34355 . 34361) (nil fontified nil 34337 . 34355) (nil fontified nil 34335 . 34337) (nil fontified nil 34324 . 34335) (nil fontified nil 34322 . 34324) (nil fontified nil 34300 . 34322) (nil fontified nil 34299 . 34300) (nil fontified nil 34298 . 34299) (nil fontified nil 34297 . 34298) (nil fontified nil 34292 . 34297) (nil fontified nil 34291 . 34292) (nil fontified nil 34290 . 34291) (nil fontified nil 34282 . 34290) (nil fontified nil 34281 . 34282) (nil fontified nil 34276 . 34281) (nil fontified nil 34275 . 34276) (nil fontified nil 34274 . 34275) (nil fontified nil 34252 . 34274) (nil fontified nil 34251 . 34252) (nil fontified nil 34246 . 34251) (nil fontified nil 34245 . 34246) (nil fontified nil 34239 . 34245) (nil fontified nil 34238 . 34239) (nil fontified nil 34237 . 34238) (nil fontified nil 34219 . 34237) (nil fontified nil 34218 . 34219) (nil fontified nil 34213 . 34218) (nil fontified nil 34206 . 34213) (nil fontified nil 34205 . 34206) (nil fontified nil 34203 . 34205) (nil fontified nil 34182 . 34203) (nil fontified nil 34181 . 34182) (nil fontified nil 34168 . 34181) (nil fontified nil 34154 . 34168) (nil fontified nil 34090 . 34154) (nil fontified nil 34084 . 34090) (nil fontified nil 34068 . 34084) (nil fontified nil 34067 . 34068) (nil fontified nil 34061 . 34067) (nil fontified nil 34060 . 34061) (nil fontified nil 34059 . 34060) (nil fontified nil 34051 . 34059) (nil fontified nil 34050 . 34051) (nil fontified nil 34045 . 34050) (nil fontified nil 34044 . 34045) (nil fontified nil 34043 . 34044) (nil fontified nil 34017 . 34043) (nil fontified nil 34016 . 34017) (nil fontified nil 34011 . 34016) (nil fontified nil 34010 . 34011) (nil fontified nil 34004 . 34010) (nil fontified nil 34003 . 34004) (nil fontified nil 34002 . 34003) (nil fontified nil 33988 . 34002) (nil fontified nil 33987 . 33988) (nil fontified nil 33982 . 33987) (nil fontified nil 33975 . 33982) (nil fontified nil 33964 . 33975) (nil fontified nil 33962 . 33964) (nil fontified nil 33897 . 33962) (nil fontified nil 33891 . 33897) (nil fontified nil 33856 . 33891) (nil fontified nil 33837 . 33856) (nil fontified nil 33807 . 33837) (nil fontified nil 33790 . 33807) (nil fontified nil 33781 . 33790) (nil fontified nil 33763 . 33781) (nil fontified nil 33762 . 33763) (nil fontified nil 33736 . 33762) (nil fontified nil 33734 . 33736) (nil fontified nil 33700 . 33734) (nil fontified nil 33698 . 33700) (nil fontified nil 33664 . 33698) (nil fontified nil 33662 . 33664) (nil fontified nil 33626 . 33662) (nil fontified nil 33625 . 33626) (nil fontified nil 33621 . 33625) (nil fontified nil 33619 . 33621) (nil fontified nil 33587 . 33619) (nil fontified nil 33582 . 33587) (nil fontified nil 33580 . 33582) (nil fontified nil 33548 . 33580) (nil fontified nil 33547 . 33548) (nil fontified nil 33545 . 33547) (nil fontified nil 33544 . 33545) (nil fontified nil 33543 . 33544) (nil fontified nil 33536 . 33543) (nil fontified nil 33535 . 33536) (nil fontified nil 33529 . 33535) (nil fontified nil 33518 . 33529) (nil fontified nil 33517 . 33518) (nil fontified nil 33500 . 33517) (nil fontified nil 33491 . 33500) (nil fontified nil 33489 . 33491) (nil fontified nil 33488 . 33489) (nil fontified nil 33487 . 33488) (nil fontified nil 33468 . 33487) (nil fontified nil 33459 . 33468) (nil fontified nil 33443 . 33459) (nil fontified nil 33441 . 33443) (nil fontified nil 33414 . 33441) (nil fontified nil 33393 . 33414) (nil fontified nil 33391 . 33393) (nil fontified nil 33347 . 33391) (nil fontified nil 33325 . 33347) (nil fontified nil 33305 . 33325) (nil fontified nil 33299 . 33305) (nil fontified nil 33264 . 33299) (nil fontified nil 33245 . 33264) (nil fontified nil 33195 . 33245) (nil fontified nil 33194 . 33195) (nil fontified nil 33189 . 33194) (nil fontified nil 33161 . 33189) (nil fontified nil 33159 . 33161) (nil fontified nil 33119 . 33159) (nil fontified nil 33118 . 33119) (nil fontified nil 33113 . 33118) (nil fontified nil 33112 . 33113) (nil fontified nil 33091 . 33112) (nil fontified nil 33090 . 33091) (nil fontified nil 33083 . 33090) (nil fontified nil 33063 . 33083) (nil fontified nil 33031 . 33063) (nil fontified nil 33029 . 33031) (nil fontified nil 33009 . 33029) (nil fontified nil 32995 . 33009) (nil fontified nil 32994 . 32995) (nil fontified nil 32988 . 32994) (nil fontified nil 32987 . 32988) (nil fontified nil 32985 . 32987) (nil fontified nil 32965 . 32985) (nil fontified nil 32963 . 32965) (nil fontified nil 32938 . 32963) (nil fontified nil 32929 . 32938) (nil fontified nil 32926 . 32929) (nil fontified nil 32925 . 32926) (nil fontified nil 32919 . 32925) (nil fontified nil 32918 . 32919) (nil fontified nil 32917 . 32918) (nil fontified nil 32900 . 32917) (nil fontified nil 32899 . 32900) (nil fontified nil 32893 . 32899) (nil fontified nil 32851 . 32893) (nil fontified nil 32849 . 32851) (nil fontified nil 32823 . 32849) (nil fontified nil 32821 . 32823) (nil fontified nil 32794 . 32821) (nil fontified nil 32792 . 32794) (nil fontified nil 32756 . 32792) (nil fontified nil 32755 . 32756) (nil fontified nil 32751 . 32755) (nil fontified nil 32749 . 32751) (nil fontified nil 32700 . 32749) (nil fontified nil 32692 . 32700) (nil fontified nil 32660 . 32692) (nil fontified nil 32658 . 32660) (nil fontified nil 32648 . 32658) (nil fontified nil 32646 . 32648) (nil fontified nil 32633 . 32646) (nil fontified nil 32624 . 32633) (nil fontified nil 32613 . 32624) (nil fontified nil 32611 . 32613) (nil fontified nil 32592 . 32611) (nil fontified nil 32575 . 32592) (nil fontified nil 32571 . 32575) (nil fontified nil 32563 . 32571) (nil fontified nil 11633 . 32563) (nil fontified nil 11632 . 11633) (nil fontified nil 11592 . 11632) (nil fontified nil 11591 . 11592) (nil fontified nil 11590 . 11591) (nil fontified nil 11555 . 11590) (nil fontified nil 11542 . 11555) (nil fontified nil 11541 . 11542) (nil fontified nil 11529 . 11541) (nil fontified nil 11523 . 11529) (nil fontified nil 11495 . 11523) (nil fontified nil 11493 . 11495) (nil fontified nil 11471 . 11493) (nil fontified nil 11470 . 11471) (nil fontified nil 11440 . 11470) (nil fontified nil 11284 . 11440) (nil fontified nil 11282 . 11284) (nil fontified nil 11260 . 11282) (nil fontified nil 11259 . 11260) (nil fontified nil 11254 . 11259) (nil fontified nil 11253 . 11254) (nil fontified nil 11252 . 11253) (nil fontified nil 11227 . 11252) (nil fontified nil 11226 . 11227) (nil fontified nil 11221 . 11226) (nil fontified nil 11220 . 11221) (nil fontified nil 11214 . 11220) (nil fontified nil 11213 . 11214) (nil fontified nil 11212 . 11213) (nil fontified nil 11203 . 11212) (nil fontified nil 11202 . 11203) (nil fontified nil 11197 . 11202) (nil fontified nil 11190 . 11197) (nil fontified nil 11172 . 11190) (nil fontified nil 11170 . 11172) (nil fontified nil 11144 . 11170) (nil fontified nil 11134 . 11144) (nil fontified nil 11133 . 11134) (nil fontified nil 11131 . 11133) (nil fontified nil 11130 . 11131) (nil fontified nil 11129 . 11130) (nil fontified nil 11123 . 11129) (nil fontified nil 11099 . 11123) (nil fontified nil 11097 . 11099) (nil fontified nil 11060 . 11097) (nil fontified nil 11059 . 11060) (nil fontified nil 11055 . 11059) (nil fontified nil 11053 . 11055) (nil fontified nil 10995 . 11053) (nil fontified nil 10994 . 10995) (nil fontified nil 10989 . 10994) (nil fontified nil 10988 . 10989) (nil fontified nil 10987 . 10988) (nil fontified nil 10962 . 10987) (nil fontified nil 10961 . 10962) (nil fontified nil 10956 . 10961) (nil fontified nil 10955 . 10956) (nil fontified nil 10949 . 10955) (nil fontified nil 10948 . 10949) (nil fontified nil 10947 . 10948) (nil fontified nil 10940 . 10947) (nil fontified nil 10939 . 10940) (nil fontified nil 10934 . 10939) (nil fontified nil 10927 . 10934) (nil fontified nil 10909 . 10927) (nil fontified nil 10907 . 10909) (nil fontified nil 10881 . 10907) (nil fontified nil 10871 . 10881) (nil fontified nil 10870 . 10871) (nil fontified nil 10868 . 10870) (nil fontified nil 10867 . 10868) (nil fontified nil 10866 . 10867) (nil fontified nil 10860 . 10866) (nil fontified nil 10836 . 10860) (nil fontified nil 10834 . 10836) (nil fontified nil 10797 . 10834) (nil fontified nil 10796 . 10797) (nil fontified nil 10792 . 10796) (nil fontified nil 10790 . 10792) (nil fontified nil 10723 . 10790) (nil fontified nil 10722 . 10723) (nil fontified nil 10717 . 10722) (nil fontified nil 10716 . 10717) (nil fontified nil 10715 . 10716) (nil fontified nil 10690 . 10715) (nil fontified nil 10689 . 10690) (nil fontified nil 10684 . 10689) (nil fontified nil 10683 . 10684) (nil fontified nil 10677 . 10683) (nil fontified nil 10676 . 10677) (nil fontified nil 10675 . 10676) (nil fontified nil 10668 . 10675) (nil fontified nil 10667 . 10668) (nil fontified nil 10662 . 10667) (nil fontified nil 10655 . 10662) (nil fontified nil 10640 . 10655) (nil fontified nil 10636 . 10640) (nil fontified nil 10615 . 10636) (nil fontified nil 10614 . 10615) (nil fontified nil 10609 . 10614) (nil fontified nil 10608 . 10609) (nil fontified nil 10607 . 10608) (nil fontified nil 10582 . 10607) (nil fontified nil 10581 . 10582) (nil fontified nil 10576 . 10581) (nil fontified nil 10575 . 10576) (nil fontified nil 10569 . 10575) (nil fontified nil 10568 . 10569) (nil fontified nil 10567 . 10568) (nil fontified nil 10558 . 10567) (nil fontified nil 10557 . 10558) (nil fontified nil 10552 . 10557) (nil fontified nil 10545 . 10552) (nil fontified nil 10515 . 10545) (nil fontified nil 10513 . 10515) (nil fontified nil 10481 . 10513) (nil fontified nil 10480 . 10481) (nil fontified nil 10476 . 10480) (nil fontified nil 10474 . 10476) (nil fontified nil 10444 . 10474) (nil fontified nil 10442 . 10444) (nil fontified nil 10416 . 10442) (nil fontified nil 10406 . 10416) (nil fontified nil 10405 . 10406) (nil fontified nil 10403 . 10405) (nil fontified nil 10402 . 10403) (nil fontified nil 10401 . 10402) (nil fontified nil 10395 . 10401) (nil fontified nil 10371 . 10395) (nil fontified nil 10369 . 10371) (nil fontified nil 10332 . 10369) (nil fontified nil 10331 . 10332) (nil fontified nil 10327 . 10331) (nil fontified nil 10325 . 10327) (nil fontified nil 10260 . 10325) (nil fontified nil 10254 . 10260) (nil fontified nil 10222 . 10254) (nil fontified nil 10221 . 10222) (nil fontified nil 10217 . 10221) (nil fontified nil 10215 . 10217) (nil fontified nil 10185 . 10215) (nil fontified nil 10183 . 10185) (nil fontified nil 10157 . 10183) (nil fontified nil 10147 . 10157) (nil fontified nil 10146 . 10147) (nil fontified nil 10144 . 10146) (nil fontified nil 10143 . 10144) (nil fontified nil 10142 . 10143) (nil fontified nil 10136 . 10142) (nil fontified nil 10112 . 10136) (nil fontified nil 10110 . 10112) (nil fontified nil 10091 . 10110) (nil fontified nil 10073 . 10091) (nil fontified nil 10072 . 10073) (nil fontified nil 10068 . 10072) (nil fontified nil 10066 . 10068) (nil fontified nil 10053 . 10066) (nil fontified nil 9988 . 10053) (nil fontified nil 9987 . 9988) (nil fontified nil 9982 . 9987) (nil fontified nil 9981 . 9982) (nil fontified nil 9980 . 9981) (nil fontified nil 9964 . 9980) (nil fontified nil 9963 . 9964) (nil fontified nil 9958 . 9963) (nil fontified nil 9957 . 9958) (nil fontified nil 9956 . 9957) (nil fontified nil 9926 . 9956) (nil fontified nil 9925 . 9926) (nil fontified nil 9920 . 9925) (nil fontified nil 9919 . 9920) (nil fontified nil 9913 . 9919) (nil fontified nil 9912 . 9913) (nil fontified nil 9911 . 9912) (nil fontified nil 9894 . 9911) (nil fontified nil 9893 . 9894) (nil fontified nil 9888 . 9893) (nil fontified nil 9881 . 9888) (nil fontified nil 9845 . 9881) (nil fontified nil 9844 . 9845) (nil fontified nil 9832 . 9844) (nil fontified nil 9830 . 9832) (nil fontified nil 9780 . 9830) (nil fontified nil 9779 . 9780) (nil fontified nil 9767 . 9779) (nil fontified nil 9765 . 9767) (nil fontified nil 9716 . 9765) (nil fontified nil 9711 . 9716) (nil fontified nil 9710 . 9711) (nil fontified nil 9704 . 9710) (nil fontified nil 9685 . 9704) (nil fontified nil 9681 . 9685) (nil fontified nil 9669 . 9681) (nil fontified nil 9648 . 9669) (nil fontified nil 9647 . 9648) (nil fontified nil 9618 . 9647) (nil fontified nil 9617 . 9618) (nil fontified nil 9606 . 9617) (nil fontified nil 9604 . 9606) (nil fontified nil 9555 . 9604) (nil fontified nil 9554 . 9555) (nil fontified nil 9541 . 9554) (nil fontified nil 9540 . 9541) (nil fontified nil 9527 . 9540) (nil fontified nil 9525 . 9527) (nil fontified nil 9524 . 9525) (nil fontified nil 9520 . 9524) (nil fontified nil 9508 . 9520) (nil fontified nil 9497 . 9508) (nil fontified nil 9496 . 9497) (nil fontified nil 9467 . 9496) (nil fontified nil 9466 . 9467) (nil fontified nil 9455 . 9466) (nil fontified nil 9453 . 9455) (nil fontified nil 9412 . 9453) (nil fontified nil 9411 . 9412) (nil fontified nil 9398 . 9411) (nil fontified nil 9396 . 9398) (nil fontified nil 9384 . 9396) (nil fontified nil 8998 . 9384) (nil fontified nil 8994 . 8998) (nil fontified nil 8965 . 8994) (nil fontified nil 8964 . 8965) (nil fontified nil 8940 . 8964) (nil fontified nil 8935 . 8940) (nil fontified nil 8921 . 8935) (nil fontified nil 8920 . 8921) (nil fontified nil 8899 . 8920) (nil fontified nil 8898 . 8899) (nil fontified nil 8874 . 8898) (nil fontified nil 8873 . 8874) (nil fontified nil 8862 . 8873) (nil fontified nil 8858 . 8862) (nil fontified nil 8850 . 8858) (nil fontified nil 8806 . 8850) (nil fontified nil 8805 . 8806) (nil fontified nil 8785 . 8805) (nil fontified nil 8779 . 8785) (nil fontified nil 8756 . 8779) (nil fontified nil 8754 . 8756) (nil fontified nil 8730 . 8754) (nil fontified nil 8728 . 8730) (nil fontified nil 8709 . 8728) (nil fontified nil 8708 . 8709) (nil fontified nil 8704 . 8708) (nil fontified nil 8702 . 8704) (nil fontified nil 8668 . 8702) (nil fontified nil 8663 . 8668) (nil fontified nil 8661 . 8663) (nil fontified nil 8643 . 8661) (nil fontified nil 8642 . 8643) (nil fontified nil 8575 . 8642) (nil fontified nil 8574 . 8575) (nil fontified nil 8495 . 8574) (nil fontified nil 8494 . 8495) (nil fontified nil 8490 . 8494) (nil fontified nil 8488 . 8490) (nil fontified nil 8466 . 8488) (nil fontified nil 8443 . 8466) (nil fontified nil 8442 . 8443) (nil fontified nil 8430 . 8442) (nil fontified nil 8402 . 8430) (nil fontified nil 8400 . 8402) (nil fontified nil 8388 . 8400) (nil fontified nil 8339 . 8388) (nil fontified nil 8338 . 8339) (nil fontified nil 8313 . 8338) (nil fontified nil 8311 . 8313) (nil fontified nil 8281 . 8311) (nil fontified nil 8280 . 8281) (nil fontified nil 8276 . 8280) (nil fontified nil 8274 . 8276) (nil fontified nil 8234 . 8274) (nil fontified nil 8229 . 8234) (nil fontified nil 8227 . 8229) (nil fontified nil 8183 . 8227) (nil fontified nil 8177 . 8183) (nil fontified nil 8102 . 8177) (nil fontified nil 8101 . 8102) (nil fontified nil 8097 . 8101) (nil fontified nil 8095 . 8097) (nil fontified nil 8051 . 8095) (nil fontified nil 8050 . 8051) (nil fontified nil 8046 . 8050) (nil fontified nil 8044 . 8046) (nil fontified nil 7949 . 8044) (nil fontified nil 7940 . 7949) (nil fontified nil 7937 . 7940) (nil fontified nil 7926 . 7937) (nil fontified nil 7890 . 7926) (nil fontified nil 7888 . 7890) (nil fontified nil 7861 . 7888) (nil fontified nil 7860 . 7861) (nil fontified nil 7855 . 7860) (nil fontified nil 7854 . 7855) (nil fontified nil 7853 . 7854) (nil fontified nil 7844 . 7853) (nil fontified nil 7843 . 7844) (nil fontified nil 7838 . 7843) (nil fontified nil 7837 . 7838) (nil fontified nil 7836 . 7837) (nil fontified nil 7806 . 7836) (nil fontified nil 7805 . 7806) (nil fontified nil 7800 . 7805) (nil fontified nil 7799 . 7800) (nil fontified nil 7794 . 7799) (nil fontified nil 7793 . 7794) (nil fontified nil 7792 . 7793) (nil fontified nil 7775 . 7792) (nil fontified nil 7774 . 7775) (nil fontified nil 7769 . 7774) (nil fontified nil 7762 . 7769) (nil fontified nil 7728 . 7762) (nil fontified nil 7727 . 7728) (nil fontified nil 7709 . 7727) (nil fontified nil 7708 . 7709) (nil fontified nil 7704 . 7708) (nil fontified nil 7702 . 7704) (nil fontified nil 7656 . 7702) (nil fontified nil 7655 . 7656) (nil fontified nil 7651 . 7655) (nil fontified nil 7649 . 7651) (nil fontified nil 7614 . 7649) (nil fontified nil 7612 . 7614) (nil fontified nil 7587 . 7612) (nil fontified nil 7585 . 7587) (nil fontified nil 7560 . 7585) (nil fontified nil 7550 . 7560) (nil fontified nil 7549 . 7550) (nil fontified nil 7547 . 7549) (nil fontified nil 7546 . 7547) (nil fontified nil 7545 . 7546) (nil fontified nil 7539 . 7545) (nil fontified nil 7515 . 7539) (nil fontified nil 7513 . 7515) (nil fontified nil 7494 . 7513) (nil fontified nil 7476 . 7494) (nil fontified nil 7475 . 7476) (nil fontified nil 7471 . 7475) (nil fontified nil 7469 . 7471) (nil fontified nil 7456 . 7469) (nil fontified nil 7452 . 7456) (nil fontified nil 7448 . 7452) (nil fontified nil 7446 . 7448) (nil fontified nil 7427 . 7446) (nil fontified nil 7426 . 7427) (nil fontified nil 7362 . 7426) (nil fontified nil 7361 . 7362) (nil fontified nil 7339 . 7361) (nil fontified nil 7338 . 7339) (nil fontified nil 7312 . 7338) (nil fontified nil 7311 . 7312) (nil fontified nil 7292 . 7311) (nil fontified nil 7291 . 7292) (nil fontified nil 7206 . 7291) (nil fontified nil 7200 . 7206) (nil fontified nil 7169 . 7200) (nil fontified nil 7168 . 7169) (nil fontified nil 7137 . 7168) (nil fontified nil 7136 . 7137) (nil fontified nil 7106 . 7136) (nil fontified nil 7105 . 7106) (nil fontified nil 7064 . 7105) (nil fontified nil 7063 . 7064) (nil fontified nil 7058 . 7063) (nil fontified nil 7056 . 7058) (nil fontified nil 6996 . 7056) (nil fontified nil 6995 . 6996) (nil fontified nil 6990 . 6995) (nil fontified nil 6988 . 6990) (nil fontified nil 6940 . 6988) (nil fontified nil 6939 . 6940) (nil fontified nil 6868 . 6939) (nil fontified nil 6862 . 6868) (nil fontified nil 6843 . 6862) (nil fontified nil 6625 . 6843) (nil fontified nil 6600 . 6625) (nil fontified nil 6599 . 6600) (nil fontified nil 6591 . 6599) (nil fontified nil 6525 . 6591) (nil fontified nil 6524 . 6525) (nil fontified nil 6500 . 6524) (nil fontified nil 6499 . 6500) (nil fontified nil 6481 . 6499) (nil fontified nil 6479 . 6481) (nil fontified nil 6440 . 6479) (nil fontified nil 6439 . 6440) (nil fontified nil 6427 . 6439) (nil fontified nil 6425 . 6427) (nil fontified nil 6384 . 6425) (nil fontified nil 6383 . 6384) (nil fontified nil 6379 . 6383) (nil fontified nil 6377 . 6379) (nil fontified nil 6351 . 6377) (nil fontified nil 6334 . 6351) (nil fontified nil 6333 . 6334) (nil fontified nil 6314 . 6333) (nil fontified nil 6230 . 6314) (nil fontified nil 6229 . 6230) (nil fontified nil 6204 . 6229) (nil fontified nil 6203 . 6204) (nil fontified nil 6201 . 6203) (nil fontified nil 6179 . 6201) (nil fontified nil 6178 . 6179) (nil fontified nil 6172 . 6178) (nil fontified nil 6170 . 6172) (nil fontified nil 6129 . 6170) (nil fontified nil 6127 . 6129) (nil fontified nil 6100 . 6127) (nil fontified nil 6099 . 6100) (nil fontified nil 6094 . 6099) (nil fontified nil 6093 . 6094) (nil fontified nil 6092 . 6093) (nil fontified nil 6083 . 6092) (nil fontified nil 6082 . 6083) (nil fontified nil 6077 . 6082) (nil fontified nil 6076 . 6077) (nil fontified nil 6075 . 6076) (nil fontified nil 6045 . 6075) (nil fontified nil 6044 . 6045) (nil fontified nil 6039 . 6044) (nil fontified nil 6038 . 6039) (nil fontified nil 6033 . 6038) (nil fontified nil 6032 . 6033) (nil fontified nil 6031 . 6032) (nil fontified nil 6014 . 6031) (nil fontified nil 6013 . 6014) (nil fontified nil 6008 . 6013) (nil fontified nil 6001 . 6008) (nil fontified nil 5975 . 6001) (nil fontified nil 5974 . 5975) (nil fontified nil 5956 . 5974) (nil fontified nil 5955 . 5956) (nil fontified nil 5951 . 5955) (nil fontified nil 5949 . 5951) (nil fontified nil 5900 . 5949) (nil fontified nil 5896 . 5900) (nil fontified nil 5894 . 5896) (nil fontified nil 5844 . 5894) (nil fontified nil 5842 . 5844) (nil fontified nil 5830 . 5842) (nil fontified nil 5828 . 5830) (nil fontified nil 5811 . 5828) (nil fontified nil 5808 . 5811) (nil fontified nil 5807 . 5808) (nil fontified nil 5799 . 5807) (nil fontified nil 5797 . 5799) (nil fontified nil 5785 . 5797) (nil fontified nil 5783 . 5785) (nil fontified nil 5774 . 5783) (nil fontified nil 5769 . 5774) (nil fontified nil 5767 . 5769) (nil fontified nil 5726 . 5767) (nil fontified nil 5724 . 5726) (nil fontified nil 5699 . 5724) (nil fontified nil 5697 . 5699) (nil fontified nil 5672 . 5697) (nil fontified nil 5662 . 5672) (nil fontified nil 5661 . 5662) (nil fontified nil 5659 . 5661) (nil fontified nil 5658 . 5659) (nil fontified nil 5657 . 5658) (nil fontified nil 5651 . 5657) (nil fontified nil 5627 . 5651) (nil fontified nil 5625 . 5627) (nil fontified nil 5588 . 5625) (nil fontified nil 5587 . 5588) (nil fontified nil 5583 . 5587) (nil fontified nil 5581 . 5583) (nil fontified nil 5553 . 5581) (nil fontified nil 5552 . 5553) (nil fontified nil 5499 . 5552) (nil fontified nil 5490 . 5499) (nil fontified nil 5489 . 5490) (nil fontified nil 5483 . 5489) (nil fontified nil 5482 . 5483) (nil fontified nil 5481 . 5482) (nil fontified nil 5470 . 5481) (nil fontified nil 5434 . 5470) (nil fontified nil 5432 . 5434) (nil fontified nil 5387 . 5432) (nil fontified nil 5386 . 5387) (nil fontified nil 5343 . 5386) (nil fontified nil 5342 . 5343) (nil fontified nil 5338 . 5342) (nil fontified nil 5336 . 5338) (nil fontified nil 5299 . 5336) (nil fontified nil 5297 . 5299) (nil fontified nil 5272 . 5297) (nil fontified nil 5262 . 5272) (nil fontified nil 5261 . 5262) (nil fontified nil 5259 . 5261) (nil fontified nil 5258 . 5259) (nil fontified nil 5257 . 5258) (nil fontified nil 5251 . 5257) (nil fontified nil 5227 . 5251) (nil fontified nil 5225 . 5227) (nil fontified nil 5188 . 5225) (nil fontified nil 5187 . 5188) (nil fontified nil 5183 . 5187) (nil fontified nil 5181 . 5183) (nil fontified nil 5164 . 5181) (nil fontified nil 5160 . 5164) (nil fontified nil 5158 . 5160) (nil fontified nil 5139 . 5158) (nil fontified nil 5138 . 5139) (nil fontified nil 5099 . 5138) (nil fontified nil 5070 . 5099) (nil fontified nil 5068 . 5070) (nil fontified nil 5048 . 5068) (nil fontified nil 5047 . 5048) (nil fontified nil 5041 . 5047) (nil fontified nil 5002 . 5041) (5002 . 35013)) ((#("_desktopNum_from_Hwnd(theHwnd)
        return desktopNum_ofWindow ; 0 for \"Show on all desktops\"
    }

    goToDesktopOfWindow(wintitle, activateYourWindow:=true) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        theHwnd:=found[1]

        desktopNum_ofWindow:=this._desktopNum_from_Hwnd(theHwnd)
        this.goToDesktopNum(desktopNum_ofWindow)

        if (activateYourWindow) {
            WinActivate, ahk_id %theHwnd%
        }
    }

    MoveWindowToDesktopNum(wintitle, desktopNum) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        theHwnd:=found[1]
        thePView:=found[2]

        needActivateWindowUnder:=False
        if (activeHwnd:=WinExist(\"A\")) {
            if (activeHwnd==theHwnd) {
                needActivateWindowUnder:=true
            }
        }

        IVirtualDesktop:=this._GetDesktops_Obj().GetAt(desktopNum)
        DllCall(this.MoveViewToDesktop, \"ptr\", this.IVirtualDesktopManagerInternal, \"Ptr\", thePView, \"Ptr\", IVirtualDesktop)

        if (needActivateWindowUnder) {
            if (this._activateWindowUnder()==-1) {
                this._activateDesktopBackground()
            }
        }
    }

    getRelativeDesktopNum(anchor_desktopNum, relative_count)
    {
        Desktops_Obj:=this._GetDesktops_Obj()
        count_Desktops:=Desktops_Obj.GetCount()

        absolute_desktopNum:=anchor_desktopNum + relative_count
        ;// The 1-based indices wrap around on the first and last desktop.
        ;// say count_Desktops:=3
        absolute_desktopNum:=Mod(absolute_desktopNum, count_Desktops)
        ; 4 -> 1
        if (absolute_desktopNum <= 0) {
            ; 0 -> 3
            absolute_desktopNum:=absolute_desktopNum + count_Desktops
        }

        return absolute_desktopNum
    }

    MoveWindowToRelativeDesktopNum(wintitle, relative_count) {

        desktopNum_ofWindow := this.getDesktopNumOfWindow(wintitle)
        absolute_desktopNum := this.getRelativeDesktopNum(desktopNum_ofWindow, relative_count)

        this.MoveWindowToDesktopNum(wintitle, absolute_desktopNum)

        return absolute_desktopNum
    }

    gotoRelativeDesktopNum(relative_count) {
        this.goToDesktopNum(this.getRelativeDesktopNum(this.getCurrentDesktopNum(), relative_count))
    }

    MoveWindowToCurrentDesktop(wintitle, activateYourWindow:=true) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        theHwnd:=found[1]
        thePView:=found[2]

        currentDesktopNum:=this.getCurrentDesktopNum()
        IVirtualDesktop:=this._GetDesktops_Obj().GetAt(currentDesktopNum)

        DllCall(this.MoveViewToDesktop, \"ptr\", this.IVirtualDesktopManagerInternal, \"Ptr\", thePView, \"Ptr\", IVirtualDesktop)

        if (activateYourWindow) {
            WinActivate % \"ahk_id \" theHwnd
        }
    }

    getCurrentDesktopNum() {
        IVirtualDesktop_ofCurrentDesktop:=this._dll_GetCurrentDesktop()

        desktopNum:=this._desktopNum_from_IVirtualDesktop(IVirtualDesktop_ofCurrentDesktop)
        return desktopNum
    }

    createDesktop(goThere:=false) {
        IVirtualDesktop_ofNewDesktop:=this._dll_CreateDesktop()

        if (goThere) {
            ;we could assume that it's the rightmost desktop:
            ; desktopNum:=this.getCount()
            ;but I'm not risking it
            desktopNum:=this._desktopNum_from_IVirtualDesktop(IVirtualDesktop_ofNewDesktop)
            this.goToDesktopNum(desktopNum)
        }
    }

    createUntil(howMany, goToLastlyCreated:=false) {
        howManyThereAlreadyAre:=this.getCount()
        if (howManyThereAlreadyAre>=howMany) {
            return
        }

        ;this will create until one less than wanted
        loop % howMany - howManyThereAlreadyAre - 1 {
            this.createDesktop(false)
        }
        this.createDesktop(goToLastlyCreated)
    }

    removeDesktop(desktopNum, fallback_desktopNum:=false) {
        ;FALLBACK IS ONLY USED IF YOU ARE CURRENTLY ON THE VD BEING DELETED
        ;but we NEED a fallback, regardless, so I'm not checking if you are currently on the vd being deleted

        Desktops_Obj:=this._GetDesktops_Obj()

        ;if no fallback,
        if (!fallback_desktopNum) {

            ;look left
            if (desktopNum > 1) {
                fallback_desktopNum:=desktopNum - 1
            }
            ;look right
            else if (desktopNum < Desktops_Obj.GetCount()) {
                fallback_desktopNum:=desktopNum + 1
            }
            ;no fallback to go to
            else {
                return false
            }
        }

        IVirtualDesktop:=Desktops_Obj.GetAt(desktopNum)
        IVirtualDesktop_fallback:=Desktops_Obj.GetAt(fallback_desktopNum)

        DllCall(this.Ptr_RemoveDesktop, \"UPtr\", this.IVirtualDesktopManagerInternal, \"Ptr\", IVirtualDesktop, \"Ptr\", IVirtualDesktop_fallback)
    }

    IsWindowPinned(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        viewIsPinned:=this._IsViewPinned(thePView)
        return viewIsPinned
    }
    TogglePinWindow(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        viewIsPinned:=this._IsViewPinned(thePView)
        if (viewIsPinned) {
            DllCall(this.UnPinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
        } else {
            DllCall(this.PinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
        }

    }
    PinWindow(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        DllCall(this.PinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
    }
    UnPinWindow(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        DllCall(this.UnPinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
    }

    ; COM class start ;https://github.com/Ciantic/VirtualDesktopAccessor/blob/5bc1bbaab247b5d72e70abc9432a15275fd2d229/VirtualDesktopAccessor/dllmain.h#L718-L794
    _QueryInterface_Win10(riid, ppvObject) {
        if (!ppvObject) {
            return 0x80070057 ;E_INVALIDARG
        }

        str_IID_IUnknown:=\"{00000000-0000-0000-C000-000000000046}\"
        str_IID_IVirtualDesktopNotification:=\"{C179334C-4295-40D3-BEA1-C654D965605A}\"

        VarSetCapacity(someStr, 40*2)
        DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", riid, \"Ptr\",&someStr, \"Ptr\",40)
        str_riid:=StrGet(&someStr)

        if (str_riid==str_IID_IUnknown || str_riid==str_IID_IVirtualDesktopNotification) {
            NumPut(this, ppvObject+0, 0, \"Ptr\")
            VD._AddRef_Same.Call(this)
            return 0 ;S_OK
        }
        ; *ppvObject = NULL;
        NumPut(0, ppvObject+0, 0, \"Ptr\")
        return 0x80004002 ;E_NOINTERFACE

        ; // Always set out parameter to NULL, validating it first.
        ; if (!ppvObject)
            ; return E_INVALIDARG;
        ; *ppvObject = NULL;
;
        ; if (riid == IID_IUnknown || riid == IID_IVirtualDesktopNotification)
        ; {
            ; // Increment the reference count and return the pointer.
            ; *ppvObject = (LPVOID)this;
            ; AddRef();
            ; return S_OK;
        ; }
        ; return E_NOINTERFACE;
    }
    _AddRef_Same() {
        refCount:=NumGet(this+0, A_PtrSize, \"UInt\")
        refCount++
        NumPut(refCount, this+0, A_PtrSize, \"UInt\")
        ; NumPut(this + 4)
        ; refCount:=

        ; return InterlockedIncrement(&_referenceCount);
        return refCount
    }
    _Release_Same() {
        refCount:=NumGet(this+0, A_PtrSize, \"UInt\")
        refCount--
        NumPut(refCount, this+0, A_PtrSize, \"UInt\")
        ; ULONG result = InterlockedDecrement(&_referenceCount);
        ; if (result == 0)
        ; {
            ; delete this;
        ; }
        return refCount
    }
    _VirtualDesktopCreated_Win10(pDesktop) {
        ; Tooltip % 11111
        VD.VirtualDesktopCreated.Call(VD._desktopNum_from_IVirtualDesktop(pDesktop))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyBegin_Win10(pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 22222
        VD.VirtualDesktopDestroyBegin.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyFailed_Win10(pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 33333
        VD.VirtualDesktopDestroyFailed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyed_Win10(pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 44444
        VD.VirtualDesktopDestroyed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _ViewVirtualDesktopChanged_Win10(pView) {
        ; Tooltip % 55555
        VD.ViewVirtualDesktopChanged.Call(pView)
        return 0 ;S_OK
    }
    _CurrentVirtualDesktopChanged_Win10(pDesktopOld, pDesktopNew) {
        VD.CurrentVirtualDesktopChanged.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopOld), VD._desktopNum_from_IVirtualDesktop(pDesktopNew))
        return 0 ;S_OK
    }
    RegisterDesktopNotifications_Win10() { ;https://github.com/Ciantic/VirtualDesktopAccessor/blob/5bc1bbaab247b5d72e70abc9432a15275fd2d229/VirtualDesktopAccessor/dllmain.h#L718-L794
        methods:=DllCall(\"GlobalAlloc\", \"Uint\",0x00, \"Uint\",9*A_PtrSize) ;PLEASE DON'T GARBAGE COLLECT IT, this took me hours to debug, I was lucky ahkv2 garbage collected slowly
        NumPut(RegisterCallback(\"VD._QueryInterface_Win10\", \"F\"), methods+0, 0*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._AddRef_Same\", \"F\"), methods+0, 1*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._Release_Same\", \"F\"), methods+0, 2*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopCreated_Win10\", \"F\"), methods+0, 3*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyBegin_Win10\", \"F\"), methods+0, 4*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyFailed_Win10\", \"F\"), methods+0, 5*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyed_Win10\", \"F\"), methods+0, 6*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._ViewVirtualDesktopChanged_Win10\", \"F\"), methods+0, 7*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._CurrentVirtualDesktopChanged_Win10\", \"F\"), methods+0, 8*A_PtrSize, \"Ptr\")

        this.RegisterDesktopNotifications_Same(methods)
    }
    ;COM class for Win11
    _QueryInterface_Win11(riid, ppvObject) {
        if (!ppvObject) {
            return 0x80070057 ;E_INVALIDARG
        }

        str_IID_IUnknown:=\"{00000000-0000-0000-C000-000000000046}\"
        str_IID_IVirtualDesktopNotification:=\"{CD403E52-DEED-4C13-B437-B98380F2B1E8}\"

        VarSetCapacity(someStr, 40*2)
        DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", riid, \"Ptr\",&someStr, \"Ptr\",40)
        str_riid:=StrGet(&someStr)

        if (str_riid==str_IID_IUnknown || str_riid==str_IID_IVirtualDesktopNotification) {
            NumPut(this, ppvObject+0, 0, \"Ptr\")
            VD._AddRef_Same.Call(this)
            return 0 ;S_OK
        }
        ; *ppvObject = NULL;
        NumPut(0, ppvObject+0, 0, \"Ptr\")
        return 0x80004002 ;E_NOINTERFACE
    }
    _VirtualDesktopCreated_Win11(p0, pDesktop) {
        ; Tooltip % 11111
        VD.VirtualDesktopCreated.Call(VD._desktopNum_from_IVirtualDesktop(pDesktop))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyBegin_Win11(p0, pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 22222
        VD.VirtualDesktopDestroyBegin.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyFailed_Win11(p0, pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 33333
        VD.VirtualDesktopDestroyFailed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyed_Win11(p0, pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 44444
        VD.VirtualDesktopDestroyed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _ViewVirtualDesktopChanged_Win11(pView) {
        ; Tooltip % 55555
        VD.ViewVirtualDesktopChanged.Call(pView)
        return 0 ;S_OK
    }
    _CurrentVirtualDesktopChanged_Win11(p0, pDesktopOld, pDesktopNew) {
        VD.CurrentVirtualDesktopChanged.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopOld), VD._desktopNum_from_IVirtualDesktop(pDesktopNew))
        return 0 ;S_OK
    }
    _No_Op() {
    }
    RegisterDesktopNotifications_Win11() {
        methods:=DllCall(\"GlobalAlloc\", \"Uint\",0x00, \"Uint\",13*A_PtrSize) ;PLEASE DON'T GARBAGE COLLECT IT, this took me hours to debug, I was lucky ahkv2 garbage collected slowly
        ; Thanks to mntone for IID and signatures https://mntone.hateblo.jp/entry/2021/05/23/121028#IVirtualDesktopNotification-3
        ; Thanks to NyaMisty for explanation https://github.com/mntone/VirtualDesktop/pull/1#issuecomment-922269079
        NumPut(RegisterCallback(\"VD._QueryInterface_Win11\", \"F\"), methods+0, 0*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._AddRef_Same\", \"F\"), methods+0, 1*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._Release_Same\", \"F\"), methods+0, 2*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopCreated_Win11\", \"F\"), methods+0, 3*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyBegin_Win11\", \"F\"), methods+0, 4*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyFailed_Win11\", \"F\"), methods+0, 5*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyed_Win11\", \"F\"), methods+0, 6*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopIsPerMonitorChanged_Win11\", \"F\"), methods+0, 7*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 7*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopMoved_Win11\", \"F\"), methods+0, 8*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 8*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopNameChanged_Win11\", \"F\"), methods+0, 9*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 9*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._ViewVirtualDesktopChanged_Win11\", \"F\"), methods+0, 10*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._CurrentVirtualDesktopChanged_Win11\", \"F\"), methods+0, 11*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopWallpaperChanged_Win11\", \"F\"), methods+0, 12*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 12*A_PtrSize, \"Ptr\")

        this.RegisterDesktopNotifications_Same(methods)
    }
    RegisterDesktopNotifications_Same(methods) {
        obj:=DllCall(\"GlobalAlloc\", \"Uint\",0x00, \"Uint\",A_PtrSize + 4) ;PLEASE DON'T GARBAGE COLLECT IT, this took me hours to debug, I was lucky ahkv2 garbage collected slowly
        NumPut(methods, obj+0, 0, \"Ptr\")
        NumPut(0, obj+0, A_PtrSize, \"UInt\") ;refCount

        pDesktopNotificationService := ComObjQuery(this.IServiceProvider, \"{A501FDEC-4A09-464C-AE4E-1B9C21B84918}\", \"{0CD45E71-D927-4F15-8B0A-8FEF525337BF}\")
        Register:=this._vtable(pDesktopNotificationService, 3)
        HRESULT:=DllCall(Register,\"UPtr\",pDesktopNotificationService, \"Ptr\",obj, \"Uint*\",pdwCookie:=0)
        ; ok1:=ErrorLevel
        ; ok2:=A_LastError
        ; ok:=0

        ; HRESULT hrNotificationService = pServiceProvider->QueryService(
		; CLSID_IVirtualNotificationService,
		; __uuidof(IVirtualDesktopNotificationService),
		; (PVOID*)&pDesktopNotificationService);
    }

    VirtualDesktopCreated(desktopNum:=0) {
    }
    VirtualDesktopDestroyBegin(desktopNum_Destroyed:=0, desktopNum_Fallback:=0) {
    }
    VirtualDesktopDestroyFailed(desktopNum_Destroyed:=0, desktopNum_Fallback:=0) {
    }
    VirtualDesktopDestroyed(desktopNum_Destroyed:=0, desktopNum_Fallback:=0) {
    }
    ViewVirtualDesktopChanged(pView:=0) {
    }
    CurrentVirtualDesktopChanged(desktopNum_Old:=0, desktopNum_New:=0) {
    }

    ; <Run in VD
    startShellMessage() {
        ; https://www.autohotkey.com/boards/viewtopic.php?t=63424#p271528
        DllCall(\"RegisterShellHookWindow\", \"Ptr\", A_ScriptHwnd)
        MsgNum := DllCall(\"RegisterWindowMessage\", \"Str\", \"SHELLHOOK\")
        OnMessage(MsgNum, func(\"VD.ShellMessage\").bind(this))

        ; this.map_title_class:={\"\":{\"\":{\"Hourglass.exe\":func(\"VD.callback\").bind(this, 2)}}}
        this.map_title_class:={}
    }

    Run(Target, WorkingDir, this_titleName, this_class, this_processName, desktopNum) {
        this.addToWaitNewWindow(this_titleName, this_class, this_processName, func(\"VD.callback_MoveWindow\").bind(this, desktopNum))

        Run % Target, % WorkingDir
    }

    Run_lock_VD(Target, WorkingDir, this_titleName, this_class, this_processName, window_desktopNum, your_desktopNum) {
        this.addToWaitNewWindow(this_titleName, this_class, this_processName, func(\"VD.callback_MoveWindow_lockVD\").bind(this, [window_desktopNum, your_desktopNum]))

        Run % Target, % WorkingDir
    }

    addToWaitNewWindow(this_titleName, this_class, this_processName, callback) {
        map_class_processName:=this.map_title_class.HasKey(this_titleName) ? this.map_title_class[this_titleName] : this.map_title_class[this_titleName]:={}
        map_processName_data:=map_class_processName.HasKey(this_class) ? map_class_processName[this_class] : map_class_processName[this_class]:={}
        arrOfCallback:=map_processName_data.HasKey(this_processName) ? map_processName_data[this_processName] : map_processName_data[this_processName]:=[]
        arrOfCallback.Push(callback)
    }

    callback_MoveWindow(desktopNum, hwnd) {
        WinActivate % \"ahk_id \" hwnd
        this.MoveWindowToDesktopNum(\"ahk_id \" hwnd,desktopNum)
    }

    callback_MoveWindow_lockVD(tuple, hwnd) {
        window_desktopNum:=tuple[1]
        your_desktopNum:=tuple[2]
        WinActivate % \"ahk_id \" hwnd
        this.goToDesktopNum(your_desktopNum)
        WinActivate % \"ahk_id \" hwnd
        this.MoveWindowToDesktopNum(\"ahk_id \" hwnd,window_desktopNum)
        WinActivate % \"ahk_id \" hwnd
    }

    ShellMessage(wParam, lParam, msg, hwnd) {
        Critical ;this is what makes many callbacks AT THE SAME TIME possible
        Sleep 100 ;necessary

        if (wParam == 1) { ; HSHELL_WINDOWCREATED := 1, HSHELL_MONITORCHANGED := 16
            theHwnd:=lParam

            bak_DetectHiddenWindows := A_DetectHiddenWindows
            DetectHiddenWindows, ON ;very important

            arrOfCallback:=false
            outside_map_processName_data:=false
            outside_map_class_processName:=false
            outside_subString_title:=false

            WinGetTitle, this_title, % \"ahk_id \" theHwnd
            for subString_title, map_class_processName in this.map_title_class {
                if (InStr(this_title, subString_title, true)) {
                    WinGetClass, this_class, % \"ahk_id \" theHwnd
                    for subString_class, map_processName_data in map_class_processName {
                        if (InStr(this_class, subString_class, true)) {
                            WinGet, this_processName, ProcessName, % \"ahk_id \" theHwnd
                            for subString_processName, possibly_arrOfCallback in map_processName_data {
                                if (InStr(this_processName, subString_processName, true)) {
                                    arrOfCallback:=possibly_arrOfCallback
                                    outside_map_processName_data:=map_processName_data
                                    outside_map_class_processName:=map_class_processName
                                    outside_subString_title:=subString_title
                                    break
                                }
                            }
                            break
                        }
                    }
                    break
                }
            }

            DetectHiddenWindows % bak_DetectHiddenWindows

            if (arrOfCallback) {
                callback:=arrOfCallback[1]
                callback.Call(theHwnd)

                if (arrOfCallback.Length() > 1) {
                    arrOfCallback.RemoveAt(1)
                } else if (outside_map_processName_data.Count() > 1) {
                    outside_map_processName_data.Delete(subString_processName)
                } else if (outside_map_class_processName.Count() > 1) {
                    outside_map_class_processName.Delete(subString_class)
                } else {
                    this.map_title_class.Delete(outside_subString_title)
                }

            }
        }
    }
    ; Run in VD>

    ;actual methods end

    ;internal methods start

    _WinActivate_CreateRemoteThread(hWnd) {
        ; WinActivate of AHK will first try SetForegroundWindow(), it will work if the keyboard hook is not used
        ; so it will work for
        ; Numpad2::
        ; it will not work for
        ; ^#Right::
        ; Right always uses the keyboard hook

        ; AHK will then try AttachThreadInput(), it works reliably, but fails for Teams.exe for reasons I have yet to uncover
        ; let's just say that either Teams.exe is resistant to AttachThreadInput, or the code inside Teams.exe has a weird defined behavior once AttachThreadInput is called

        ; this ? there's only one way to find out how well it works, by testing in production
        foregroundWindow:=DllCall(\"GetForegroundWindow\",\"Ptr\")
        threadID:=DllCall(\"GetWindowThreadProcessId\",\"Ptr\",foregroundWindow,\"Uint*\",PID)
        currentThreadID:=DllCall(\"GetCurrentThreadId\")
        if (threadID!=currentThreadID) {
            hThread:=DllCall(\"OpenThread\",\"Uint\",0x0002,\"Int\",0,\"Uint\",threadID)
            DllCall(\"SuspendThread\",\"Ptr\",hThread)
            hProcess:=DllCall(\"OpenProcess\",\"Uint\",0x0002,\"Int\",0,\"Uint\",PID,\"Ptr\")
            user32:=DllCall(\"GetModuleHandleA\",\"AStr\",\"user32\",\"Ptr\")
            SetForegroundWindow:=DllCall(\"GetProcAddress\",\"Ptr\",user32,\"AStr\",\"SetForegroundWindow\",\"Ptr\")
            DllCall(\"CreateRemoteThread\",\"Ptr\",hProcess,\"Ptr\",0,\"Ptr\",0,\"Ptr\",SetForegroundWindow,\"Ptr\",hWnd,\"Uint\",0,\"Ptr\",0)
            Sleep 10
            Send % \"q\" ;any key works
            DllCall(\"ResumeThread\",\"Ptr\",hThread)
            DllCall(\"CloseHandle\",\"Ptr\",hThread)
            DllCall(\"CloseHandle\",\"Ptr\",hProcess)
        }
    }

    _activateDesktopBackground() { ;this is really copying extremely long comments for short code like in AHK source code
        ; Win10:
        ; \"FolderView ahk_class SysListView32 ahk_exe explorer.exe\"
        ; \"ahk_class SHELLDLL_DefView ahk_exe explorer.exe\"
        ; \"Program Manager ahk_class Progman ahk_exe explorer.exe\" is the top level parent

        ; the parent parent of FolderView BECOMES \"ahk_class WorkerW ahk_exe explorer.exe\" after you press Win+Tab
        ; WorkerW doesn't exist before you press Win+Tab
        ; it's the same for Win11, Progman gets replaced by WorkerW, Progman still exists but isn't the parent of FolderView or top-level window that gets activated

        ; Q: if WinActivate Progman activates WorkerW(we want that) then what's the problem ?
        ; A: WinActivate will send {Alt down}{Alt up}{Alt down}{Alt up} if Progman is not activated : AHK source code: ((VK_MENU | 0x12 | ALT key)) https://github.com/AutoHotkey/AutoHotkey/blob/df84a3e902b522db0756a7366bd9884c80fa17b6/source/window.cpp#L260-L261
        ; the desktop background is correctly activated, we just don't want the extra Alt keys:
        ; if the hotkey is Ctrl+Shift+Win, and you add an Alt in there, Office 365 hotkey is triggered:
        ; https://github.com/FuPeiJiang/VD.ahk/issues/40#issuecomment-1548252485
        ; https://answers.microsoft.com/en-us/msoffice/forum/all/help-disabling-office-hotkey-of-ctrl-win-alt-shift/040ef6e5-8152-449b-849a-7494323101bb
        ; https://superuser.com/questions/1457073/how-do-i-disable-specific-windows-10-office-keyboard-shortcut-ctrlshiftwinal
        ; this is also bad because it prevents subsequent uses of the hotkey #!Right:: because {Alt up} releases Alt
        ; if (WinExist(\"ahk_class WorkerW ahk_exe explorer.exe\")) {
        ;     WinActivate % \"ahk_class WorkerW ahk_exe explorer.exe\"
        ; } else {
        ;     WinActivate % \"ahk_class Progman ahk_exe explorer.exe\"
        ; }
        DllCall(\"SetForegroundWindow\",\"Ptr\",WinExist(\"ahk_class Progman ahk_exe explorer.exe\"))
    }

    _getFirstWindowInVD(desktopNum) {
        bak_DetectHiddenWindows:=A_DetectHiddenWindows
        DetectHiddenWindows, on
        returnValue:=0
        WinGet, outHwndList, List
        VarSetCapacity(GUID_Desktop, 16)
        VarSetCapacity(someStr, 40*2)
        guid_to_desktopNum:={}
        Desktops_Obj:=this._GetDesktops_Obj()
        Loop % Desktops_Obj.GetCount()
        {
            IVirtualDesktop:=Desktops_Obj.GetAt(A_Index)
            GetId:=this._vtable(IVirtualDesktop, 4)
            DllCall(GetId, \"Ptr\", IVirtualDesktop, \"Ptr\", &GUID_Desktop)
            DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", &GUID_Desktop, \"Ptr\",&someStr, \"Ptr\",40)
            strGUID:=StrGet(&someStr,\"UTF-16\")
            guid_to_desktopNum[strGUID]:=A_Index
        }
        guid_to_desktopNum[\"{00000000-0000-0000-0000-000000000000}\"]:=0
        loop % outHwndList {
            theHwnd:=outHwndList%A_Index%
            arr_success_pView_hWnd:=this._isValidWindow(theHwnd)
            if (arr_success_pView_hWnd[1]==0) {
                pView:=arr_success_pView_hWnd[2]
                WinGet, OutputVar_MinMax, MinMax, % \"ahk_id \" theHwnd
                if (!(OutputVar_MinMax==-1)) { ;not Minimized

                    HRESULT := DllCall(this.GetWindowDesktopId, \"UPtr\", this.IVirtualDesktopManager, \"Ptr\", theHwnd, \"Ptr\", &GUID_Desktop)
                    if (!(HRESULT==0)) {
                        continue
                    }
                    DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", &GUID_Desktop, \"Ptr\",&someStr, \"Ptr\",40)
                    strGUID:=StrGet(&someStr,\"UTF-16\")

                    if (guid_to_desktopNum[strGUID] == desktopNum) {
                        ; WinActivate % \"ahk_id \" theHwnd
                        returnValue:=theHwnd
                        break
                    }
                }
            }
        }
        DetectHiddenWindows % bak_DetectHiddenWindows
        return returnValue
    }

    _activateWindowUnder(excludeHwnd:=-1) {
        bak_DetectHiddenWindows:=A_DetectHiddenWindows
        DetectHiddenWindows, off
        returnValue:=-1
        WinGet, outHwndList, List
        loop % outHwndList {
            theHwnd:=outHwndList%A_Index%
            if (theHwnd == excludeHwnd) {
                continue
            }
            arr_success_pView_hWnd:=this._isValidWindow(theHwnd)
            if (arr_success_pView_hWnd[1]==0) {
                pView:=arr_success_pView_hWnd[2]
                WinGet, OutputVar_MinMax, MinMax, % \"ahk_id \" theHwnd
                if (!(OutputVar_MinMax==-1)) { ;not Minimized
                    ; WinActivate % \"ahk_id \" theHwnd
                    DllCall(\"SetForegroundWindow\",\"Ptr\",theHwnd)
                    returnValue:=theHwnd
                    break
                }
            }
        }
        DetectHiddenWindows % bak_DetectHiddenWindows
        return returnValue
    }

    _tryGetValidWindow(wintitle) {
        bak_DetectHiddenWindows:=A_DetectHiddenWindows
        bak_TitleMatchMode:=A_TitleMatchMode
        DetectHiddenWindows, on
        SetTitleMatchMode, 2
        WinGet, someID, ID, % wintitle

        returnValue:=false

        arr_success_pView_hWnd:=this._isValidWindow(someID)
        pView:=arr_success_pView_hWnd[2]
        if (pView) {
            returnValue:=[arr_success_pView_hWnd[3], pView]
        }

        SetTitleMatchMode % bak_TitleMatchMode
        DetectHiddenWindows % bak_DetectHiddenWindows
        return returnValue
    }

    _view_from_Hwnd(theHwnd) {
        pView := 0
        DllCall(this.GetViewForHwnd, \"UPtr\", this.IApplicationViewCollection, \"Ptr\", theHwnd, \"Ptr*\", pView)
        return pView
    }

    _IVirtualDesktop_from_Hwnd(theHwnd) {
        VarSetCapacity(GUID_Desktop, 16)
        HRESULT := DllCall(this.GetWindowDesktopId, \"UPtr\", this.IVirtualDesktopManager, \"Ptr\", theHwnd, \"Ptr\", &GUID_Desktop)
        if (!(HRESULT==0)) {
            return false
        }

        IVirtualDesktop_ofWindow:=0
        DllCall(this.FindDesktop, \"UPtr\", this.IVirtualDesktopManagerInternal, \"Ptr\", &GUID_Desktop, \"Ptr*\", IVirtualDesktop_ofWindow)

        return IVirtualDesktop_ofWindow
    }

    _desktopNum_from_IVirtualDesktop(IVirtualDesktop) {
        Desktops_Obj:=this._GetDesktops_Obj()
        Loop % Desktops_Obj.GetCount()
        {
            IVirtualDesktop_ofDesktop:=Desktops_Obj.GetAt(A_Index)

            if (IVirtualDesktop_ofDesktop == IVirtualDesktop) {
                return A_Index
            }
        }
        return 0 ;for \"Show on all desktops\"
    }

    _desktopNum_from_Hwnd" 0 31 (fontified nil) 31 39 (fontified nil) 39 45 (face font-lock-warning-face fontified nil) 45 46 (fontified nil) 46 66 (fontified nil) 66 68 (face font-lock-comment-delimiter-face fontified nil) 68 97 (face font-lock-comment-face fontified nil) 97 104 (fontified nil) 104 136 (fontified nil) 136 137 (face font-lock-builtin-face fontified nil) 137 156 (fontified nil) 156 158 (face font-lock-builtin-face fontified nil) 158 162 (face font-lock-variable-name-face fontified nil) 162 166 (fontified nil) 166 179 (fontified nil) 179 181 (face font-lock-builtin-face fontified nil) 181 185 (fontified nil) 185 186 (face font-lock-builtin-face fontified nil) 186 215 (fontified nil) 215 223 (fontified nil) 223 225 (face font-lock-keyword-face fontified nil) 225 237 (fontified nil) 237 249 (fontified nil) 249 255 (face font-lock-warning-face fontified nil) 255 256 (fontified nil) 256 257 (face font-lock-builtin-face fontified nil) 257 259 (fontified nil) 259 260 (face font-lock-comment-delimiter-face fontified nil) 260 270 (face font-lock-comment-face fontified nil) 270 280 (fontified nil) 280 295 (fontified nil) 295 297 (face font-lock-builtin-face fontified nil) 297 307 (fontified nil) 307 334 (fontified nil) 334 336 (face font-lock-builtin-face fontified nil) 336 340 (fontified nil) 340 341 (face font-lock-builtin-face fontified nil) 341 372 (fontified nil) 372 384 (fontified nil) 384 385 (face font-lock-builtin-face fontified nil) 385 422 (fontified nil) 422 430 (fontified nil) 430 432 (face font-lock-keyword-face fontified nil) 432 456 (fontified nil) 456 468 (fontified nil) 468 479 (face font-lock-keyword-face fontified nil) 479 480 (face font-lock-builtin-face fontified nil) 480 481 (fontified nil) 481 487 (face font-lock-keyword-face fontified nil) 487 488 (fontified nil) 488 497 (face font-lock-variable-name-face fontified nil) 497 515 (fontified nil) 515 550 (fontified nil) 550 551 (face font-lock-builtin-face fontified nil) 551 566 (fontified nil) 566 579 (fontified nil) 579 581 (face font-lock-builtin-face fontified nil) 581 585 (fontified nil) 585 586 (face font-lock-builtin-face fontified nil) 586 615 (fontified nil) 615 623 (fontified nil) 623 625 (face font-lock-keyword-face fontified nil) 625 637 (fontified nil) 637 649 (fontified nil) 649 655 (face font-lock-warning-face fontified nil) 655 656 (fontified nil) 656 657 (face font-lock-builtin-face fontified nil) 657 659 (fontified nil) 659 660 (face font-lock-comment-delimiter-face fontified nil) 660 670 (face font-lock-comment-face fontified nil) 670 680 (fontified nil) 680 695 (fontified nil) 695 697 (face font-lock-builtin-face fontified nil) 697 706 (fontified nil) 706 722 (fontified nil) 722 724 (face font-lock-builtin-face fontified nil) 724 734 (fontified nil) 734 765 (fontified nil) 765 767 (face font-lock-builtin-face fontified nil) 767 772 (face font-lock-variable-name-face fontified nil) 772 773 (fontified nil) 773 781 (fontified nil) 781 783 (face font-lock-keyword-face fontified nil) 783 795 (fontified nil) 795 797 (face font-lock-builtin-face fontified nil) 797 805 (face font-lock-function-name-face fontified nil) 805 806 (fontified nil) 806 809 (face font-lock-string-face fontified nil) 809 814 (fontified nil) 814 826 (fontified nil) 826 828 (face font-lock-keyword-face fontified nil) 828 840 (fontified nil) 840 842 (face font-lock-builtin-face fontified nil) 842 853 (fontified nil) 853 892 (fontified nil) 892 894 (face font-lock-builtin-face fontified nil) 894 898 (face font-lock-variable-name-face fontified nil) 898 924 (fontified nil) 924 947 (fontified nil) 947 949 (face font-lock-builtin-face fontified nil) 949 953 (fontified nil) 953 954 (face font-lock-builtin-face fontified nil) 954 972 (fontified nil) 972 973 (face font-lock-builtin-face fontified nil) 973 991 (fontified nil) 991 999 (fontified nil) 999 1006 (face font-lock-function-name-face fontified nil) 1006 1011 (fontified nil) 1011 1012 (face font-lock-builtin-face fontified nil) 1012 1029 (fontified nil) 1029 1030 (face font-lock-builtin-face fontified nil) 1030 1031 (fontified nil) 1031 1036 (face font-lock-string-face fontified nil) 1036 1037 (face font-lock-builtin-face fontified nil) 1037 1042 (fontified nil) 1042 1043 (face font-lock-builtin-face fontified nil) 1043 1073 (fontified nil) 1073 1074 (face font-lock-builtin-face fontified nil) 1074 1075 (fontified nil) 1075 1080 (face font-lock-string-face fontified nil) 1080 1081 (face font-lock-builtin-face fontified nil) 1081 1090 (fontified nil) 1090 1091 (face font-lock-builtin-face fontified nil) 1091 1092 (fontified nil) 1092 1097 (face font-lock-string-face fontified nil) 1097 1098 (face font-lock-builtin-face fontified nil) 1098 1117 (fontified nil) 1117 1125 (fontified nil) 1125 1127 (face font-lock-keyword-face fontified nil) 1127 1156 (fontified nil) 1156 1168 (fontified nil) 1168 1170 (face font-lock-keyword-face fontified nil) 1170 1176 (fontified nil) 1176 1177 (face font-lock-builtin-face fontified nil) 1177 1199 (fontified nil) 1199 1201 (face font-lock-builtin-face fontified nil) 1201 1202 (face font-lock-builtin-face fontified nil) 1202 1207 (fontified nil) 1207 1227 (fontified nil) 1227 1228 (face font-lock-builtin-face fontified nil) 1228 1288 (fontified nil) 1288 1312 (fontified nil) 1312 1331 (fontified nil) 1331 1332 (face font-lock-builtin-face fontified nil) 1332 1349 (fontified nil) 1349 1355 (fontified nil) 1355 1375 (fontified nil) 1375 1377 (face font-lock-builtin-face fontified nil) 1377 1381 (fontified nil) 1381 1382 (face font-lock-builtin-face fontified nil) 1382 1401 (fontified nil) 1401 1423 (fontified nil) 1423 1425 (face font-lock-builtin-face fontified nil) 1425 1437 (fontified nil) 1437 1438 (face font-lock-builtin-face fontified nil) 1438 1450 (fontified nil) 1450 1461 (fontified nil) 1461 1477 (fontified nil) 1477 1479 (face font-lock-builtin-face fontified nil) 1479 1497 (fontified nil) 1497 1498 (face font-lock-builtin-face fontified nil) 1498 1514 (fontified nil) 1514 1522 (fontified nil) 1522 1523 (fontified nil face font-lock-comment-delimiter-face) 1523 1589 (fontified nil face font-lock-comment-face) 1589 1597 (fontified nil) 1597 1598 (fontified nil face font-lock-comment-delimiter-face) 1598 1623 (fontified nil face font-lock-comment-face) 1623 1841 (fontified nil) 1841 1852 (fontified nil) 1852 1860 (fontified nil) 1860 1866 (fontified nil face font-lock-warning-face) 1866 1894 (fontified nil) 1894 1937 (fontified nil) 1937 1938 (fontified nil face font-lock-builtin-face) 1938 1958 (fontified nil) 1958 1986 (fontified nil) 1986 1988 (fontified nil face font-lock-builtin-face) 1988 1993 (fontified nil) 1993 1994 (fontified nil face font-lock-builtin-face) 1994 2026 (fontified nil) 2026 2054 (fontified nil) 2054 2056 (fontified nil face font-lock-builtin-face) 2056 2061 (fontified nil) 2061 2062 (fontified nil face font-lock-builtin-face) 2062 2103 (fontified nil) 2103 2104 (fontified nil face font-lock-builtin-face) 2104 2122 (fontified nil) 2122 2134 (fontified nil) 2134 2135 (fontified nil face font-lock-builtin-face) 2135 2166 (fontified nil) 2166 2167 (fontified nil face font-lock-builtin-face) 2167 2190 (fontified nil) 2190 2198 (fontified nil) 2198 2204 (fontified nil face font-lock-warning-face) 2204 2277 (fontified nil) 2277 2289 (fontified nil) 2289 2290 (fontified nil face font-lock-builtin-face) 2290 2309 (fontified nil) 2309 2310 (fontified nil face font-lock-builtin-face) 2310 2336 (fontified nil) 2336 2337 (fontified nil face font-lock-builtin-face) 2337 2359 (fontified nil) 2359 2360 (fontified nil face font-lock-builtin-face) 2360 2385 (fontified nil) 2385 2424 (fontified nil) 2424 2425 (fontified nil face font-lock-builtin-face) 2425 2444 (fontified nil) 2444 2446 (fontified nil face font-lock-builtin-face) 2446 2450 (fontified nil face font-lock-variable-name-face) 2450 2454 (fontified nil) 2454 2467 (fontified nil) 2467 2469 (fontified nil face font-lock-builtin-face) 2469 2473 (fontified nil) 2473 2474 (fontified nil face font-lock-builtin-face) 2474 2492 (fontified nil) 2492 2503 (fontified nil) 2503 2511 (fontified nil) 2511 2513 (fontified nil face font-lock-keyword-face) 2513 2525 (fontified nil) 2525 2537 (fontified nil) 2537 2543 (fontified nil face font-lock-warning-face) 2543 2544 (fontified nil) 2544 2545 (fontified nil face font-lock-builtin-face) 2545 2547 (fontified nil) 2547 2548 (fontified nil face font-lock-comment-delimiter-face) 2548 2558 (fontified nil face font-lock-comment-face) 2558 2568 (fontified nil) 2568 2583 (fontified nil) 2583 2585 (fontified nil face font-lock-builtin-face) 2585 2594 (fontified nil) 2594 2610 (fontified nil) 2610 2612 (fontified nil face font-lock-builtin-face) 2612 2622 (fontified nil) 2622 2647 (fontified nil) 2647 2649 (fontified nil face font-lock-builtin-face) 2649 2653 (fontified nil) 2653 2654 (fontified nil face font-lock-builtin-face) 2654 2677 (fontified nil) 2677 2700 (fontified nil) 2700 2702 (fontified nil face font-lock-builtin-face) 2702 2706 (fontified nil) 2706 2707 (fontified nil face font-lock-builtin-face) 2707 2725 (fontified nil) 2725 2726 (fontified nil face font-lock-builtin-face) 2726 2752 (fontified nil) 2752 2760 (fontified nil) 2760 2767 (fontified nil face font-lock-function-name-face) 2767 2772 (fontified nil) 2772 2773 (fontified nil face font-lock-builtin-face) 2773 2790 (fontified nil) 2790 2791 (fontified nil face font-lock-builtin-face) 2791 2792 (fontified nil) 2792 2797 (fontified nil face font-lock-string-face) 2797 2798 (fontified nil face font-lock-builtin-face) 2798 2803 (fontified nil) 2803 2804 (fontified nil face font-lock-builtin-face) 2804 2834 (fontified nil) 2834 2835 (fontified nil face font-lock-builtin-face) 2835 2836 (fontified nil) 2836 2841 (fontified nil face font-lock-string-face) 2841 2842 (fontified nil face font-lock-builtin-face) 2842 2851 (fontified nil) 2851 2852 (fontified nil face font-lock-builtin-face) 2852 2853 (fontified nil) 2853 2858 (fontified nil face font-lock-string-face) 2858 2859 (fontified nil face font-lock-builtin-face) 2859 2878 (fontified nil) 2878 2886 (fontified nil) 2886 2888 (fontified nil face font-lock-keyword-face) 2888 2912 (fontified nil) 2912 2924 (fontified nil) 2924 2935 (fontified nil face font-lock-keyword-face) 2935 2938 (fontified nil) 2938 2947 (fontified nil face font-lock-string-face) 2947 3002 (fontified nil) 3002 3042 (fontified nil) 3042 3044 (fontified nil face font-lock-builtin-face) 3044 3048 (fontified nil) 3048 3049 (fontified nil face font-lock-builtin-face) 3049 3075 (fontified nil) 3075 3093 (fontified nil) 3093 3095 (fontified nil face font-lock-builtin-face) 3095 3099 (fontified nil) 3099 3100 (fontified nil face font-lock-builtin-face) 3100 3167 (fontified nil) 3167 3175 (fontified nil) 3175 3181 (fontified nil face font-lock-warning-face) 3181 3200 (fontified nil) 3200 3225 (fontified nil) 3225 3227 (fontified nil face font-lock-builtin-face) 3227 3232 (fontified nil face font-lock-variable-name-face) 3232 3236 (fontified nil) 3236 3272 (fontified nil) 3272 3274 (fontified nil face font-lock-builtin-face) 3274 3278 (fontified nil) 3278 3279 (fontified nil face font-lock-builtin-face) 3279 3301 (fontified nil) 3301 3309 (fontified nil) 3309 3311 (fontified nil face font-lock-keyword-face) 3311 3324 (fontified nil) 3324 3336 (fontified nil) 3336 3337 (fontified nil face font-lock-comment-delimiter-face) 3337 3386 (fontified nil face font-lock-comment-face) 3386 3398 (fontified nil) 3398 3400 (fontified nil face font-lock-comment-delimiter-face) 3400 3428 (fontified nil face font-lock-comment-face) 3428 3440 (fontified nil) 3440 3441 (fontified nil face font-lock-comment-delimiter-face) 3441 3464 (fontified nil face font-lock-comment-face) 3464 3486 (fontified nil) 3486 3488 (fontified nil face font-lock-builtin-face) 3488 3492 (fontified nil) 3492 3493 (fontified nil face font-lock-builtin-face) 3493 3556 (fontified nil) 3556 3572 (fontified nil) 3572 3573 (fontified nil face font-lock-builtin-face) 3573 3617 (fontified nil) 3617 3640 (fontified nil) 3640 3641 (fontified nil face font-lock-builtin-face) 3641 3659 (fontified nil) 3659 3661 (fontified nil face font-lock-builtin-face) 3661 3666 (fontified nil face font-lock-variable-name-face) 3666 3670 (fontified nil) 3670 3700 (fontified nil) 3700 3702 (fontified nil face font-lock-builtin-face) 3702 3706 (fontified nil) 3706 3707 (fontified nil face font-lock-builtin-face) 3707 3718 (fontified nil) 3718 3726 (fontified nil) 3726 3728 (fontified nil face font-lock-keyword-face) 3728 3752 (fontified nil) 3752 3754 (fontified nil face font-lock-builtin-face) 3754 3765 (fontified nil) 3765 3777 (fontified nil) 3777 3783 (fontified nil face font-lock-warning-face) 3783 3795 (fontified nil) 3795 3803 (fontified nil) 3803 3804 (fontified nil face font-lock-comment-delimiter-face) 3804 3848 (fontified nil face font-lock-comment-face) 3848 3856 (fontified nil) 3856 3860 (fontified nil face font-lock-keyword-face) 3860 3871 (fontified nil) 3871 3872 (fontified nil face font-lock-builtin-face) 3872 3896 (fontified nil) 3896 3897 (fontified nil face font-lock-builtin-face) 3897 3902 (fontified nil) 3902 3918 (fontified nil) 3918 3919 (fontified nil face font-lock-builtin-face) 3919 3933 (fontified nil) 3933 3938 (fontified nil face font-lock-variable-name-face) 3938 3950 (fontified nil) 3950 3962 (fontified nil) 3962 3963 (fontified nil face font-lock-builtin-face) 3963 3992 (fontified nil) 3992 3996 (fontified nil) 3996 4382 (fontified nil) 4382 4394 (fontified nil) 4394 4396 (fontified nil face font-lock-keyword-face) 4396 4409 (fontified nil) 4409 4410 (fontified nil face font-lock-builtin-face) 4410 4416 (fontified nil) 4416 4451 (fontified nil) 4451 4453 (fontified nil face font-lock-builtin-face) 4453 4464 (fontified nil) 4464 4465 (fontified nil face font-lock-builtin-face) 4465 4482 (fontified nil) 4482 4494 (fontified nil) 4494 4495 (fontified nil face font-lock-comment-delimiter-face) 4495 4506 (fontified nil face font-lock-comment-face) 4506 4518 (fontified nil) 4518 4522 (fontified nil face font-lock-keyword-face) 4522 4523 (fontified nil) 4523 4525 (fontified nil face font-lock-keyword-face) 4525 4538 (fontified nil) 4538 4539 (fontified nil face font-lock-builtin-face) 4539 4552 (fontified nil) 4552 4553 (fontified nil face font-lock-builtin-face) 4553 4567 (fontified nil) 4567 4602 (fontified nil) 4602 4604 (fontified nil face font-lock-builtin-face) 4604 4615 (fontified nil) 4615 4616 (fontified nil face font-lock-builtin-face) 4616 4633 (fontified nil) 4633 4645 (fontified nil) 4645 4646 (fontified nil face font-lock-comment-delimiter-face) 4646 4667 (fontified nil face font-lock-comment-face) 4667 4679 (fontified nil) 4679 4683 (fontified nil face font-lock-keyword-face) 4683 4686 (fontified nil) 4686 4702 (fontified nil) 4702 4708 (fontified nil face font-lock-warning-face) 4708 4709 (fontified nil) 4709 4714 (fontified nil face font-lock-variable-name-face) 4714 4740 (fontified nil) 4740 4763 (fontified nil) 4763 4765 (fontified nil face font-lock-builtin-face) 4765 4777 (fontified nil) 4777 4778 (fontified nil face font-lock-builtin-face) 4778 4796 (fontified nil) 4796 4828 (fontified nil) 4828 4830 (fontified nil face font-lock-builtin-face) 4830 4842 (fontified nil) 4842 4843 (fontified nil face font-lock-builtin-face) 4843 4871 (fontified nil) 4871 4879 (fontified nil) 4879 4886 (fontified nil face font-lock-function-name-face) 4886 4891 (fontified nil) 4891 4892 (fontified nil face font-lock-builtin-face) 4892 4909 (fontified nil) 4909 4910 (fontified nil face font-lock-builtin-face) 4910 4911 (fontified nil) 4911 4917 (fontified nil face font-lock-string-face) 4917 4918 (fontified nil face font-lock-builtin-face) 4918 4923 (fontified nil) 4923 4924 (fontified nil face font-lock-builtin-face) 4924 4954 (fontified nil) 4954 4955 (fontified nil face font-lock-builtin-face) 4955 4956 (fontified nil) 4956 4961 (fontified nil face font-lock-string-face) 4961 4962 (fontified nil face font-lock-builtin-face) 4962 4978 (fontified nil) 4978 4979 (fontified nil face font-lock-builtin-face) 4979 4980 (fontified nil) 4980 4985 (fontified nil face font-lock-string-face) 4985 4986 (fontified nil face font-lock-builtin-face) 4986 5051 (fontified nil) 5051 5064 (fontified nil) 5064 5066 (fontified nil face font-lock-builtin-face) 5066 5070 (fontified nil) 5070 5071 (fontified nil face font-lock-builtin-face) 5071 5089 (fontified nil) 5089 5100 (fontified nil) 5100 5108 (fontified nil) 5108 5110 (fontified nil face font-lock-keyword-face) 5110 5122 (fontified nil) 5122 5134 (fontified nil) 5134 5140 (fontified nil face font-lock-warning-face) 5140 5141 (fontified nil) 5141 5142 (fontified nil face font-lock-builtin-face) 5142 5144 (fontified nil) 5144 5145 (fontified nil face font-lock-comment-delimiter-face) 5145 5155 (fontified nil face font-lock-comment-face) 5155 5165 (fontified nil) 5165 5181 (fontified nil) 5181 5183 (fontified nil face font-lock-builtin-face) 5183 5193 (fontified nil) 5193 5213 (fontified nil) 5213 5215 (fontified nil face font-lock-builtin-face) 5215 5219 (fontified nil) 5219 5220 (fontified nil face font-lock-builtin-face) 5220 5244 (fontified nil) 5244 5252 (fontified nil) 5252 5258 (fontified nil face font-lock-warning-face) 5258 5310 (fontified nil) 5310 5323 (fontified nil) 5323 5325 (fontified nil face font-lock-builtin-face) 5325 5329 (fontified nil) 5329 5330 (fontified nil face font-lock-builtin-face) 5330 5359 (fontified nil) 5359 5367 (fontified nil) 5367 5369 (fontified nil face font-lock-keyword-face) 5369 5381 (fontified nil) 5381 5393 (fontified nil) 5393 5399 (fontified nil face font-lock-warning-face) 5399 5400 (fontified nil) 5400 5401 (fontified nil face font-lock-builtin-face) 5401 5403 (fontified nil) 5403 5404 (fontified nil face font-lock-comment-delimiter-face) 5404 5414 (fontified nil face font-lock-comment-face) 5414 5424 (fontified nil) 5424 5440 (fontified nil) 5440 5442 (fontified nil face font-lock-builtin-face) 5442 5452 (fontified nil) 5452 5472 (fontified nil) 5472 5474 (fontified nil face font-lock-builtin-face) 5474 5478 (fontified nil) 5478 5479 (fontified nil face font-lock-builtin-face) 5479 5503 (fontified nil) 5503 5511 (fontified nil) 5511 5513 (fontified nil face font-lock-keyword-face) 5513 5531 (fontified nil) 5531 5543 (fontified nil) 5543 5550 (fontified nil face font-lock-function-name-face) 5550 5555 (fontified nil) 5555 5556 (fontified nil face font-lock-builtin-face) 5556 5565 (fontified nil) 5565 5566 (fontified nil face font-lock-builtin-face) 5566 5567 (fontified nil) 5567 5573 (fontified nil face font-lock-string-face) 5573 5574 (fontified nil face font-lock-builtin-face) 5574 5579 (fontified nil) 5579 5580 (fontified nil face font-lock-builtin-face) 5580 5605 (fontified nil) 5605 5606 (fontified nil face font-lock-builtin-face) 5606 5607 (fontified nil) 5607 5612 (fontified nil face font-lock-string-face) 5612 5613 (fontified nil face font-lock-builtin-face) 5613 5624 (fontified nil) 5624 5634 (fontified nil) 5634 5638 (fontified nil face font-lock-keyword-face) 5638 5641 (fontified nil) 5641 5653 (fontified nil) 5653 5660 (fontified nil face font-lock-function-name-face) 5660 5665 (fontified nil) 5665 5666 (fontified nil face font-lock-builtin-face) 5666 5673 (fontified nil) 5673 5674 (fontified nil face font-lock-builtin-face) 5674 5675 (fontified nil) 5675 5681 (fontified nil face font-lock-string-face) 5681 5682 (fontified nil face font-lock-builtin-face) 5682 5687 (fontified nil) 5687 5688 (fontified nil face font-lock-builtin-face) 5688 5713 (fontified nil) 5713 5714 (fontified nil face font-lock-builtin-face) 5714 5715 (fontified nil) 5715 5720 (fontified nil face font-lock-string-face) 5720 5721 (fontified nil face font-lock-builtin-face) 5721 5775 (fontified nil) 5775 5788 (fontified nil) 5788 5790 (fontified nil face font-lock-builtin-face) 5790 5794 (fontified nil) 5794 5795 (fontified nil face font-lock-builtin-face) 5795 5824 (fontified nil) 5824 5832 (fontified nil) 5832 5834 (fontified nil face font-lock-keyword-face) 5834 5846 (fontified nil) 5846 5858 (fontified nil) 5858 5864 (fontified nil face font-lock-warning-face) 5864 5865 (fontified nil) 5865 5866 (fontified nil face font-lock-builtin-face) 5866 5868 (fontified nil) 5868 5869 (fontified nil face font-lock-comment-delimiter-face) 5869 5879 (fontified nil face font-lock-comment-face) 5879 5889 (fontified nil) 5889 5905 (fontified nil) 5905 5907 (fontified nil face font-lock-builtin-face) 5907 5917 (fontified nil) 5917 5925 (fontified nil) 5925 5932 (fontified nil face font-lock-function-name-face) 5932 5937 (fontified nil) 5937 5938 (fontified nil face font-lock-builtin-face) 5938 5945 (fontified nil) 5945 5946 (fontified nil face font-lock-builtin-face) 5946 5947 (fontified nil) 5947 5953 (fontified nil face font-lock-string-face) 5953 5954 (fontified nil face font-lock-builtin-face) 5954 5959 (fontified nil) 5959 5960 (fontified nil face font-lock-builtin-face) 5960 5985 (fontified nil) 5985 5986 (fontified nil face font-lock-builtin-face) 5986 5987 (fontified nil) 5987 5992 (fontified nil face font-lock-string-face) 5992 5993 (fontified nil face font-lock-builtin-face) 5993 6038 (fontified nil) 6038 6051 (fontified nil) 6051 6053 (fontified nil face font-lock-builtin-face) 6053 6057 (fontified nil) 6057 6058 (fontified nil face font-lock-builtin-face) 6058 6087 (fontified nil) 6087 6095 (fontified nil) 6095 6097 (fontified nil face font-lock-keyword-face) 6097 6109 (fontified nil) 6109 6121 (fontified nil) 6121 6127 (fontified nil face font-lock-warning-face) 6127 6128 (fontified nil) 6128 6129 (fontified nil face font-lock-builtin-face) 6129 6131 (fontified nil) 6131 6132 (fontified nil face font-lock-comment-delimiter-face) 6132 6142 (fontified nil face font-lock-comment-face) 6142 6152 (fontified nil) 6152 6168 (fontified nil) 6168 6170 (fontified nil face font-lock-builtin-face) 6170 6180 (fontified nil) 6180 6188 (fontified nil) 6188 6195 (fontified nil face font-lock-function-name-face) 6195 6200 (fontified nil) 6200 6201 (fontified nil face font-lock-builtin-face) 6201 6210 (fontified nil) 6210 6211 (fontified nil face font-lock-builtin-face) 6211 6212 (fontified nil) 6212 6218 (fontified nil face font-lock-string-face) 6218 6219 (fontified nil face font-lock-builtin-face) 6219 6224 (fontified nil) 6224 6225 (fontified nil face font-lock-builtin-face) 6225 6250 (fontified nil) 6250 6251 (fontified nil face font-lock-builtin-face) 6251 6252 (fontified nil) 6252 6257 (fontified nil face font-lock-string-face) 6257 6258 (fontified nil face font-lock-builtin-face) 6258 6276 (fontified nil) 6276 6280 (fontified nil) 6280 6282 (fontified nil face font-lock-comment-delimiter-face) 6282 6438 (fontified nil face font-lock-comment-face) 6438 6468 (fontified nil) 6468 6469 (fontified nil face font-lock-builtin-face) 6469 6483 (fontified nil) 6483 6491 (fontified nil) 6491 6493 (fontified nil face font-lock-keyword-face) 6493 6509 (fontified nil) 6509 6521 (fontified nil) 6521 6527 (fontified nil face font-lock-warning-face) 6527 6539 (fontified nil) 6539 6540 (fontified nil face font-lock-comment-delimiter-face) 6540 6553 (fontified nil face font-lock-comment-face) 6553 6564 (fontified nil) 6564 6588 (fontified nil) 6588 6589 (fontified nil face font-lock-builtin-face) 6589 6590 (fontified nil face font-lock-builtin-face) 6590 6630 (fontified nil face font-lock-string-face) 6630 6631 (fontified nil) 6631 27561 (fontified nil) 27561 27569 (fontified nil) 27569 27573 (fontified nil face font-lock-keyword-face) 27573 27590 (fontified nil) 27590 27609 (fontified nil) 27609 27611 (fontified nil face font-lock-builtin-face) 27611 27622 (fontified nil) 27622 27631 (fontified nil face font-lock-variable-name-face) 27631 27632 (fontified nil) 27632 27644 (fontified nil) 27644 27646 (fontified nil face font-lock-keyword-face) 27646 27656 (fontified nil) 27656 27658 (fontified nil face font-lock-builtin-face) 27658 27674 (fontified nil) 27674 27690 (fontified nil) 27690 27698 (fontified nil face font-lock-keyword-face) 27698 27713 (fontified nil) 27713 27747 (fontified nil) 27747 27749 (fontified nil face font-lock-builtin-face) 27749 27753 (fontified nil) 27753 27754 (fontified nil face font-lock-builtin-face) 27754 27778 (fontified nil) 27778 27790 (fontified nil) 27790 27792 (fontified nil face font-lock-keyword-face) 27792 27819 (fontified nil) 27819 27821 (fontified nil face font-lock-builtin-face) 27821 27826 (fontified nil) 27826 27847 (fontified nil) 27847 27849 (fontified nil face font-lock-builtin-face) 27849 27875 (fontified nil) 27875 27891 (fontified nil) 27891 27897 (fontified nil face font-lock-keyword-face) 27897 27898 (fontified nil face font-lock-builtin-face) 27898 27915 (fontified nil) 27915 27916 (fontified nil face font-lock-builtin-face) 27916 27917 (fontified nil) 27917 27923 (fontified nil face font-lock-keyword-face) 27923 27924 (fontified nil face font-lock-builtin-face) 27924 27927 (fontified nil) 27927 27936 (fontified nil face font-lock-string-face) 27936 27945 (fontified nil) 27945 27961 (fontified nil) 27961 27963 (fontified nil face font-lock-keyword-face) 27963 27983 (fontified nil) 27983 27985 (fontified nil face font-lock-builtin-face) 27985 27986 (fontified nil face font-lock-builtin-face) 27986 27992 (fontified nil) 27992 27993 (fontified nil face font-lock-comment-delimiter-face) 27993 28007 (fontified nil face font-lock-comment-face) 28007 28027 (fontified nil) 28027 28029 (fontified nil face font-lock-comment-delimiter-face) 28029 28061 (fontified nil face font-lock-comment-face) 28061 28081 (fontified nil) 28081 28088 (fontified nil face font-lock-function-name-face) 28088 28089 (fontified nil) 28089 28110 (fontified nil face font-lock-string-face) 28110 28111 (fontified nil face font-lock-builtin-face) 28111 28116 (fontified nil face font-lock-string-face) 28116 28117 (fontified nil face font-lock-builtin-face) 28117 28126 (fontified nil) 28126 28157 (fontified nil) 28157 28159 (fontified nil face font-lock-builtin-face) 28159 28167 (fontified nil) 28167 28187 (fontified nil) 28187 28192 (fontified nil face font-lock-keyword-face) 28192 28193 (fontified nil) 28193 28235 (fontified nil) 28235 28243 (fontified nil) 28243 28262 (fontified nil face font-lock-keyword-face) 28262 28289 (fontified nil) 28289 28297 (fontified nil) 28297 28303 (fontified nil face font-lock-warning-face) 28303 28323 (fontified nil) 28323 28345 (fontified nil) 28345 28358 (fontified nil) 28358 28389 (fontified nil) 28389 28391 (fontified nil face font-lock-builtin-face) 28391 28412 (fontified nil face font-lock-variable-name-face) 28412 28413 (fontified nil) 28413 28439 (fontified nil) 28439 28441 (fontified nil face font-lock-builtin-face) 28441 28457 (fontified nil face font-lock-variable-name-face) 28457 28458 (fontified nil) 28458 28466 (fontified nil) 28466 28485 (fontified nil face font-lock-keyword-face) 28485 28486 (fontified nil face font-lock-builtin-face) 28486 28487 (fontified nil) 28487 28489 (fontified nil face font-lock-keyword-face) 28489 28490 (fontified nil) 28490 28498 (fontified nil) 28498 28515 (fontified nil face font-lock-keyword-face) 28515 28516 (fontified nil face font-lock-builtin-face) 28516 28519 (fontified nil) 28519 28527 (fontified nil) 28527 28533 (fontified nil face font-lock-keyword-face) 28533 28534 (fontified nil face font-lock-builtin-face) 28534 28541 (fontified nil) 28541 28542 (fontified nil face font-lock-builtin-face) 28542 28543 (fontified nil) 28543 28545 (fontified nil face font-lock-keyword-face) 28545 28546 (fontified nil face font-lock-builtin-face) 28546 28559 (fontified nil) 28559 28578 (fontified nil) 28578 28580 (fontified nil face font-lock-builtin-face) 28580 28585 (fontified nil face font-lock-variable-name-face) 28585 28587 (fontified nil) 28587 28617 (fontified nil) 28617 28619 (fontified nil face font-lock-builtin-face) 28619 28623 (fontified nil) 28623 28624 (fontified nil face font-lock-builtin-face) 28624 28647 (fontified nil) 28647 28660 (fontified nil) 28660 28662 (fontified nil face font-lock-builtin-face) 28662 28688 (fontified nil) 28688 28696 (fontified nil) 28696 28698 (fontified nil face font-lock-keyword-face) 28698 28709 (fontified nil) 28709 28732 (fontified nil) 28732 28734 (fontified nil face font-lock-builtin-face) 28734 28760 (fontified nil) 28760 28761 (fontified nil face font-lock-builtin-face) 28761 28779 (fontified nil) 28779 28780 (fontified nil) 28780 28788 (fontified nil) 28788 28805 (fontified nil face font-lock-keyword-face) 28805 28827 (fontified nil) 28827 28835 (fontified nil) 28835 28854 (fontified nil face font-lock-keyword-face) 28854 28881 (fontified nil) 28881 28889 (fontified nil) 28889 28895 (fontified nil face font-lock-warning-face) 28895 28946 (fontified nil) 28946 28960 (fontified nil) 28960 28962 (fontified nil face font-lock-builtin-face) 28962 28965 (fontified nil) 28965 28973 (fontified nil) 28973 28980 (fontified nil face font-lock-function-name-face) 28980 28985 (fontified nil) 28985 28986 (fontified nil face font-lock-builtin-face) 28986 29000 (fontified nil) 29000 29001 (fontified nil face font-lock-builtin-face) 29001 29002 (fontified nil) 29002 29008 (fontified nil face font-lock-string-face) 29008 29009 (fontified nil face font-lock-builtin-face) 29009 29014 (fontified nil) 29014 29015 (fontified nil face font-lock-builtin-face) 29015 29041 (fontified nil) 29041 29042 (fontified nil face font-lock-builtin-face) 29042 29043 (fontified nil) 29043 29048 (fontified nil face font-lock-string-face) 29048 29049 (fontified nil face font-lock-builtin-face) 29049 29057 (fontified nil) 29057 29058 (fontified nil face font-lock-builtin-face) 29058 29059 (fontified nil) 29059 29065 (fontified nil face font-lock-string-face) 29065 29066 (fontified nil face font-lock-builtin-face) 29066 29074 (fontified nil) 29074 29082 (fontified nil) 29082 29088 (fontified nil face font-lock-warning-face) 29088 29144 (fontified nil) 29144 29152 (fontified nil) 29152 29166 (fontified nil face font-lock-function-name-face) 29166 29179 (fontified nil) 29179 29180 (fontified nil face font-lock-builtin-face) 29180 29185 (fontified nil) 29185 29201 (fontified nil) 29201 29203 (fontified nil face font-lock-builtin-face) 29203 29204 (fontified nil) 29204 29211 (fontified nil face font-lock-function-name-face) 29211 29216 (fontified nil) 29216 29217 (fontified nil face font-lock-builtin-face) 29217 29235 (fontified nil) 29235 29236 (fontified nil face font-lock-builtin-face) 29236 29237 (fontified nil) 29237 29243 (fontified nil face font-lock-string-face) 29243 29244 (fontified nil face font-lock-builtin-face) 29244 29249 (fontified nil) 29249 29250 (fontified nil face font-lock-builtin-face) 29250 29272 (fontified nil) 29272 29273 (fontified nil face font-lock-builtin-face) 29273 29274 (fontified nil) 29274 29279 (fontified nil face font-lock-string-face) 29279 29280 (fontified nil face font-lock-builtin-face) 29280 29288 (fontified nil) 29288 29289 (fontified nil face font-lock-builtin-face) 29289 29290 (fontified nil) 29290 29295 (fontified nil face font-lock-string-face) 29295 29296 (fontified nil face font-lock-builtin-face) 29296 29297 (fontified nil) 29297 29298 (fontified nil face font-lock-builtin-face) 29298 29312 (fontified nil) 29312 29320 (fontified nil) 29320 29322 (fontified nil face font-lock-keyword-face) 29322 29333 (fontified nil) 29333 29335 (fontified nil face font-lock-builtin-face) 29335 29341 (fontified nil) 29341 29353 (fontified nil) 29353 29359 (fontified nil face font-lock-warning-face) 29359 29360 (fontified nil) 29360 29365 (fontified nil face font-lock-variable-name-face) 29365 29377 (fontified nil) 29377 29409 (fontified nil) 29409 29411 (fontified nil face font-lock-builtin-face) 29411 29413 (fontified nil) 29413 29421 (fontified nil) 29421 29428 (fontified nil face font-lock-function-name-face) 29428 29433 (fontified nil) 29433 29434 (fontified nil face font-lock-builtin-face) 29434 29445 (fontified nil) 29445 29446 (fontified nil face font-lock-builtin-face) 29446 29447 (fontified nil) 29447 29453 (fontified nil face font-lock-string-face) 29453 29454 (fontified nil face font-lock-builtin-face) 29454 29459 (fontified nil) 29459 29460 (fontified nil face font-lock-builtin-face) 29460 29490 (fontified nil) 29490 29491 (fontified nil face font-lock-builtin-face) 29491 29492 (fontified nil) 29492 29497 (fontified nil face font-lock-string-face) 29497 29498 (fontified nil face font-lock-builtin-face) 29498 29499 (fontified nil) 29499 29500 (fontified nil face font-lock-builtin-face) 29500 29512 (fontified nil) 29512 29513 (fontified nil face font-lock-builtin-face) 29513 29514 (fontified nil) 29514 29520 (fontified nil face font-lock-string-face) 29520 29521 (fontified nil face font-lock-builtin-face) 29521 29549 (fontified nil) 29549 29557 (fontified nil) 29557 29563 (fontified nil face font-lock-warning-face) 29563 29652 (fontified nil) 29652 29672 (fontified nil) 29672 29674 (fontified nil face font-lock-builtin-face) 29674 29678 (fontified nil) 29678 29679 (fontified nil face font-lock-builtin-face) 29679 29698 (fontified nil) 29698 29706 (fontified nil) 29706 29710 (fontified nil face font-lock-keyword-face) 29710 29725 (fontified nil) 29725 29726 (fontified nil face font-lock-builtin-face) 29726 29737 (fontified nil) 29737 29747 (fontified nil) 29747 29784 (fontified nil) 29784 29786 (face font-lock-builtin-face fontified nil) 29786 29798 (fontified nil) 29798 29799 (face font-lock-builtin-face fontified nil) 29799 29805 (fontified nil) 29805 29812 (face font-lock-variable-name-face fontified nil) 29812 29815 (fontified nil) 29815 29827 (fontified nil) 29827 29829 (face font-lock-keyword-face fontified nil) 29829 29845 (fontified nil) 29845 29857 (fontified nil) 29857 29859 (face font-lock-builtin-face fontified nil) 29859 29879 (fontified nil) 29879 29895 (fontified nil) 29895 29901 (face font-lock-warning-face fontified nil) 29901 29902 (fontified nil) 29902 29909 (face font-lock-variable-name-face fontified nil) 29909 29934 (fontified nil) 29934 29942 (fontified nil) 29942 29948 (face font-lock-warning-face fontified nil) 29948 29951 (fontified nil) 29951 29952 (face font-lock-comment-delimiter-face fontified nil) 29952 29979 (face font-lock-comment-face fontified nil) 29979 29986 (fontified nil) 29986 30010 (fontified nil) 30010 30011 (fontified nil rear-nonsticky nil)) . 5002) (undo-tree-id166 . -29737) (undo-tree-id167 . -30011) (undo-tree-id168 . -29986) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (nil fontified t 5002 . 5033) (nil fontified t 5070 . 5099) (nil fontified t 5099 . 5106) (nil fontified t 5164 . 5168) (nil fontified t 5188 . 5217) (nil fontified t 5227 . 5239) (nil fontified t 5262 . 5272) (nil fontified t 5272 . 5282) (nil fontified t 5299 . 5309) (nil fontified t 5343 . 5374) (nil fontified t 5387 . 5424) (nil fontified t 5434 . 5458) (nil fontified t 5499 . 5517) (nil fontified t 5553 . 5568) (nil fontified t 5588 . 5617) (nil fontified t 5627 . 5639) (nil fontified t 5662 . 5672) (nil fontified t 5672 . 5682) (nil fontified t 5699 . 5708) (nil fontified t 5726 . 5736) (nil fontified t 5774 . 5775) (nil fontified t 5811 . 5816) (nil fontified t 5844 . 5855) (nil fontified t 5900 . 5926) (nil fontified t 5975 . 5993) (nil fontified t 6100 . 6119) (nil fontified t 6129 . 6158) (nil fontified t 6204 . 6209) (nil fontified t 6230 . 6290) (nil fontified t 6334 . 6351) (nil fontified t 6351 . 6357) (nil fontified t 6384 . 6403) (nil fontified t 6440 . 6452) (nil fontified t 6500 . 6516) (nil fontified nil 6525 . 6591) (nil fontified nil 6600 . 6625) (nil fontified nil 6625 . 6843) (nil fontified nil 6843 . 6854) (nil fontified nil 6868 . 6896) (nil fontified nil 6940 . 6960) (nil fontified nil 6996 . 7028) (nil fontified nil 7106 . 7124) (nil fontified nil 7169 . 7192) (nil fontified nil 7206 . 7279) (nil fontified nil 7362 . 7387) (nil fontified nil 7452 . 7456) (nil fontified nil 7494 . 7505) (nil fontified nil 7515 . 7527) (nil fontified nil 7550 . 7560) (nil fontified nil 7560 . 7570) (nil fontified nil 7587 . 7596) (nil fontified nil 7614 . 7624) (nil fontified nil 7656 . 7679) (nil fontified nil 7728 . 7754) (nil fontified nil 7861 . 7880) (nil fontified nil 7890 . 7914) (nil fontified nil 7949 . 8004) (nil fontified nil 8051 . 8077) (nil fontified nil 8102 . 8169) (nil fontified nil 8183 . 8202) (nil fontified nil 8234 . 8238) (nil fontified nil 8281 . 8303) (nil fontified nil 8313 . 8326) (nil fontified nil 8339 . 8388) (nil fontified nil 8402 . 8430) (nil fontified nil 8443 . 8466) (nil fontified nil 8495 . 8558) (nil fontified nil 8575 . 8619) (nil fontified nil 8668 . 8672) (nil fontified nil 8709 . 8720) (nil fontified nil 8756 . 8767) (nil fontified nil 8785 . 8797) (nil fontified nil 8806 . 8850) (nil fontified nil 8899 . 8904) (nil fontified nil 8940 . 8952) (nil fontified nil 8994 . 8998) (nil fontified nil 8998 . 9384) (nil fontified nil 9412 . 9418) (nil fontified nil 9467 . 9484) (nil fontified nil 9497 . 9508) (nil fontified nil 9555 . 9569) (nil fontified nil 9618 . 9635) (nil fontified nil 9648 . 9669) (nil fontified nil 9685 . 9688) (nil fontified nil 9716 . 9742) (nil fontified nil 9780 . 9798) (nil fontified nil 9845 . 9873) (nil fontified nil 9988 . 10053) (nil fontified nil 10091 . 10102) (nil fontified nil 10112 . 10124) (nil fontified nil 10147 . 10157) (nil fontified nil 10157 . 10167) (nil fontified nil 10185 . 10195) (nil fontified nil 10222 . 10246) (nil fontified nil 10260 . 10312) (nil fontified nil 10332 . 10361) (nil fontified nil 10371 . 10383) (nil fontified nil 10406 . 10416) (nil fontified nil 10416 . 10426) (nil fontified nil 10444 . 10454) (nil fontified nil 10481 . 10505) (nil fontified nil 10515 . 10533) (nil fontified nil 10615 . 10626) (nil fontified nil 10640 . 10643) (nil fontified nil 10723 . 10777) (nil fontified nil 10797 . 10826) (nil fontified nil 10836 . 10848) (nil fontified nil 10871 . 10881) (nil fontified nil 10881 . 10891) (nil fontified nil 10909 . 10919) (nil fontified nil 10995 . 11040) (nil fontified nil 11060 . 11089) (nil fontified nil 11099 . 11111) (nil fontified nil 11134 . 11144) (nil fontified nil 11144 . 11154) (nil fontified nil 11172 . 11182) (nil fontified nil 11260 . 11278) (nil fontified nil 11284 . 11440) (nil fontified nil 11471 . 11485) (nil fontified nil 11495 . 11511) (nil fontified nil 11542 . 11555) (nil fontified nil 11555 . 11566) (nil fontified nil 11632 . 11633) (nil fontified nil 11633 . 32563) (nil fontified nil 32575 . 32592) (nil fontified nil 32633 . 32634) (nil fontified nil 32660 . 32676) (nil fontified nil 32700 . 32715) (nil fontified nil 32756 . 32780) (nil fontified nil 32823 . 32828) (nil fontified nil 32851 . 32877) (nil fontified nil 32938 . 32947) (nil fontified nil 32995 . 33009) (nil fontified nil 33031 . 33063) (nil fontified nil 33119 . 33128) (nil fontified nil 33161 . 33169) (nil fontified nil 33194 . 33195) (nil fontified nil 33195 . 33237) (nil fontified nil 33264 . 33291) (nil fontified nil 33305 . 33325) (nil fontified nil 33347 . 33360) (nil fontified nil 33414 . 33415) (nil fontified nil 33459 . 33460) (nil fontified nil 33491 . 33492) (nil fontified nil 33518 . 33521) (nil fontified nil 33548 . 33561) (nil fontified nil 33587 . 33589) (nil fontified nil 33626 . 33649) (nil fontified nil 33664 . 33690) (nil fontified nil 33700 . 33711) (nil fontified nil 33763 . 33781) (nil fontified nil 33781 . 33782) (nil fontified nil 33807 . 33829) (nil fontified nil 33856 . 33883) (nil fontified nil 33897 . 33948) (nil fontified nil 33964 . 33967) (nil fontified nil 34068 . 34076) (nil fontified nil 34090 . 34146) (nil fontified nil 34182 . 34187) (nil fontified nil 34300 . 34314) (nil fontified nil 34337 . 34343) (nil fontified nil 34367 . 34379) (nil fontified nil 34413 . 34415) (nil fontified nil 34523 . 34551) (nil fontified nil 34565 . 34654) (nil fontified nil 34681 . 34700) (nil fontified t 34739 . 34749) (nil fontified nil 34728 . 34739) (nil fontified t 34814 . 34817) (nil fontified t 34861 . 34881) (nil fontified t 34911 . 34936) (nil fontified t 34954 . 34981) (nil fontified t 34981 . 34988) (nil rear-nonsticky t 35012 . 35013)) (25716 48447 432270 500000) 0 nil] [nil nil ((nil rear-nonsticky nil 35012 . 35013) (nil fontified nil 34981 . 35013) (nil fontified nil 34954 . 34981) (nil fontified nil 34953 . 34954) (nil fontified nil 34950 . 34953) (nil fontified nil 34944 . 34950) (nil fontified nil 34911 . 34944) (nil fontified nil 34904 . 34911) (nil fontified nil 34903 . 34904) (nil fontified nil 34897 . 34903) (nil fontified nil 34881 . 34897) (nil fontified nil 34861 . 34881) (nil fontified nil 34859 . 34861) (nil fontified nil 34847 . 34859) (nil fontified nil 34831 . 34847) (nil fontified nil 34829 . 34831) (nil fontified nil 34814 . 34829) (nil fontified nil 34807 . 34814) (nil fontified nil 34801 . 34807) (nil fontified nil 34800 . 34801) (nil fontified nil 34788 . 34800) (nil fontified nil 34786 . 34788) (nil fontified nil 34728 . 34786) (nil fontified nil 34727 . 34728) (nil fontified nil 34712 . 34727) (nil fontified nil 34708 . 34712) (nil fontified nil 34681 . 34708) (nil fontified nil 34680 . 34681) (nil fontified nil 34676 . 34680) (nil fontified nil 34674 . 34676) (nil fontified nil 34565 . 34674) (nil fontified nil 34559 . 34565) (nil fontified nil 34523 . 34559) (nil fontified nil 34522 . 34523) (nil fontified nil 34516 . 34522) (nil fontified nil 34515 . 34516) (nil fontified nil 34514 . 34515) (nil fontified nil 34502 . 34514) (nil fontified nil 34501 . 34502) (nil fontified nil 34500 . 34501) (nil fontified nil 34499 . 34500) (nil fontified nil 34494 . 34499) (nil fontified nil 34493 . 34494) (nil fontified nil 34492 . 34493) (nil fontified nil 34462 . 34492) (nil fontified nil 34461 . 34462) (nil fontified nil 34456 . 34461) (nil fontified nil 34455 . 34456) (nil fontified nil 34449 . 34455) (nil fontified nil 34448 . 34449) (nil fontified nil 34447 . 34448) (nil fontified nil 34436 . 34447) (nil fontified nil 34435 . 34436) (nil fontified nil 34430 . 34435) (nil fontified nil 34423 . 34430) (nil fontified nil 34413 . 34423) (nil fontified nil 34411 . 34413) (nil fontified nil 34367 . 34411) (nil fontified nil 34362 . 34367) (nil fontified nil 34361 . 34362) (nil fontified nil 34355 . 34361) (nil fontified nil 34337 . 34355) (nil fontified nil 34335 . 34337) (nil fontified nil 34324 . 34335) (nil fontified nil 34322 . 34324) (nil fontified nil 34300 . 34322) (nil fontified nil 34299 . 34300) (nil fontified nil 34298 . 34299) (nil fontified nil 34297 . 34298) (nil fontified nil 34292 . 34297) (nil fontified nil 34291 . 34292) (nil fontified nil 34290 . 34291) (nil fontified nil 34282 . 34290) (nil fontified nil 34281 . 34282) (nil fontified nil 34276 . 34281) (nil fontified nil 34275 . 34276) (nil fontified nil 34274 . 34275) (nil fontified nil 34252 . 34274) (nil fontified nil 34251 . 34252) (nil fontified nil 34246 . 34251) (nil fontified nil 34245 . 34246) (nil fontified nil 34239 . 34245) (nil fontified nil 34238 . 34239) (nil fontified nil 34237 . 34238) (nil fontified nil 34219 . 34237) (nil fontified nil 34218 . 34219) (nil fontified nil 34213 . 34218) (nil fontified nil 34206 . 34213) (nil fontified nil 34205 . 34206) (nil fontified nil 34203 . 34205) (nil fontified nil 34182 . 34203) (nil fontified nil 34181 . 34182) (nil fontified nil 34168 . 34181) (nil fontified nil 34154 . 34168) (nil fontified nil 34090 . 34154) (nil fontified nil 34084 . 34090) (nil fontified nil 34068 . 34084) (nil fontified nil 34067 . 34068) (nil fontified nil 34061 . 34067) (nil fontified nil 34060 . 34061) (nil fontified nil 34059 . 34060) (nil fontified nil 34051 . 34059) (nil fontified nil 34050 . 34051) (nil fontified nil 34045 . 34050) (nil fontified nil 34044 . 34045) (nil fontified nil 34043 . 34044) (nil fontified nil 34017 . 34043) (nil fontified nil 34016 . 34017) (nil fontified nil 34011 . 34016) (nil fontified nil 34010 . 34011) (nil fontified nil 34004 . 34010) (nil fontified nil 34003 . 34004) (nil fontified nil 34002 . 34003) (nil fontified nil 33988 . 34002) (nil fontified nil 33987 . 33988) (nil fontified nil 33982 . 33987) (nil fontified nil 33975 . 33982) (nil fontified nil 33964 . 33975) (nil fontified nil 33962 . 33964) (nil fontified nil 33897 . 33962) (nil fontified nil 33891 . 33897) (nil fontified nil 33856 . 33891) (nil fontified nil 33837 . 33856) (nil fontified nil 33807 . 33837) (nil fontified nil 33790 . 33807) (nil fontified nil 33781 . 33790) (nil fontified nil 33763 . 33781) (nil fontified nil 33762 . 33763) (nil fontified nil 33736 . 33762) (nil fontified nil 33734 . 33736) (nil fontified nil 33700 . 33734) (nil fontified nil 33698 . 33700) (nil fontified nil 33664 . 33698) (nil fontified nil 33662 . 33664) (nil fontified nil 33626 . 33662) (nil fontified nil 33625 . 33626) (nil fontified nil 33621 . 33625) (nil fontified nil 33619 . 33621) (nil fontified nil 33587 . 33619) (nil fontified nil 33582 . 33587) (nil fontified nil 33580 . 33582) (nil fontified nil 33548 . 33580) (nil fontified nil 33547 . 33548) (nil fontified nil 33545 . 33547) (nil fontified nil 33544 . 33545) (nil fontified nil 33543 . 33544) (nil fontified nil 33536 . 33543) (nil fontified nil 33535 . 33536) (nil fontified nil 33529 . 33535) (nil fontified nil 33518 . 33529) (nil fontified nil 33517 . 33518) (nil fontified nil 33500 . 33517) (nil fontified nil 33491 . 33500) (nil fontified nil 33489 . 33491) (nil fontified nil 33488 . 33489) (nil fontified nil 33487 . 33488) (nil fontified nil 33468 . 33487) (nil fontified nil 33459 . 33468) (nil fontified nil 33443 . 33459) (nil fontified nil 33441 . 33443) (nil fontified nil 33414 . 33441) (nil fontified nil 33393 . 33414) (nil fontified nil 33391 . 33393) (nil fontified nil 33347 . 33391) (nil fontified nil 33325 . 33347) (nil fontified nil 33305 . 33325) (nil fontified nil 33299 . 33305) (nil fontified nil 33264 . 33299) (nil fontified nil 33245 . 33264) (nil fontified nil 33195 . 33245) (nil fontified nil 33194 . 33195) (nil fontified nil 33189 . 33194) (nil fontified nil 33161 . 33189) (nil fontified nil 33159 . 33161) (nil fontified nil 33119 . 33159) (nil fontified nil 33118 . 33119) (nil fontified nil 33113 . 33118) (nil fontified nil 33112 . 33113) (nil fontified nil 33091 . 33112) (nil fontified nil 33090 . 33091) (nil fontified nil 33083 . 33090) (nil fontified nil 33063 . 33083) (nil fontified nil 33031 . 33063) (nil fontified nil 33029 . 33031) (nil fontified nil 33009 . 33029) (nil fontified nil 32995 . 33009) (nil fontified nil 32994 . 32995) (nil fontified nil 32988 . 32994) (nil fontified nil 32987 . 32988) (nil fontified nil 32985 . 32987) (nil fontified nil 32965 . 32985) (nil fontified nil 32963 . 32965) (nil fontified nil 32938 . 32963) (nil fontified nil 32929 . 32938) (nil fontified nil 32926 . 32929) (nil fontified nil 32925 . 32926) (nil fontified nil 32919 . 32925) (nil fontified nil 32918 . 32919) (nil fontified nil 32917 . 32918) (nil fontified nil 32900 . 32917) (nil fontified nil 32899 . 32900) (nil fontified nil 32893 . 32899) (nil fontified nil 32851 . 32893) (nil fontified nil 32849 . 32851) (nil fontified nil 32823 . 32849) (nil fontified nil 32821 . 32823) (nil fontified nil 32794 . 32821) (nil fontified nil 32792 . 32794) (nil fontified nil 32756 . 32792) (nil fontified nil 32755 . 32756) (nil fontified nil 32751 . 32755) (nil fontified nil 32749 . 32751) (nil fontified nil 32700 . 32749) (nil fontified nil 32692 . 32700) (nil fontified nil 32660 . 32692) (nil fontified nil 32658 . 32660) (nil fontified nil 32648 . 32658) (nil fontified nil 32646 . 32648) (nil fontified nil 32633 . 32646) (nil fontified nil 32624 . 32633) (nil fontified nil 32613 . 32624) (nil fontified nil 32611 . 32613) (nil fontified nil 32592 . 32611) (nil fontified nil 32575 . 32592) (nil fontified nil 32571 . 32575) (nil fontified nil 32563 . 32571) (nil fontified nil 11633 . 32563) (nil fontified nil 11632 . 11633) (nil fontified nil 11592 . 11632) (nil fontified nil 11591 . 11592) (nil fontified nil 11590 . 11591) (nil fontified nil 11555 . 11590) (nil fontified nil 11542 . 11555) (nil fontified nil 11541 . 11542) (nil fontified nil 11529 . 11541) (nil fontified nil 11523 . 11529) (nil fontified nil 11495 . 11523) (nil fontified nil 11493 . 11495) (nil fontified nil 11471 . 11493) (nil fontified nil 11470 . 11471) (nil fontified nil 11440 . 11470) (nil fontified nil 11284 . 11440) (nil fontified nil 11282 . 11284) (nil fontified nil 11260 . 11282) (nil fontified nil 11259 . 11260) (nil fontified nil 11254 . 11259) (nil fontified nil 11253 . 11254) (nil fontified nil 11252 . 11253) (nil fontified nil 11227 . 11252) (nil fontified nil 11226 . 11227) (nil fontified nil 11221 . 11226) (nil fontified nil 11220 . 11221) (nil fontified nil 11214 . 11220) (nil fontified nil 11213 . 11214) (nil fontified nil 11212 . 11213) (nil fontified nil 11203 . 11212) (nil fontified nil 11202 . 11203) (nil fontified nil 11197 . 11202) (nil fontified nil 11190 . 11197) (nil fontified nil 11172 . 11190) (nil fontified nil 11170 . 11172) (nil fontified nil 11144 . 11170) (nil fontified nil 11134 . 11144) (nil fontified nil 11133 . 11134) (nil fontified nil 11131 . 11133) (nil fontified nil 11130 . 11131) (nil fontified nil 11129 . 11130) (nil fontified nil 11123 . 11129) (nil fontified nil 11099 . 11123) (nil fontified nil 11097 . 11099) (nil fontified nil 11060 . 11097) (nil fontified nil 11059 . 11060) (nil fontified nil 11055 . 11059) (nil fontified nil 11053 . 11055) (nil fontified nil 10995 . 11053) (nil fontified nil 10994 . 10995) (nil fontified nil 10989 . 10994) (nil fontified nil 10988 . 10989) (nil fontified nil 10987 . 10988) (nil fontified nil 10962 . 10987) (nil fontified nil 10961 . 10962) (nil fontified nil 10956 . 10961) (nil fontified nil 10955 . 10956) (nil fontified nil 10949 . 10955) (nil fontified nil 10948 . 10949) (nil fontified nil 10947 . 10948) (nil fontified nil 10940 . 10947) (nil fontified nil 10939 . 10940) (nil fontified nil 10934 . 10939) (nil fontified nil 10927 . 10934) (nil fontified nil 10909 . 10927) (nil fontified nil 10907 . 10909) (nil fontified nil 10881 . 10907) (nil fontified nil 10871 . 10881) (nil fontified nil 10870 . 10871) (nil fontified nil 10868 . 10870) (nil fontified nil 10867 . 10868) (nil fontified nil 10866 . 10867) (nil fontified nil 10860 . 10866) (nil fontified nil 10836 . 10860) (nil fontified nil 10834 . 10836) (nil fontified nil 10797 . 10834) (nil fontified nil 10796 . 10797) (nil fontified nil 10792 . 10796) (nil fontified nil 10790 . 10792) (nil fontified nil 10723 . 10790) (nil fontified nil 10722 . 10723) (nil fontified nil 10717 . 10722) (nil fontified nil 10716 . 10717) (nil fontified nil 10715 . 10716) (nil fontified nil 10690 . 10715) (nil fontified nil 10689 . 10690) (nil fontified nil 10684 . 10689) (nil fontified nil 10683 . 10684) (nil fontified nil 10677 . 10683) (nil fontified nil 10676 . 10677) (nil fontified nil 10675 . 10676) (nil fontified nil 10668 . 10675) (nil fontified nil 10667 . 10668) (nil fontified nil 10662 . 10667) (nil fontified nil 10655 . 10662) (nil fontified nil 10640 . 10655) (nil fontified nil 10636 . 10640) (nil fontified nil 10615 . 10636) (nil fontified nil 10614 . 10615) (nil fontified nil 10609 . 10614) (nil fontified nil 10608 . 10609) (nil fontified nil 10607 . 10608) (nil fontified nil 10582 . 10607) (nil fontified nil 10581 . 10582) (nil fontified nil 10576 . 10581) (nil fontified nil 10575 . 10576) (nil fontified nil 10569 . 10575) (nil fontified nil 10568 . 10569) (nil fontified nil 10567 . 10568) (nil fontified nil 10558 . 10567) (nil fontified nil 10557 . 10558) (nil fontified nil 10552 . 10557) (nil fontified nil 10545 . 10552) (nil fontified nil 10515 . 10545) (nil fontified nil 10513 . 10515) (nil fontified nil 10481 . 10513) (nil fontified nil 10480 . 10481) (nil fontified nil 10476 . 10480) (nil fontified nil 10474 . 10476) (nil fontified nil 10444 . 10474) (nil fontified nil 10442 . 10444) (nil fontified nil 10416 . 10442) (nil fontified nil 10406 . 10416) (nil fontified nil 10405 . 10406) (nil fontified nil 10403 . 10405) (nil fontified nil 10402 . 10403) (nil fontified nil 10401 . 10402) (nil fontified nil 10395 . 10401) (nil fontified nil 10371 . 10395) (nil fontified nil 10369 . 10371) (nil fontified nil 10332 . 10369) (nil fontified nil 10331 . 10332) (nil fontified nil 10327 . 10331) (nil fontified nil 10325 . 10327) (nil fontified nil 10260 . 10325) (nil fontified nil 10254 . 10260) (nil fontified nil 10222 . 10254) (nil fontified nil 10221 . 10222) (nil fontified nil 10217 . 10221) (nil fontified nil 10215 . 10217) (nil fontified nil 10185 . 10215) (nil fontified nil 10183 . 10185) (nil fontified nil 10157 . 10183) (nil fontified nil 10147 . 10157) (nil fontified nil 10146 . 10147) (nil fontified nil 10144 . 10146) (nil fontified nil 10143 . 10144) (nil fontified nil 10142 . 10143) (nil fontified nil 10136 . 10142) (nil fontified nil 10112 . 10136) (nil fontified nil 10110 . 10112) (nil fontified nil 10091 . 10110) (nil fontified nil 10073 . 10091) (nil fontified nil 10072 . 10073) (nil fontified nil 10068 . 10072) (nil fontified nil 10066 . 10068) (nil fontified nil 10053 . 10066) (nil fontified nil 9988 . 10053) (nil fontified nil 9987 . 9988) (nil fontified nil 9982 . 9987) (nil fontified nil 9981 . 9982) (nil fontified nil 9980 . 9981) (nil fontified nil 9964 . 9980) (nil fontified nil 9963 . 9964) (nil fontified nil 9958 . 9963) (nil fontified nil 9957 . 9958) (nil fontified nil 9956 . 9957) (nil fontified nil 9926 . 9956) (nil fontified nil 9925 . 9926) (nil fontified nil 9920 . 9925) (nil fontified nil 9919 . 9920) (nil fontified nil 9913 . 9919) (nil fontified nil 9912 . 9913) (nil fontified nil 9911 . 9912) (nil fontified nil 9894 . 9911) (nil fontified nil 9893 . 9894) (nil fontified nil 9888 . 9893) (nil fontified nil 9881 . 9888) (nil fontified nil 9845 . 9881) (nil fontified nil 9844 . 9845) (nil fontified nil 9832 . 9844) (nil fontified nil 9830 . 9832) (nil fontified nil 9780 . 9830) (nil fontified nil 9779 . 9780) (nil fontified nil 9767 . 9779) (nil fontified nil 9765 . 9767) (nil fontified nil 9716 . 9765) (nil fontified nil 9711 . 9716) (nil fontified nil 9710 . 9711) (nil fontified nil 9704 . 9710) (nil fontified nil 9685 . 9704) (nil fontified nil 9681 . 9685) (nil fontified nil 9669 . 9681) (nil fontified nil 9648 . 9669) (nil fontified nil 9647 . 9648) (nil fontified nil 9618 . 9647) (nil fontified nil 9617 . 9618) (nil fontified nil 9606 . 9617) (nil fontified nil 9604 . 9606) (nil fontified nil 9555 . 9604) (nil fontified nil 9554 . 9555) (nil fontified nil 9541 . 9554) (nil fontified nil 9540 . 9541) (nil fontified nil 9527 . 9540) (nil fontified nil 9525 . 9527) (nil fontified nil 9524 . 9525) (nil fontified nil 9520 . 9524) (nil fontified nil 9508 . 9520) (nil fontified nil 9497 . 9508) (nil fontified nil 9496 . 9497) (nil fontified nil 9467 . 9496) (nil fontified nil 9466 . 9467) (nil fontified nil 9455 . 9466) (nil fontified nil 9453 . 9455) (nil fontified nil 9412 . 9453) (nil fontified nil 9411 . 9412) (nil fontified nil 9398 . 9411) (nil fontified nil 9396 . 9398) (nil fontified nil 9384 . 9396) (nil fontified nil 8998 . 9384) (nil fontified nil 8994 . 8998) (nil fontified nil 8965 . 8994) (nil fontified nil 8964 . 8965) (nil fontified nil 8940 . 8964) (nil fontified nil 8935 . 8940) (nil fontified nil 8921 . 8935) (nil fontified nil 8920 . 8921) (nil fontified nil 8899 . 8920) (nil fontified nil 8898 . 8899) (nil fontified nil 8874 . 8898) (nil fontified nil 8873 . 8874) (nil fontified nil 8862 . 8873) (nil fontified nil 8858 . 8862) (nil fontified nil 8850 . 8858) (nil fontified nil 8806 . 8850) (nil fontified nil 8805 . 8806) (nil fontified nil 8785 . 8805) (nil fontified nil 8779 . 8785) (nil fontified nil 8756 . 8779) (nil fontified nil 8754 . 8756) (nil fontified nil 8730 . 8754) (nil fontified nil 8728 . 8730) (nil fontified nil 8709 . 8728) (nil fontified nil 8708 . 8709) (nil fontified nil 8704 . 8708) (nil fontified nil 8702 . 8704) (nil fontified nil 8668 . 8702) (nil fontified nil 8663 . 8668) (nil fontified nil 8661 . 8663) (nil fontified nil 8643 . 8661) (nil fontified nil 8642 . 8643) (nil fontified nil 8575 . 8642) (nil fontified nil 8574 . 8575) (nil fontified nil 8495 . 8574) (nil fontified nil 8494 . 8495) (nil fontified nil 8490 . 8494) (nil fontified nil 8488 . 8490) (nil fontified nil 8466 . 8488) (nil fontified nil 8443 . 8466) (nil fontified nil 8442 . 8443) (nil fontified nil 8430 . 8442) (nil fontified nil 8402 . 8430) (nil fontified nil 8400 . 8402) (nil fontified nil 8388 . 8400) (nil fontified nil 8339 . 8388) (nil fontified nil 8338 . 8339) (nil fontified nil 8313 . 8338) (nil fontified nil 8311 . 8313) (nil fontified nil 8281 . 8311) (nil fontified nil 8280 . 8281) (nil fontified nil 8276 . 8280) (nil fontified nil 8274 . 8276) (nil fontified nil 8234 . 8274) (nil fontified nil 8229 . 8234) (nil fontified nil 8227 . 8229) (nil fontified nil 8183 . 8227) (nil fontified nil 8177 . 8183) (nil fontified nil 8102 . 8177) (nil fontified nil 8101 . 8102) (nil fontified nil 8097 . 8101) (nil fontified nil 8095 . 8097) (nil fontified nil 8051 . 8095) (nil fontified nil 8050 . 8051) (nil fontified nil 8046 . 8050) (nil fontified nil 8044 . 8046) (nil fontified nil 7949 . 8044) (nil fontified nil 7940 . 7949) (nil fontified nil 7937 . 7940) (nil fontified nil 7926 . 7937) (nil fontified nil 7890 . 7926) (nil fontified nil 7888 . 7890) (nil fontified nil 7861 . 7888) (nil fontified nil 7860 . 7861) (nil fontified nil 7855 . 7860) (nil fontified nil 7854 . 7855) (nil fontified nil 7853 . 7854) (nil fontified nil 7844 . 7853) (nil fontified nil 7843 . 7844) (nil fontified nil 7838 . 7843) (nil fontified nil 7837 . 7838) (nil fontified nil 7836 . 7837) (nil fontified nil 7806 . 7836) (nil fontified nil 7805 . 7806) (nil fontified nil 7800 . 7805) (nil fontified nil 7799 . 7800) (nil fontified nil 7794 . 7799) (nil fontified nil 7793 . 7794) (nil fontified nil 7792 . 7793) (nil fontified nil 7775 . 7792) (nil fontified nil 7774 . 7775) (nil fontified nil 7769 . 7774) (nil fontified nil 7762 . 7769) (nil fontified nil 7728 . 7762) (nil fontified nil 7727 . 7728) (nil fontified nil 7709 . 7727) (nil fontified nil 7708 . 7709) (nil fontified nil 7704 . 7708) (nil fontified nil 7702 . 7704) (nil fontified nil 7656 . 7702) (nil fontified nil 7655 . 7656) (nil fontified nil 7651 . 7655) (nil fontified nil 7649 . 7651) (nil fontified nil 7614 . 7649) (nil fontified nil 7612 . 7614) (nil fontified nil 7587 . 7612) (nil fontified nil 7585 . 7587) (nil fontified nil 7560 . 7585) (nil fontified nil 7550 . 7560) (nil fontified nil 7549 . 7550) (nil fontified nil 7547 . 7549) (nil fontified nil 7546 . 7547) (nil fontified nil 7545 . 7546) (nil fontified nil 7539 . 7545) (nil fontified nil 7515 . 7539) (nil fontified nil 7513 . 7515) (nil fontified nil 7494 . 7513) (nil fontified nil 7476 . 7494) (nil fontified nil 7475 . 7476) (nil fontified nil 7471 . 7475) (nil fontified nil 7469 . 7471) (nil fontified nil 7456 . 7469) (nil fontified nil 7452 . 7456) (nil fontified nil 7448 . 7452) (nil fontified nil 7446 . 7448) (nil fontified nil 7427 . 7446) (nil fontified nil 7426 . 7427) (nil fontified nil 7362 . 7426) (nil fontified nil 7361 . 7362) (nil fontified nil 7339 . 7361) (nil fontified nil 7338 . 7339) (nil fontified nil 7312 . 7338) (nil fontified nil 7311 . 7312) (nil fontified nil 7292 . 7311) (nil fontified nil 7291 . 7292) (nil fontified nil 7206 . 7291) (nil fontified nil 7200 . 7206) (nil fontified nil 7169 . 7200) (nil fontified nil 7168 . 7169) (nil fontified nil 7137 . 7168) (nil fontified nil 7136 . 7137) (nil fontified nil 7106 . 7136) (nil fontified nil 7105 . 7106) (nil fontified nil 7064 . 7105) (nil fontified nil 7063 . 7064) (nil fontified nil 7058 . 7063) (nil fontified nil 7056 . 7058) (nil fontified nil 6996 . 7056) (nil fontified nil 6995 . 6996) (nil fontified nil 6990 . 6995) (nil fontified nil 6988 . 6990) (nil fontified nil 6940 . 6988) (nil fontified nil 6939 . 6940) (nil fontified nil 6868 . 6939) (nil fontified nil 6862 . 6868) (nil fontified nil 6843 . 6862) (nil fontified nil 6625 . 6843) (nil fontified nil 6600 . 6625) (nil fontified nil 6599 . 6600) (nil fontified nil 6591 . 6599) (nil fontified nil 6525 . 6591) (nil fontified nil 6524 . 6525) (nil fontified nil 6500 . 6524) (nil fontified nil 6499 . 6500) (nil fontified nil 6481 . 6499) (nil fontified nil 6479 . 6481) (nil fontified nil 6440 . 6479) (nil fontified nil 6439 . 6440) (nil fontified nil 6427 . 6439) (nil fontified nil 6425 . 6427) (nil fontified nil 6384 . 6425) (nil fontified nil 6383 . 6384) (nil fontified nil 6379 . 6383) (nil fontified nil 6377 . 6379) (nil fontified nil 6351 . 6377) (nil fontified nil 6334 . 6351) (nil fontified nil 6333 . 6334) (nil fontified nil 6314 . 6333) (nil fontified nil 6230 . 6314) (nil fontified nil 6229 . 6230) (nil fontified nil 6204 . 6229) (nil fontified nil 6203 . 6204) (nil fontified nil 6201 . 6203) (nil fontified nil 6179 . 6201) (nil fontified nil 6178 . 6179) (nil fontified nil 6172 . 6178) (nil fontified nil 6170 . 6172) (nil fontified nil 6129 . 6170) (nil fontified nil 6127 . 6129) (nil fontified nil 6100 . 6127) (nil fontified nil 6099 . 6100) (nil fontified nil 6094 . 6099) (nil fontified nil 6093 . 6094) (nil fontified nil 6092 . 6093) (nil fontified nil 6083 . 6092) (nil fontified nil 6082 . 6083) (nil fontified nil 6077 . 6082) (nil fontified nil 6076 . 6077) (nil fontified nil 6075 . 6076) (nil fontified nil 6045 . 6075) (nil fontified nil 6044 . 6045) (nil fontified nil 6039 . 6044) (nil fontified nil 6038 . 6039) (nil fontified nil 6033 . 6038) (nil fontified nil 6032 . 6033) (nil fontified nil 6031 . 6032) (nil fontified nil 6014 . 6031) (nil fontified nil 6013 . 6014) (nil fontified nil 6008 . 6013) (nil fontified nil 6001 . 6008) (nil fontified nil 5975 . 6001) (nil fontified nil 5974 . 5975) (nil fontified nil 5956 . 5974) (nil fontified nil 5955 . 5956) (nil fontified nil 5951 . 5955) (nil fontified nil 5949 . 5951) (nil fontified nil 5900 . 5949) (nil fontified nil 5896 . 5900) (nil fontified nil 5894 . 5896) (nil fontified nil 5844 . 5894) (nil fontified nil 5842 . 5844) (nil fontified nil 5830 . 5842) (nil fontified nil 5828 . 5830) (nil fontified nil 5811 . 5828) (nil fontified nil 5808 . 5811) (nil fontified nil 5807 . 5808) (nil fontified nil 5799 . 5807) (nil fontified nil 5797 . 5799) (nil fontified nil 5785 . 5797) (nil fontified nil 5783 . 5785) (nil fontified nil 5774 . 5783) (nil fontified nil 5769 . 5774) (nil fontified nil 5767 . 5769) (nil fontified nil 5726 . 5767) (nil fontified nil 5724 . 5726) (nil fontified nil 5699 . 5724) (nil fontified nil 5697 . 5699) (nil fontified nil 5672 . 5697) (nil fontified nil 5662 . 5672) (nil fontified nil 5661 . 5662) (nil fontified nil 5659 . 5661) (nil fontified nil 5658 . 5659) (nil fontified nil 5657 . 5658) (nil fontified nil 5651 . 5657) (nil fontified nil 5627 . 5651) (nil fontified nil 5625 . 5627) (nil fontified nil 5588 . 5625) (nil fontified nil 5587 . 5588) (nil fontified nil 5583 . 5587) (nil fontified nil 5581 . 5583) (nil fontified nil 5553 . 5581) (nil fontified nil 5552 . 5553) (nil fontified nil 5499 . 5552) (nil fontified nil 5490 . 5499) (nil fontified nil 5489 . 5490) (nil fontified nil 5483 . 5489) (nil fontified nil 5482 . 5483) (nil fontified nil 5481 . 5482) (nil fontified nil 5470 . 5481) (nil fontified nil 5434 . 5470) (nil fontified nil 5432 . 5434) (nil fontified nil 5387 . 5432) (nil fontified nil 5386 . 5387) (nil fontified nil 5343 . 5386) (nil fontified nil 5342 . 5343) (nil fontified nil 5338 . 5342) (nil fontified nil 5336 . 5338) (nil fontified nil 5299 . 5336) (nil fontified nil 5297 . 5299) (nil fontified nil 5272 . 5297) (nil fontified nil 5262 . 5272) (nil fontified nil 5261 . 5262) (nil fontified nil 5259 . 5261) (nil fontified nil 5258 . 5259) (nil fontified nil 5257 . 5258) (nil fontified nil 5251 . 5257) (nil fontified nil 5227 . 5251) (nil fontified nil 5225 . 5227) (nil fontified nil 5188 . 5225) (nil fontified nil 5187 . 5188) (nil fontified nil 5183 . 5187) (nil fontified nil 5181 . 5183) (nil fontified nil 5164 . 5181) (nil fontified nil 5160 . 5164) (nil fontified nil 5158 . 5160) (nil fontified nil 5139 . 5158) (nil fontified nil 5138 . 5139) (nil fontified nil 5099 . 5138) (nil fontified nil 5070 . 5099) (nil fontified nil 5068 . 5070) (nil fontified nil 5048 . 5068) (nil fontified nil 5047 . 5048) (nil fontified nil 5041 . 5047) (nil fontified nil 5002 . 5041) (5002 . 35013)) ((#("_desktopNum_from_Hwnd(theHwnd)
        return desktopNum_ofWindow ; 0 for \"Show on all desktops\"
    }

    goToDesktopOfWindow(wintitle, activateYourWindow:=true) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        theHwnd:=found[1]

        desktopNum_ofWindow:=this._desktopNum_from_Hwnd(theHwnd)
        this.goToDesktopNum(desktopNum_ofWindow)

        if (activateYourWindow) {
            WinActivate, ahk_id %theHwnd%
        }
    }

    MoveWindowToDesktopNum(wintitle, desktopNum) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        theHwnd:=found[1]
        thePView:=found[2]

        needActivateWindowUnder:=False
        if (activeHwnd:=WinExist(\"A\")) {
            if (activeHwnd==theHwnd) {
                needActivateWindowUnder:=true
            }
        }

        IVirtualDesktop:=this._GetDesktops_Obj().GetAt(desktopNum)
        DllCall(this.MoveViewToDesktop, \"ptr\", this.IVirtualDesktopManagerInternal, \"Ptr\", thePView, \"Ptr\", IVirtualDesktop)

        if (needActivateWindowUnder) {
            if (this._activateWindowUnder()==-1) {
                this._activateDesktopBackground()
            }
        }
    }

    getRelativeDesktopNum(anchor_desktopNum, relative_count)
    {
        Desktops_Obj:=this._GetDesktops_Obj()
        count_Desktops:=Desktops_Obj.GetCount()

        absolute_desktopNum:=anchor_desktopNum + relative_count
        ;// The 1-based indices wrap around on the first and last desktop.
        ;// say count_Desktops:=3
        absolute_desktopNum:=Mod(absolute_desktopNum, count_Desktops)
        ; 4 -> 1
        if (absolute_desktopNum <= 0) {
            ; 0 -> 3
            absolute_desktopNum:=absolute_desktopNum + count_Desktops
        }

        return absolute_desktopNum
    }

    MoveWindowToRelativeDesktopNum(wintitle, relative_count) {

        desktopNum_ofWindow := this.getDesktopNumOfWindow(wintitle)
        absolute_desktopNum := this.getRelativeDesktopNum(desktopNum_ofWindow, relative_count)

        this.MoveWindowToDesktopNum(wintitle, absolute_desktopNum)

        return absolute_desktopNum
    }

    gotoRelativeDesktopNum(relative_count) {
        this.goToDesktopNum(this.getRelativeDesktopNum(this.getCurrentDesktopNum(), relative_count))
    }

    MoveWindowToCurrentDesktop(wintitle, activateYourWindow:=true) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        theHwnd:=found[1]
        thePView:=found[2]

        currentDesktopNum:=this.getCurrentDesktopNum()
        IVirtualDesktop:=this._GetDesktops_Obj().GetAt(currentDesktopNum)

        DllCall(this.MoveViewToDesktop, \"ptr\", this.IVirtualDesktopManagerInternal, \"Ptr\", thePView, \"Ptr\", IVirtualDesktop)

        if (activateYourWindow) {
            WinActivate % \"ahk_id \" theHwnd
        }
    }

    getCurrentDesktopNum() {
        IVirtualDesktop_ofCurrentDesktop:=this._dll_GetCurrentDesktop()

        desktopNum:=this._desktopNum_from_IVirtualDesktop(IVirtualDesktop_ofCurrentDesktop)
        return desktopNum
    }

    createDesktop(goThere:=false) {
        IVirtualDesktop_ofNewDesktop:=this._dll_CreateDesktop()

        if (goThere) {
            ;we could assume that it's the rightmost desktop:
            ; desktopNum:=this.getCount()
            ;but I'm not risking it
            desktopNum:=this._desktopNum_from_IVirtualDesktop(IVirtualDesktop_ofNewDesktop)
            this.goToDesktopNum(desktopNum)
        }
    }

    createUntil(howMany, goToLastlyCreated:=false) {
        howManyThereAlreadyAre:=this.getCount()
        if (howManyThereAlreadyAre>=howMany) {
            return
        }

        ;this will create until one less than wanted
        loop % howMany - howManyThereAlreadyAre - 1 {
            this.createDesktop(false)
        }
        this.createDesktop(goToLastlyCreated)
    }

    removeDesktop(desktopNum, fallback_desktopNum:=false) {
        ;FALLBACK IS ONLY USED IF YOU ARE CURRENTLY ON THE VD BEING DELETED
        ;but we NEED a fallback, regardless, so I'm not checking if you are currently on the vd being deleted

        Desktops_Obj:=this._GetDesktops_Obj()

        ;if no fallback,
        if (!fallback_desktopNum) {

            ;look left
            if (desktopNum > 1) {
                fallback_desktopNum:=desktopNum - 1
            }
            ;look right
            else if (desktopNum < Desktops_Obj.GetCount()) {
                fallback_desktopNum:=desktopNum + 1
            }
            ;no fallback to go to
            else {
                return false
            }
        }

        IVirtualDesktop:=Desktops_Obj.GetAt(desktopNum)
        IVirtualDesktop_fallback:=Desktops_Obj.GetAt(fallback_desktopNum)

        DllCall(this.Ptr_RemoveDesktop, \"UPtr\", this.IVirtualDesktopManagerInternal, \"Ptr\", IVirtualDesktop, \"Ptr\", IVirtualDesktop_fallback)
    }

    IsWindowPinned(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        viewIsPinned:=this._IsViewPinned(thePView)
        return viewIsPinned
    }
    TogglePinWindow(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        viewIsPinned:=this._IsViewPinned(thePView)
        if (viewIsPinned) {
            DllCall(this.UnPinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
        } else {
            DllCall(this.PinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
        }

    }
    PinWindow(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        DllCall(this.PinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
    }
    UnPinWindow(wintitle) {
        found:=this._tryGetValidWindow(wintitle)
        if (!found) {
            return -1 ;for false
        }
        thePView:=found[2]

        DllCall(this.UnPinView, \"UPtr\", this.IVirtualDesktopPinnedApps, \"Ptr\", thePView)
    }

    ; COM class start ;https://github.com/Ciantic/VirtualDesktopAccessor/blob/5bc1bbaab247b5d72e70abc9432a15275fd2d229/VirtualDesktopAccessor/dllmain.h#L718-L794
    _QueryInterface_Win10(riid, ppvObject) {
        if (!ppvObject) {
            return 0x80070057 ;E_INVALIDARG
        }

        str_IID_IUnknown:=\"{00000000-0000-0000-C000-000000000046}\"
        str_IID_IVirtualDesktopNotification:=\"{C179334C-4295-40D3-BEA1-C654D965605A}\"

        VarSetCapacity(someStr, 40*2)
        DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", riid, \"Ptr\",&someStr, \"Ptr\",40)
        str_riid:=StrGet(&someStr)

        if (str_riid==str_IID_IUnknown || str_riid==str_IID_IVirtualDesktopNotification) {
            NumPut(this, ppvObject+0, 0, \"Ptr\")
            VD._AddRef_Same.Call(this)
            return 0 ;S_OK
        }
        ; *ppvObject = NULL;
        NumPut(0, ppvObject+0, 0, \"Ptr\")
        return 0x80004002 ;E_NOINTERFACE

        ; // Always set out parameter to NULL, validating it first.
        ; if (!ppvObject)
            ; return E_INVALIDARG;
        ; *ppvObject = NULL;
;
        ; if (riid == IID_IUnknown || riid == IID_IVirtualDesktopNotification)
        ; {
            ; // Increment the reference count and return the pointer.
            ; *ppvObject = (LPVOID)this;
            ; AddRef();
            ; return S_OK;
        ; }
        ; return E_NOINTERFACE;
    }
    _AddRef_Same() {
        refCount:=NumGet(this+0, A_PtrSize, \"UInt\")
        refCount++
        NumPut(refCount, this+0, A_PtrSize, \"UInt\")
        ; NumPut(this + 4)
        ; refCount:=

        ; return InterlockedIncrement(&_referenceCount);
        return refCount
    }
    _Release_Same() {
        refCount:=NumGet(this+0, A_PtrSize, \"UInt\")
        refCount--
        NumPut(refCount, this+0, A_PtrSize, \"UInt\")
        ; ULONG result = InterlockedDecrement(&_referenceCount);
        ; if (result == 0)
        ; {
            ; delete this;
        ; }
        return refCount
    }
    _VirtualDesktopCreated_Win10(pDesktop) {
        ; Tooltip % 11111
        VD.VirtualDesktopCreated.Call(VD._desktopNum_from_IVirtualDesktop(pDesktop))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyBegin_Win10(pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 22222
        VD.VirtualDesktopDestroyBegin.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyFailed_Win10(pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 33333
        VD.VirtualDesktopDestroyFailed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyed_Win10(pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 44444
        VD.VirtualDesktopDestroyed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _ViewVirtualDesktopChanged_Win10(pView) {
        ; Tooltip % 55555
        VD.ViewVirtualDesktopChanged.Call(pView)
        return 0 ;S_OK
    }
    _CurrentVirtualDesktopChanged_Win10(pDesktopOld, pDesktopNew) {
        VD.CurrentVirtualDesktopChanged.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopOld), VD._desktopNum_from_IVirtualDesktop(pDesktopNew))
        return 0 ;S_OK
    }
    RegisterDesktopNotifications_Win10() { ;https://github.com/Ciantic/VirtualDesktopAccessor/blob/5bc1bbaab247b5d72e70abc9432a15275fd2d229/VirtualDesktopAccessor/dllmain.h#L718-L794
        methods:=DllCall(\"GlobalAlloc\", \"Uint\",0x00, \"Uint\",9*A_PtrSize) ;PLEASE DON'T GARBAGE COLLECT IT, this took me hours to debug, I was lucky ahkv2 garbage collected slowly
        NumPut(RegisterCallback(\"VD._QueryInterface_Win10\", \"F\"), methods+0, 0*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._AddRef_Same\", \"F\"), methods+0, 1*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._Release_Same\", \"F\"), methods+0, 2*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopCreated_Win10\", \"F\"), methods+0, 3*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyBegin_Win10\", \"F\"), methods+0, 4*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyFailed_Win10\", \"F\"), methods+0, 5*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyed_Win10\", \"F\"), methods+0, 6*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._ViewVirtualDesktopChanged_Win10\", \"F\"), methods+0, 7*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._CurrentVirtualDesktopChanged_Win10\", \"F\"), methods+0, 8*A_PtrSize, \"Ptr\")

        this.RegisterDesktopNotifications_Same(methods)
    }
    ;COM class for Win11
    _QueryInterface_Win11(riid, ppvObject) {
        if (!ppvObject) {
            return 0x80070057 ;E_INVALIDARG
        }

        str_IID_IUnknown:=\"{00000000-0000-0000-C000-000000000046}\"
        str_IID_IVirtualDesktopNotification:=\"{CD403E52-DEED-4C13-B437-B98380F2B1E8}\"

        VarSetCapacity(someStr, 40*2)
        DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", riid, \"Ptr\",&someStr, \"Ptr\",40)
        str_riid:=StrGet(&someStr)

        if (str_riid==str_IID_IUnknown || str_riid==str_IID_IVirtualDesktopNotification) {
            NumPut(this, ppvObject+0, 0, \"Ptr\")
            VD._AddRef_Same.Call(this)
            return 0 ;S_OK
        }
        ; *ppvObject = NULL;
        NumPut(0, ppvObject+0, 0, \"Ptr\")
        return 0x80004002 ;E_NOINTERFACE
    }
    _VirtualDesktopCreated_Win11(p0, pDesktop) {
        ; Tooltip % 11111
        VD.VirtualDesktopCreated.Call(VD._desktopNum_from_IVirtualDesktop(pDesktop))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyBegin_Win11(p0, pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 22222
        VD.VirtualDesktopDestroyBegin.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyFailed_Win11(p0, pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 33333
        VD.VirtualDesktopDestroyFailed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _VirtualDesktopDestroyed_Win11(p0, pDesktopDestroyed, pDesktopFallback) {
        ; Tooltip % 44444
        VD.VirtualDesktopDestroyed.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopDestroyed), VD._desktopNum_from_IVirtualDesktop(pDesktopFallback))
        return 0 ;S_OK
    }
    _ViewVirtualDesktopChanged_Win11(pView) {
        ; Tooltip % 55555
        VD.ViewVirtualDesktopChanged.Call(pView)
        return 0 ;S_OK
    }
    _CurrentVirtualDesktopChanged_Win11(p0, pDesktopOld, pDesktopNew) {
        VD.CurrentVirtualDesktopChanged.Call(VD._desktopNum_from_IVirtualDesktop(pDesktopOld), VD._desktopNum_from_IVirtualDesktop(pDesktopNew))
        return 0 ;S_OK
    }
    _No_Op() {
    }
    RegisterDesktopNotifications_Win11() {
        methods:=DllCall(\"GlobalAlloc\", \"Uint\",0x00, \"Uint\",13*A_PtrSize) ;PLEASE DON'T GARBAGE COLLECT IT, this took me hours to debug, I was lucky ahkv2 garbage collected slowly
        ; Thanks to mntone for IID and signatures https://mntone.hateblo.jp/entry/2021/05/23/121028#IVirtualDesktopNotification-3
        ; Thanks to NyaMisty for explanation https://github.com/mntone/VirtualDesktop/pull/1#issuecomment-922269079
        NumPut(RegisterCallback(\"VD._QueryInterface_Win11\", \"F\"), methods+0, 0*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._AddRef_Same\", \"F\"), methods+0, 1*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._Release_Same\", \"F\"), methods+0, 2*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopCreated_Win11\", \"F\"), methods+0, 3*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyBegin_Win11\", \"F\"), methods+0, 4*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyFailed_Win11\", \"F\"), methods+0, 5*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._VirtualDesktopDestroyed_Win11\", \"F\"), methods+0, 6*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopIsPerMonitorChanged_Win11\", \"F\"), methods+0, 7*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 7*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopMoved_Win11\", \"F\"), methods+0, 8*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 8*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopNameChanged_Win11\", \"F\"), methods+0, 9*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 9*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._ViewVirtualDesktopChanged_Win11\", \"F\"), methods+0, 10*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._CurrentVirtualDesktopChanged_Win11\", \"F\"), methods+0, 11*A_PtrSize, \"Ptr\")
        ; NumPut(RegisterCallback(\"VD._VirtualDesktopWallpaperChanged_Win11\", \"F\"), methods+0, 12*A_PtrSize, \"Ptr\")
        NumPut(RegisterCallback(\"VD._No_Op\", \"F\"), methods+0, 12*A_PtrSize, \"Ptr\")

        this.RegisterDesktopNotifications_Same(methods)
    }
    RegisterDesktopNotifications_Same(methods) {
        obj:=DllCall(\"GlobalAlloc\", \"Uint\",0x00, \"Uint\",A_PtrSize + 4) ;PLEASE DON'T GARBAGE COLLECT IT, this took me hours to debug, I was lucky ahkv2 garbage collected slowly
        NumPut(methods, obj+0, 0, \"Ptr\")
        NumPut(0, obj+0, A_PtrSize, \"UInt\") ;refCount

        pDesktopNotificationService := ComObjQuery(this.IServiceProvider, \"{A501FDEC-4A09-464C-AE4E-1B9C21B84918}\", \"{0CD45E71-D927-4F15-8B0A-8FEF525337BF}\")
        Register:=this._vtable(pDesktopNotificationService, 3)
        HRESULT:=DllCall(Register,\"UPtr\",pDesktopNotificationService, \"Ptr\",obj, \"Uint*\",pdwCookie:=0)
        ; ok1:=ErrorLevel
        ; ok2:=A_LastError
        ; ok:=0

        ; HRESULT hrNotificationService = pServiceProvider->QueryService(
		; CLSID_IVirtualNotificationService,
		; __uuidof(IVirtualDesktopNotificationService),
		; (PVOID*)&pDesktopNotificationService);
    }

    VirtualDesktopCreated(desktopNum:=0) {
    }
    VirtualDesktopDestroyBegin(desktopNum_Destroyed:=0, desktopNum_Fallback:=0) {
    }
    VirtualDesktopDestroyFailed(desktopNum_Destroyed:=0, desktopNum_Fallback:=0) {
    }
    VirtualDesktopDestroyed(desktopNum_Destroyed:=0, desktopNum_Fallback:=0) {
    }
    ViewVirtualDesktopChanged(pView:=0) {
    }
    CurrentVirtualDesktopChanged(desktopNum_Old:=0, desktopNum_New:=0) {
    }

    ; <Run in VD
    startShellMessage() {
        ; https://www.autohotkey.com/boards/viewtopic.php?t=63424#p271528
        DllCall(\"RegisterShellHookWindow\", \"Ptr\", A_ScriptHwnd)
        MsgNum := DllCall(\"RegisterWindowMessage\", \"Str\", \"SHELLHOOK\")
        OnMessage(MsgNum, func(\"VD.ShellMessage\").bind(this))

        ; this.map_title_class:={\"\":{\"\":{\"Hourglass.exe\":func(\"VD.callback\").bind(this, 2)}}}
        this.map_title_class:={}
    }

    Run(Target, WorkingDir, this_titleName, this_class, this_processName, desktopNum) {
        this.addToWaitNewWindow(this_titleName, this_class, this_processName, func(\"VD.callback_MoveWindow\").bind(this, desktopNum))

        Run % Target, % WorkingDir
    }

    Run_lock_VD(Target, WorkingDir, this_titleName, this_class, this_processName, window_desktopNum, your_desktopNum) {
        this.addToWaitNewWindow(this_titleName, this_class, this_processName, func(\"VD.callback_MoveWindow_lockVD\").bind(this, [window_desktopNum, your_desktopNum]))

        Run % Target, % WorkingDir
    }

    addToWaitNewWindow(this_titleName, this_class, this_processName, callback) {
        map_class_processName:=this.map_title_class.HasKey(this_titleName) ? this.map_title_class[this_titleName] : this.map_title_class[this_titleName]:={}
        map_processName_data:=map_class_processName.HasKey(this_class) ? map_class_processName[this_class] : map_class_processName[this_class]:={}
        arrOfCallback:=map_processName_data.HasKey(this_processName) ? map_processName_data[this_processName] : map_processName_data[this_processName]:=[]
        arrOfCallback.Push(callback)
    }

    callback_MoveWindow(desktopNum, hwnd) {
        WinActivate % \"ahk_id \" hwnd
        this.MoveWindowToDesktopNum(\"ahk_id \" hwnd,desktopNum)
    }

    callback_MoveWindow_lockVD(tuple, hwnd) {
        window_desktopNum:=tuple[1]
        your_desktopNum:=tuple[2]
        WinActivate % \"ahk_id \" hwnd
        this.goToDesktopNum(your_desktopNum)
        WinActivate % \"ahk_id \" hwnd
        this.MoveWindowToDesktopNum(\"ahk_id \" hwnd,window_desktopNum)
        WinActivate % \"ahk_id \" hwnd
    }

    ShellMessage(wParam, lParam, msg, hwnd) {
        Critical ;this is what makes many callbacks AT THE SAME TIME possible
        Sleep 100 ;necessary

        if (wParam == 1) { ; HSHELL_WINDOWCREATED := 1, HSHELL_MONITORCHANGED := 16
            theHwnd:=lParam

            bak_DetectHiddenWindows := A_DetectHiddenWindows
            DetectHiddenWindows, ON ;very important

            arrOfCallback:=false
            outside_map_processName_data:=false
            outside_map_class_processName:=false
            outside_subString_title:=false

            WinGetTitle, this_title, % \"ahk_id \" theHwnd
            for subString_title, map_class_processName in this.map_title_class {
                if (InStr(this_title, subString_title, true)) {
                    WinGetClass, this_class, % \"ahk_id \" theHwnd
                    for subString_class, map_processName_data in map_class_processName {
                        if (InStr(this_class, subString_class, true)) {
                            WinGet, this_processName, ProcessName, % \"ahk_id \" theHwnd
                            for subString_processName, possibly_arrOfCallback in map_processName_data {
                                if (InStr(this_processName, subString_processName, true)) {
                                    arrOfCallback:=possibly_arrOfCallback
                                    outside_map_processName_data:=map_processName_data
                                    outside_map_class_processName:=map_class_processName
                                    outside_subString_title:=subString_title
                                    break
                                }
                            }
                            break
                        }
                    }
                    break
                }
            }

            DetectHiddenWindows % bak_DetectHiddenWindows

            if (arrOfCallback) {
                callback:=arrOfCallback[1]
                callback.Call(theHwnd)

                if (arrOfCallback.Length() > 1) {
                    arrOfCallback.RemoveAt(1)
                } else if (outside_map_processName_data.Count() > 1) {
                    outside_map_processName_data.Delete(subString_processName)
                } else if (outside_map_class_processName.Count() > 1) {
                    outside_map_class_processName.Delete(subString_class)
                } else {
                    this.map_title_class.Delete(outside_subString_title)
                }

            }
        }
    }
    ; Run in VD>

    ;actual methods end

    ;internal methods start

    _WinActivate_CreateRemoteThread(hWnd) {
        ; WinActivate of AHK will first try SetForegroundWindow(), it will work if the keyboard hook is not used
        ; so it will work for
        ; Numpad2::
        ; it will not work for
        ; ^#Right::
        ; Right always uses the keyboard hook

        ; AHK will then try AttachThreadInput(), it works reliably, but fails for Teams.exe for reasons I have yet to uncover
        ; let's just say that either Teams.exe is resistant to AttachThreadInput, or the code inside Teams.exe has a weird defined behavior once AttachThreadInput is called

        ; this ? there's only one way to find out how well it works, by testing in production
        foregroundWindow:=DllCall(\"GetForegroundWindow\",\"Ptr\")
        threadID:=DllCall(\"GetWindowThreadProcessId\",\"Ptr\",foregroundWindow,\"Uint*\",PID)
        currentThreadID:=DllCall(\"GetCurrentThreadId\")
        if (threadID!=currentThreadID) {
            hThread:=DllCall(\"OpenThread\",\"Uint\",0x0002,\"Int\",0,\"Uint\",threadID)
            DllCall(\"SuspendThread\",\"Ptr\",hThread)
            hProcess:=DllCall(\"OpenProcess\",\"Uint\",0x0002,\"Int\",0,\"Uint\",PID,\"Ptr\")
            user32:=DllCall(\"GetModuleHandleA\",\"AStr\",\"user32\",\"Ptr\")
            SetForegroundWindow:=DllCall(\"GetProcAddress\",\"Ptr\",user32,\"AStr\",\"SetForegroundWindow\",\"Ptr\")
            DllCall(\"CreateRemoteThread\",\"Ptr\",hProcess,\"Ptr\",0,\"Ptr\",0,\"Ptr\",SetForegroundWindow,\"Ptr\",hWnd,\"Uint\",0,\"Ptr\",0)
            Sleep 10
            Send % \"q\" ;any key works
            DllCall(\"ResumeThread\",\"Ptr\",hThread)
            DllCall(\"CloseHandle\",\"Ptr\",hThread)
            DllCall(\"CloseHandle\",\"Ptr\",hProcess)
        }
    }

    _activateDesktopBackground() { ;this is really copying extremely long comments for short code like in AHK source code
        ; Win10:
        ; \"FolderView ahk_class SysListView32 ahk_exe explorer.exe\"
        ; \"ahk_class SHELLDLL_DefView ahk_exe explorer.exe\"
        ; \"Program Manager ahk_class Progman ahk_exe explorer.exe\" is the top level parent

        ; the parent parent of FolderView BECOMES \"ahk_class WorkerW ahk_exe explorer.exe\" after you press Win+Tab
        ; WorkerW doesn't exist before you press Win+Tab
        ; it's the same for Win11, Progman gets replaced by WorkerW, Progman still exists but isn't the parent of FolderView or top-level window that gets activated

        ; Q: if WinActivate Progman activates WorkerW(we want that) then what's the problem ?
        ; A: WinActivate will send {Alt down}{Alt up}{Alt down}{Alt up} if Progman is not activated : AHK source code: ((VK_MENU | 0x12 | ALT key)) https://github.com/AutoHotkey/AutoHotkey/blob/df84a3e902b522db0756a7366bd9884c80fa17b6/source/window.cpp#L260-L261
        ; the desktop background is correctly activated, we just don't want the extra Alt keys:
        ; if the hotkey is Ctrl+Shift+Win, and you add an Alt in there, Office 365 hotkey is triggered:
        ; https://github.com/FuPeiJiang/VD.ahk/issues/40#issuecomment-1548252485
        ; https://answers.microsoft.com/en-us/msoffice/forum/all/help-disabling-office-hotkey-of-ctrl-win-alt-shift/040ef6e5-8152-449b-849a-7494323101bb
        ; https://superuser.com/questions/1457073/how-do-i-disable-specific-windows-10-office-keyboard-shortcut-ctrlshiftwinal
        ; this is also bad because it prevents subsequent uses of the hotkey #!Right:: because {Alt up} releases Alt
        ; if (WinExist(\"ahk_class WorkerW ahk_exe explorer.exe\")) {
        ;     WinActivate % \"ahk_class WorkerW ahk_exe explorer.exe\"
        ; } else {
        ;     WinActivate % \"ahk_class Progman ahk_exe explorer.exe\"
        ; }
        DllCall(\"SetForegroundWindow\",\"Ptr\",WinExist(\"ahk_class Progman ahk_exe explorer.exe\"))
    }

    _getFirstWindowInVD(desktopNum) {
        bak_DetectHiddenWindows:=A_DetectHiddenWindows
        DetectHiddenWindows, on
        returnValue:=0
        WinGet, outHwndList, List
        VarSetCapacity(GUID_Desktop, 16)
        VarSetCapacity(someStr, 40*2)
        guid_to_desktopNum:={}
        Desktops_Obj:=this._GetDesktops_Obj()
        Loop % Desktops_Obj.GetCount()
        {
            IVirtualDesktop:=Desktops_Obj.GetAt(A_Index)
            GetId:=this._vtable(IVirtualDesktop, 4)
            DllCall(GetId, \"Ptr\", IVirtualDesktop, \"Ptr\", &GUID_Desktop)
            DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", &GUID_Desktop, \"Ptr\",&someStr, \"Ptr\",40)
            strGUID:=StrGet(&someStr,\"UTF-16\")
            guid_to_desktopNum[strGUID]:=A_Index
        }
        guid_to_desktopNum[\"{00000000-0000-0000-0000-000000000000}\"]:=0
        loop % outHwndList {
            theHwnd:=outHwndList%A_Index%
            arr_success_pView_hWnd:=this._isValidWindow(theHwnd)
            if (arr_success_pView_hWnd[1]==0) {
                pView:=arr_success_pView_hWnd[2]
                WinGet, OutputVar_MinMax, MinMax, % \"ahk_id \" theHwnd
                if (!(OutputVar_MinMax==-1)) { ;not Minimized

                    HRESULT := DllCall(this.GetWindowDesktopId, \"UPtr\", this.IVirtualDesktopManager, \"Ptr\", theHwnd, \"Ptr\", &GUID_Desktop)
                    if (!(HRESULT==0)) {
                        continue
                    }
                    DllCall(\"Ole32\\StringFromGUID2\", \"Ptr\", &GUID_Desktop, \"Ptr\",&someStr, \"Ptr\",40)
                    strGUID:=StrGet(&someStr,\"UTF-16\")

                    if (guid_to_desktopNum[strGUID] == desktopNum) {
                        ; WinActivate % \"ahk_id \" theHwnd
                        returnValue:=theHwnd
                        break
                    }
                }
            }
        }
        DetectHiddenWindows % bak_DetectHiddenWindows
        return returnValue
    }

    _activateWindowUnder(excludeHwnd:=-1) {
        bak_DetectHiddenWindows:=A_DetectHiddenWindows
        DetectHiddenWindows, off
        returnValue:=-1
        WinGet, outHwndList, List
        loop % outHwndList {
            theHwnd:=outHwndList%A_Index%
            if (theHwnd == excludeHwnd) {
                continue
            }
            arr_success_pView_hWnd:=this._isValidWindow(theHwnd)
            if (arr_success_pView_hWnd[1]==0) {
                pView:=arr_success_pView_hWnd[2]
                WinGet, OutputVar_MinMax, MinMax, % \"ahk_id \" theHwnd
                if (!(OutputVar_MinMax==-1)) { ;not Minimized
                    ; WinActivate % \"ahk_id \" theHwnd
                    DllCall(\"SetForegroundWindow\",\"Ptr\",theHwnd)
                    returnValue:=theHwnd
                    break
                }
            }
        }
        DetectHiddenWindows % bak_DetectHiddenWindows
        return returnValue
    }

    _tryGetValidWindow(wintitle) {
        bak_DetectHiddenWindows:=A_DetectHiddenWindows
        bak_TitleMatchMode:=A_TitleMatchMode
        DetectHiddenWindows, on
        SetTitleMatchMode, 2
        WinGet, someID, ID, % wintitle

        returnValue:=false

        arr_success_pView_hWnd:=this._isValidWindow(someID)
        pView:=arr_success_pView_hWnd[2]
        if (pView) {
            returnValue:=[arr_success_pView_hWnd[3], pView]
        }

        SetTitleMatchMode % bak_TitleMatchMode
        DetectHiddenWindows % bak_DetectHiddenWindows
        return returnValue
    }

    _view_from_Hwnd(theHwnd) {
        pView := 0
        DllCall(this.GetViewForHwnd, \"UPtr\", this.IApplicationViewCollection, \"Ptr\", theHwnd, \"Ptr*\", pView)
        return pView
    }

    _IVirtualDesktop_from_Hwnd(theHwnd) {
        VarSetCapacity(GUID_Desktop, 16)
        HRESULT := DllCall(this.GetWindowDesktopId, \"UPtr\", this.IVirtualDesktopManager, \"Ptr\", theHwnd, \"Ptr\", &GUID_Desktop)
        if (!(HRESULT==0)) {
            return false
        }

        IVirtualDesktop_ofWindow:=0
        DllCall(this.FindDesktop, \"UPtr\", this.IVirtualDesktopManagerInternal, \"Ptr\", &GUID_Desktop, \"Ptr*\", IVirtualDesktop_ofWindow)

        return IVirtualDesktop_ofWindow
    }

    _desktopNum_from_IVirtualDesktop(IVirtualDesktop) {
        Desktops_Obj:=this._GetDesktops_Obj()
        Loop % Desktops_Obj.GetCount()
        {
            IVirtualDesktop_ofDesktop:=Desktops_Obj.GetAt(A_Index)

            if (IVirtualDesktop_ofDesktop == IVirtualDesktop) {
                return A_Index
            }
        }
        return 0 ;for \"Show on all desktops\"
    }

    _desktopNum_from_Hwnd" 0 31 (fontified nil) 31 39 (fontified nil) 39 45 (face font-lock-warning-face fontified nil) 45 46 (fontified nil) 46 66 (fontified nil) 66 68 (face font-lock-comment-delimiter-face fontified nil) 68 97 (face font-lock-comment-face fontified nil) 97 104 (fontified nil) 104 136 (fontified nil) 136 137 (face font-lock-builtin-face fontified nil) 137 156 (fontified nil) 156 158 (face font-lock-builtin-face fontified nil) 158 162 (face font-lock-variable-name-face fontified nil) 162 166 (fontified nil) 166 179 (fontified nil) 179 181 (face font-lock-builtin-face fontified nil) 181 185 (fontified nil) 185 186 (face font-lock-builtin-face fontified nil) 186 215 (fontified nil) 215 223 (fontified nil) 223 225 (face font-lock-keyword-face fontified nil) 225 237 (fontified nil) 237 249 (fontified nil) 249 255 (face font-lock-warning-face fontified nil) 255 256 (fontified nil) 256 257 (face font-lock-builtin-face fontified nil) 257 259 (fontified nil) 259 260 (face font-lock-comment-delimiter-face fontified nil) 260 270 (face font-lock-comment-face fontified nil) 270 280 (fontified nil) 280 295 (fontified nil) 295 297 (face font-lock-builtin-face fontified nil) 297 307 (fontified nil) 307 334 (fontified nil) 334 336 (face font-lock-builtin-face fontified nil) 336 340 (fontified nil) 340 341 (face font-lock-builtin-face fontified nil) 341 372 (fontified nil) 372 384 (fontified nil) 384 385 (face font-lock-builtin-face fontified nil) 385 422 (fontified nil) 422 430 (fontified nil) 430 432 (face font-lock-keyword-face fontified nil) 432 456 (fontified nil) 456 468 (fontified nil) 468 479 (face font-lock-keyword-face fontified nil) 479 480 (face font-lock-builtin-face fontified nil) 480 481 (fontified nil) 481 487 (face font-lock-keyword-face fontified nil) 487 488 (fontified nil) 488 497 (face font-lock-variable-name-face fontified nil) 497 515 (fontified nil) 515 550 (fontified nil) 550 551 (face font-lock-builtin-face fontified nil) 551 566 (fontified nil) 566 579 (fontified nil) 579 581 (face font-lock-builtin-face fontified nil) 581 585 (fontified nil) 585 586 (face font-lock-builtin-face fontified nil) 586 615 (fontified nil) 615 623 (fontified nil) 623 625 (face font-lock-keyword-face fontified nil) 625 637 (fontified nil) 637 649 (fontified nil) 649 655 (face font-lock-warning-face fontified nil) 655 656 (fontified nil) 656 657 (face font-lock-builtin-face fontified nil) 657 659 (fontified nil) 659 660 (face font-lock-comment-delimiter-face fontified nil) 660 670 (face font-lock-comment-face fontified nil) 670 680 (fontified nil) 680 695 (fontified nil) 695 697 (face font-lock-builtin-face fontified nil) 697 706 (fontified nil) 706 722 (fontified nil) 722 724 (face font-lock-builtin-face fontified nil) 724 734 (fontified nil) 734 765 (fontified nil) 765 767 (face font-lock-builtin-face fontified nil) 767 772 (face font-lock-variable-name-face fontified nil) 772 773 (fontified nil) 773 781 (fontified nil) 781 783 (face font-lock-keyword-face fontified nil) 783 795 (fontified nil) 795 797 (face font-lock-builtin-face fontified nil) 797 805 (face font-lock-function-name-face fontified nil) 805 806 (fontified nil) 806 809 (face font-lock-string-face fontified nil) 809 814 (fontified nil) 814 826 (fontified nil) 826 828 (face font-lock-keyword-face fontified nil) 828 840 (fontified nil) 840 842 (face font-lock-builtin-face fontified nil) 842 853 (fontified nil) 853 892 (fontified nil) 892 894 (face font-lock-builtin-face fontified nil) 894 898 (face font-lock-variable-name-face fontified nil) 898 924 (fontified nil) 924 947 (fontified nil) 947 949 (face font-lock-builtin-face fontified nil) 949 953 (fontified nil) 953 954 (face font-lock-builtin-face fontified nil) 954 972 (fontified nil) 972 973 (face font-lock-builtin-face fontified nil) 973 991 (fontified nil) 991 999 (fontified nil) 999 1006 (face font-lock-function-name-face fontified nil) 1006 1011 (fontified nil) 1011 1012 (face font-lock-builtin-face fontified nil) 1012 1029 (fontified nil) 1029 1030 (face font-lock-builtin-face fontified nil) 1030 1031 (fontified nil) 1031 1036 (face font-lock-string-face fontified nil) 1036 1037 (face font-lock-builtin-face fontified nil) 1037 1042 (fontified nil) 1042 1043 (face font-lock-builtin-face fontified nil) 1043 1073 (fontified nil) 1073 1074 (face font-lock-builtin-face fontified nil) 1074 1075 (fontified nil) 1075 1080 (face font-lock-string-face fontified nil) 1080 1081 (face font-lock-builtin-face fontified nil) 1081 1090 (fontified nil) 1090 1091 (face font-lock-builtin-face fontified nil) 1091 1092 (fontified nil) 1092 1097 (face font-lock-string-face fontified nil) 1097 1098 (face font-lock-builtin-face fontified nil) 1098 1117 (fontified nil) 1117 1125 (fontified nil) 1125 1127 (face font-lock-keyword-face fontified nil) 1127 1156 (fontified nil) 1156 1168 (fontified nil) 1168 1170 (face font-lock-keyword-face fontified nil) 1170 1176 (fontified nil) 1176 1177 (face font-lock-builtin-face fontified nil) 1177 1199 (fontified nil) 1199 1201 (face font-lock-builtin-face fontified nil) 1201 1202 (face font-lock-builtin-face fontified nil) 1202 1207 (fontified nil) 1207 1227 (fontified nil) 1227 1228 (face font-lock-builtin-face fontified nil) 1228 1288 (fontified nil) 1288 1312 (fontified nil) 1312 1331 (fontified nil) 1331 1332 (face font-lock-builtin-face fontified nil) 1332 1349 (fontified nil) 1349 1355 (fontified nil) 1355 1375 (fontified nil) 1375 1377 (face font-lock-builtin-face fontified nil) 1377 1381 (fontified nil) 1381 1382 (face font-lock-builtin-face fontified nil) 1382 1401 (fontified nil) 1401 1423 (fontified nil) 1423 1425 (face font-lock-builtin-face fontified nil) 1425 1437 (fontified nil) 1437 1438 (face font-lock-builtin-face fontified nil) 1438 1450 (fontified nil) 1450 1461 (fontified nil) 1461 1477 (fontified nil) 1477 1479 (face font-lock-builtin-face fontified nil) 1479 1497 (fontified nil) 1497 1498 (face font-lock-builtin-face fontified nil) 1498 1514 (fontified nil) 1514 1522 (fontified nil) 1522 1523 (fontified nil face font-lock-comment-delimiter-face) 1523 1589 (fontified nil face font-lock-comment-face) 1589 1597 (fontified nil) 1597 1598 (fontified nil face font-lock-comment-delimiter-face) 1598 1623 (fontified nil face font-lock-comment-face) 1623 1841 (fontified nil) 1841 1852 (fontified nil) 1852 1860 (fontified nil) 1860 1866 (fontified nil face font-lock-warning-face) 1866 1894 (fontified nil) 1894 1937 (fontified nil) 1937 1938 (fontified nil face font-lock-builtin-face) 1938 1958 (fontified nil) 1958 1986 (fontified nil) 1986 1988 (fontified nil face font-lock-builtin-face) 1988 1993 (fontified nil) 1993 1994 (fontified nil face font-lock-builtin-face) 1994 2026 (fontified nil) 2026 2054 (fontified nil) 2054 2056 (fontified nil face font-lock-builtin-face) 2056 2061 (fontified nil) 2061 2062 (fontified nil face font-lock-builtin-face) 2062 2103 (fontified nil) 2103 2104 (fontified nil face font-lock-builtin-face) 2104 2122 (fontified nil) 2122 2134 (fontified nil) 2134 2135 (fontified nil face font-lock-builtin-face) 2135 2166 (fontified nil) 2166 2167 (fontified nil face font-lock-builtin-face) 2167 2190 (fontified nil) 2190 2198 (fontified nil) 2198 2204 (fontified nil face font-lock-warning-face) 2204 2277 (fontified nil) 2277 2289 (fontified nil) 2289 2290 (fontified nil face font-lock-builtin-face) 2290 2309 (fontified nil) 2309 2310 (fontified nil face font-lock-builtin-face) 2310 2336 (fontified nil) 2336 2337 (fontified nil face font-lock-builtin-face) 2337 2359 (fontified nil) 2359 2360 (fontified nil face font-lock-builtin-face) 2360 2385 (fontified nil) 2385 2424 (fontified nil) 2424 2425 (fontified nil face font-lock-builtin-face) 2425 2444 (fontified nil) 2444 2446 (fontified nil face font-lock-builtin-face) 2446 2450 (fontified nil face font-lock-variable-name-face) 2450 2454 (fontified nil) 2454 2467 (fontified nil) 2467 2469 (fontified nil face font-lock-builtin-face) 2469 2473 (fontified nil) 2473 2474 (fontified nil face font-lock-builtin-face) 2474 2492 (fontified nil) 2492 2503 (fontified nil) 2503 2511 (fontified nil) 2511 2513 (fontified nil face font-lock-keyword-face) 2513 2525 (fontified nil) 2525 2537 (fontified nil) 2537 2543 (fontified nil face font-lock-warning-face) 2543 2544 (fontified nil) 2544 2545 (fontified nil face font-lock-builtin-face) 2545 2547 (fontified nil) 2547 2548 (fontified nil face font-lock-comment-delimiter-face) 2548 2558 (fontified nil face font-lock-comment-face) 2558 2568 (fontified nil) 2568 2583 (fontified nil) 2583 2585 (fontified nil face font-lock-builtin-face) 2585 2594 (fontified nil) 2594 2610 (fontified nil) 2610 2612 (fontified nil face font-lock-builtin-face) 2612 2622 (fontified nil) 2622 2647 (fontified nil) 2647 2649 (fontified nil face font-lock-builtin-face) 2649 2653 (fontified nil) 2653 2654 (fontified nil face font-lock-builtin-face) 2654 2677 (fontified nil) 2677 2700 (fontified nil) 2700 2702 (fontified nil face font-lock-builtin-face) 2702 2706 (fontified nil) 2706 2707 (fontified nil face font-lock-builtin-face) 2707 2725 (fontified nil) 2725 2726 (fontified nil face font-lock-builtin-face) 2726 2752 (fontified nil) 2752 2760 (fontified nil) 2760 2767 (fontified nil face font-lock-function-name-face) 2767 2772 (fontified nil) 2772 2773 (fontified nil face font-lock-builtin-face) 2773 2790 (fontified nil) 2790 2791 (fontified nil face font-lock-builtin-face) 2791 2792 (fontified nil) 2792 2797 (fontified nil face font-lock-string-face) 2797 2798 (fontified nil face font-lock-builtin-face) 2798 2803 (fontified nil) 2803 2804 (fontified nil face font-lock-builtin-face) 2804 2834 (fontified nil) 2834 2835 (fontified nil face font-lock-builtin-face) 2835 2836 (fontified nil) 2836 2841 (fontified nil face font-lock-string-face) 2841 2842 (fontified nil face font-lock-builtin-face) 2842 2851 (fontified nil) 2851 2852 (fontified nil face font-lock-builtin-face) 2852 2853 (fontified nil) 2853 2858 (fontified nil face font-lock-string-face) 2858 2859 (fontified nil face font-lock-builtin-face) 2859 2878 (fontified nil) 2878 2886 (fontified nil) 2886 2888 (fontified nil face font-lock-keyword-face) 2888 2912 (fontified nil) 2912 2924 (fontified nil) 2924 2935 (fontified nil face font-lock-keyword-face) 2935 2938 (fontified nil) 2938 2947 (fontified nil face font-lock-string-face) 2947 3002 (fontified nil) 3002 3042 (fontified nil) 3042 3044 (fontified nil face font-lock-builtin-face) 3044 3048 (fontified nil) 3048 3049 (fontified nil face font-lock-builtin-face) 3049 3075 (fontified nil) 3075 3093 (fontified nil) 3093 3095 (fontified nil face font-lock-builtin-face) 3095 3099 (fontified nil) 3099 3100 (fontified nil face font-lock-builtin-face) 3100 3167 (fontified nil) 3167 3175 (fontified nil) 3175 3181 (fontified nil face font-lock-warning-face) 3181 3200 (fontified nil) 3200 3225 (fontified nil) 3225 3227 (fontified nil face font-lock-builtin-face) 3227 3232 (fontified nil face font-lock-variable-name-face) 3232 3236 (fontified nil) 3236 3272 (fontified nil) 3272 3274 (fontified nil face font-lock-builtin-face) 3274 3278 (fontified nil) 3278 3279 (fontified nil face font-lock-builtin-face) 3279 3301 (fontified nil) 3301 3309 (fontified nil) 3309 3311 (fontified nil face font-lock-keyword-face) 3311 3324 (fontified nil) 3324 3336 (fontified nil) 3336 3337 (fontified nil face font-lock-comment-delimiter-face) 3337 3386 (fontified nil face font-lock-comment-face) 3386 3398 (fontified nil) 3398 3400 (fontified nil face font-lock-comment-delimiter-face) 3400 3428 (fontified nil face font-lock-comment-face) 3428 3440 (fontified nil) 3440 3441 (fontified nil face font-lock-comment-delimiter-face) 3441 3464 (fontified nil face font-lock-comment-face) 3464 3486 (fontified nil) 3486 3488 (fontified nil face font-lock-builtin-face) 3488 3492 (fontified nil) 3492 3493 (fontified nil face font-lock-builtin-face) 3493 3556 (fontified nil) 3556 3572 (fontified nil) 3572 3573 (fontified nil face font-lock-builtin-face) 3573 3617 (fontified nil) 3617 3640 (fontified nil) 3640 3641 (fontified nil face font-lock-builtin-face) 3641 3659 (fontified nil) 3659 3661 (fontified nil face font-lock-builtin-face) 3661 3666 (fontified nil face font-lock-variable-name-face) 3666 3670 (fontified nil) 3670 3700 (fontified nil) 3700 3702 (fontified nil face font-lock-builtin-face) 3702 3706 (fontified nil) 3706 3707 (fontified nil face font-lock-builtin-face) 3707 3718 (fontified nil) 3718 3726 (fontified nil) 3726 3728 (fontified nil face font-lock-keyword-face) 3728 3752 (fontified nil) 3752 3754 (fontified nil face font-lock-builtin-face) 3754 3765 (fontified nil) 3765 3777 (fontified nil) 3777 3783 (fontified nil face font-lock-warning-face) 3783 3795 (fontified nil) 3795 3803 (fontified nil) 3803 3804 (fontified nil face font-lock-comment-delimiter-face) 3804 3848 (fontified nil face font-lock-comment-face) 3848 3856 (fontified nil) 3856 3860 (fontified nil face font-lock-keyword-face) 3860 3871 (fontified nil) 3871 3872 (fontified nil face font-lock-builtin-face) 3872 3896 (fontified nil) 3896 3897 (fontified nil face font-lock-builtin-face) 3897 3902 (fontified nil) 3902 3918 (fontified nil) 3918 3919 (fontified nil face font-lock-builtin-face) 3919 3933 (fontified nil) 3933 3938 (fontified nil face font-lock-variable-name-face) 3938 3950 (fontified nil) 3950 3962 (fontified nil) 3962 3963 (fontified nil face font-lock-builtin-face) 3963 3992 (fontified nil) 3992 3996 (fontified nil) 3996 4382 (fontified nil) 4382 4394 (fontified nil) 4394 4396 (fontified nil face font-lock-keyword-face) 4396 4409 (fontified nil) 4409 4410 (fontified nil face font-lock-builtin-face) 4410 4416 (fontified nil) 4416 4451 (fontified nil) 4451 4453 (fontified nil face font-lock-builtin-face) 4453 4464 (fontified nil) 4464 4465 (fontified nil face font-lock-builtin-face) 4465 4482 (fontified nil) 4482 4494 (fontified nil) 4494 4495 (fontified nil face font-lock-comment-delimiter-face) 4495 4506 (fontified nil face font-lock-comment-face) 4506 4518 (fontified nil) 4518 4522 (fontified nil face font-lock-keyword-face) 4522 4523 (fontified nil) 4523 4525 (fontified nil face font-lock-keyword-face) 4525 4538 (fontified nil) 4538 4539 (fontified nil face font-lock-builtin-face) 4539 4552 (fontified nil) 4552 4553 (fontified nil face font-lock-builtin-face) 4553 4567 (fontified nil) 4567 4602 (fontified nil) 4602 4604 (fontified nil face font-lock-builtin-face) 4604 4615 (fontified nil) 4615 4616 (fontified nil face font-lock-builtin-face) 4616 4633 (fontified nil) 4633 4645 (fontified nil) 4645 4646 (fontified nil face font-lock-comment-delimiter-face) 4646 4667 (fontified nil face font-lock-comment-face) 4667 4679 (fontified nil) 4679 4683 (fontified nil face font-lock-keyword-face) 4683 4686 (fontified nil) 4686 4702 (fontified nil) 4702 4708 (fontified nil face font-lock-warning-face) 4708 4709 (fontified nil) 4709 4714 (fontified nil face font-lock-variable-name-face) 4714 4740 (fontified nil) 4740 4763 (fontified nil) 4763 4765 (fontified nil face font-lock-builtin-face) 4765 4777 (fontified nil) 4777 4778 (fontified nil face font-lock-builtin-face) 4778 4796 (fontified nil) 4796 4828 (fontified nil) 4828 4830 (fontified nil face font-lock-builtin-face) 4830 4842 (fontified nil) 4842 4843 (fontified nil face font-lock-builtin-face) 4843 4871 (fontified nil) 4871 4879 (fontified nil) 4879 4886 (fontified nil face font-lock-function-name-face) 4886 4891 (fontified nil) 4891 4892 (fontified nil face font-lock-builtin-face) 4892 4909 (fontified nil) 4909 4910 (fontified nil face font-lock-builtin-face) 4910 4911 (fontified nil) 4911 4917 (fontified nil face font-lock-string-face) 4917 4918 (fontified nil face font-lock-builtin-face) 4918 4923 (fontified nil) 4923 4924 (fontified nil face font-lock-builtin-face) 4924 4954 (fontified nil) 4954 4955 (fontified nil face font-lock-builtin-face) 4955 4956 (fontified nil) 4956 4961 (fontified nil face font-lock-string-face) 4961 4962 (fontified nil face font-lock-builtin-face) 4962 4978 (fontified nil) 4978 4979 (fontified nil face font-lock-builtin-face) 4979 4980 (fontified nil) 4980 4985 (fontified nil face font-lock-string-face) 4985 4986 (fontified nil face font-lock-builtin-face) 4986 5051 (fontified nil) 5051 5064 (fontified nil) 5064 5066 (fontified nil face font-lock-builtin-face) 5066 5070 (fontified nil) 5070 5071 (fontified nil face font-lock-builtin-face) 5071 5089 (fontified nil) 5089 5100 (fontified nil) 5100 5108 (fontified nil) 5108 5110 (fontified nil face font-lock-keyword-face) 5110 5122 (fontified nil) 5122 5134 (fontified nil) 5134 5140 (fontified nil face font-lock-warning-face) 5140 5141 (fontified nil) 5141 5142 (fontified nil face font-lock-builtin-face) 5142 5144 (fontified nil) 5144 5145 (fontified nil face font-lock-comment-delimiter-face) 5145 5155 (fontified nil face font-lock-comment-face) 5155 5165 (fontified nil) 5165 5181 (fontified nil) 5181 5183 (fontified nil face font-lock-builtin-face) 5183 5193 (fontified nil) 5193 5213 (fontified nil) 5213 5215 (fontified nil face font-lock-builtin-face) 5215 5219 (fontified nil) 5219 5220 (fontified nil face font-lock-builtin-face) 5220 5244 (fontified nil) 5244 5252 (fontified nil) 5252 5258 (fontified nil face font-lock-warning-face) 5258 5310 (fontified nil) 5310 5323 (fontified nil) 5323 5325 (fontified nil face font-lock-builtin-face) 5325 5329 (fontified nil) 5329 5330 (fontified nil face font-lock-builtin-face) 5330 5359 (fontified nil) 5359 5367 (fontified nil) 5367 5369 (fontified nil face font-lock-keyword-face) 5369 5381 (fontified nil) 5381 5393 (fontified nil) 5393 5399 (fontified nil face font-lock-warning-face) 5399 5400 (fontified nil) 5400 5401 (fontified nil face font-lock-builtin-face) 5401 5403 (fontified nil) 5403 5404 (fontified nil face font-lock-comment-delimiter-face) 5404 5414 (fontified nil face font-lock-comment-face) 5414 5424 (fontified nil) 5424 5440 (fontified nil) 5440 5442 (fontified nil face font-lock-builtin-face) 5442 5452 (fontified nil) 5452 5472 (fontified nil) 5472 5474 (fontified nil face font-lock-builtin-face) 5474 5478 (fontified nil) 5478 5479 (fontified nil face font-lock-builtin-face) 5479 5503 (fontified nil) 5503 5511 (fontified nil) 5511 5513 (fontified nil face font-lock-keyword-face) 5513 5531 (fontified nil) 5531 5543 (fontified nil) 5543 5550 (fontified nil face font-lock-function-name-face) 5550 5555 (fontified nil) 5555 5556 (fontified nil face font-lock-builtin-face) 5556 5565 (fontified nil) 5565 5566 (fontified nil face font-lock-builtin-face) 5566 5567 (fontified nil) 5567 5573 (fontified nil face font-lock-string-face) 5573 5574 (fontified nil face font-lock-builtin-face) 5574 5579 (fontified nil) 5579 5580 (fontified nil face font-lock-builtin-face) 5580 5605 (fontified nil) 5605 5606 (fontified nil face font-lock-builtin-face) 5606 5607 (fontified nil) 5607 5612 (fontified nil face font-lock-string-face) 5612 5613 (fontified nil face font-lock-builtin-face) 5613 5624 (fontified nil) 5624 5634 (fontified nil) 5634 5638 (fontified nil face font-lock-keyword-face) 5638 5641 (fontified nil) 5641 5653 (fontified nil) 5653 5660 (fontified nil face font-lock-function-name-face) 5660 5665 (fontified nil) 5665 5666 (fontified nil face font-lock-builtin-face) 5666 5673 (fontified nil) 5673 5674 (fontified nil face font-lock-builtin-face) 5674 5675 (fontified nil) 5675 5681 (fontified nil face font-lock-string-face) 5681 5682 (fontified nil face font-lock-builtin-face) 5682 5687 (fontified nil) 5687 5688 (fontified nil face font-lock-builtin-face) 5688 5713 (fontified nil) 5713 5714 (fontified nil face font-lock-builtin-face) 5714 5715 (fontified nil) 5715 5720 (fontified nil face font-lock-string-face) 5720 5721 (fontified nil face font-lock-builtin-face) 5721 5775 (fontified nil) 5775 5788 (fontified nil) 5788 5790 (fontified nil face font-lock-builtin-face) 5790 5794 (fontified nil) 5794 5795 (fontified nil face font-lock-builtin-face) 5795 5824 (fontified nil) 5824 5832 (fontified nil) 5832 5834 (fontified nil face font-lock-keyword-face) 5834 5846 (fontified nil) 5846 5858 (fontified nil) 5858 5864 (fontified nil face font-lock-warning-face) 5864 5865 (fontified nil) 5865 5866 (fontified nil face font-lock-builtin-face) 5866 5868 (fontified nil) 5868 5869 (fontified nil face font-lock-comment-delimiter-face) 5869 5879 (fontified nil face font-lock-comment-face) 5879 5889 (fontified nil) 5889 5905 (fontified nil) 5905 5907 (fontified nil face font-lock-builtin-face) 5907 5917 (fontified nil) 5917 5925 (fontified nil) 5925 5932 (fontified nil face font-lock-function-name-face) 5932 5937 (fontified nil) 5937 5938 (fontified nil face font-lock-builtin-face) 5938 5945 (fontified nil) 5945 5946 (fontified nil face font-lock-builtin-face) 5946 5947 (fontified nil) 5947 5953 (fontified nil face font-lock-string-face) 5953 5954 (fontified nil face font-lock-builtin-face) 5954 5959 (fontified nil) 5959 5960 (fontified nil face font-lock-builtin-face) 5960 5985 (fontified nil) 5985 5986 (fontified nil face font-lock-builtin-face) 5986 5987 (fontified nil) 5987 5992 (fontified nil face font-lock-string-face) 5992 5993 (fontified nil face font-lock-builtin-face) 5993 6038 (fontified nil) 6038 6051 (fontified nil) 6051 6053 (fontified nil face font-lock-builtin-face) 6053 6057 (fontified nil) 6057 6058 (fontified nil face font-lock-builtin-face) 6058 6087 (fontified nil) 6087 6095 (fontified nil) 6095 6097 (fontified nil face font-lock-keyword-face) 6097 6109 (fontified nil) 6109 6121 (fontified nil) 6121 6127 (fontified nil face font-lock-warning-face) 6127 6128 (fontified nil) 6128 6129 (fontified nil face font-lock-builtin-face) 6129 6131 (fontified nil) 6131 6132 (fontified nil face font-lock-comment-delimiter-face) 6132 6142 (fontified nil face font-lock-comment-face) 6142 6152 (fontified nil) 6152 6168 (fontified nil) 6168 6170 (fontified nil face font-lock-builtin-face) 6170 6180 (fontified nil) 6180 6188 (fontified nil) 6188 6195 (fontified nil face font-lock-function-name-face) 6195 6200 (fontified nil) 6200 6201 (fontified nil face font-lock-builtin-face) 6201 6210 (fontified nil) 6210 6211 (fontified nil face font-lock-builtin-face) 6211 6212 (fontified nil) 6212 6218 (fontified nil face font-lock-string-face) 6218 6219 (fontified nil face font-lock-builtin-face) 6219 6224 (fontified nil) 6224 6225 (fontified nil face font-lock-builtin-face) 6225 6250 (fontified nil) 6250 6251 (fontified nil face font-lock-builtin-face) 6251 6252 (fontified nil) 6252 6257 (fontified nil face font-lock-string-face) 6257 6258 (fontified nil face font-lock-builtin-face) 6258 6276 (fontified nil) 6276 6280 (fontified nil) 6280 6282 (fontified nil face font-lock-comment-delimiter-face) 6282 6438 (fontified nil face font-lock-comment-face) 6438 6468 (fontified nil) 6468 6469 (fontified nil face font-lock-builtin-face) 6469 6483 (fontified nil) 6483 6491 (fontified nil) 6491 6493 (fontified nil face font-lock-keyword-face) 6493 6509 (fontified nil) 6509 6521 (fontified nil) 6521 6527 (fontified nil face font-lock-warning-face) 6527 6539 (fontified nil) 6539 6540 (fontified nil face font-lock-comment-delimiter-face) 6540 6553 (fontified nil face font-lock-comment-face) 6553 6564 (fontified nil) 6564 6588 (fontified nil) 6588 6589 (fontified nil face font-lock-builtin-face) 6589 6590 (fontified nil face font-lock-builtin-face) 6590 6630 (fontified nil face font-lock-string-face) 6630 6631 (fontified nil) 6631 27561 (fontified nil) 27561 27569 (fontified nil) 27569 27573 (fontified nil face font-lock-keyword-face) 27573 27590 (fontified nil) 27590 27609 (fontified nil) 27609 27611 (fontified nil face font-lock-builtin-face) 27611 27622 (fontified nil) 27622 27631 (fontified nil face font-lock-variable-name-face) 27631 27632 (fontified nil) 27632 27644 (fontified nil) 27644 27646 (fontified nil face font-lock-keyword-face) 27646 27656 (fontified nil) 27656 27658 (fontified nil face font-lock-builtin-face) 27658 27674 (fontified nil) 27674 27690 (fontified nil) 27690 27698 (fontified nil face font-lock-keyword-face) 27698 27713 (fontified nil) 27713 27747 (fontified nil) 27747 27749 (fontified nil face font-lock-builtin-face) 27749 27753 (fontified nil) 27753 27754 (fontified nil face font-lock-builtin-face) 27754 27778 (fontified nil) 27778 27790 (fontified nil) 27790 27792 (fontified nil face font-lock-keyword-face) 27792 27819 (fontified nil) 27819 27821 (fontified nil face font-lock-builtin-face) 27821 27826 (fontified nil) 27826 27847 (fontified nil) 27847 27849 (fontified nil face font-lock-builtin-face) 27849 27875 (fontified nil) 27875 27891 (fontified nil) 27891 27897 (fontified nil face font-lock-keyword-face) 27897 27898 (fontified nil face font-lock-builtin-face) 27898 27915 (fontified nil) 27915 27916 (fontified nil face font-lock-builtin-face) 27916 27917 (fontified nil) 27917 27923 (fontified nil face font-lock-keyword-face) 27923 27924 (fontified nil face font-lock-builtin-face) 27924 27927 (fontified nil) 27927 27936 (fontified nil face font-lock-string-face) 27936 27945 (fontified nil) 27945 27961 (fontified nil) 27961 27963 (fontified nil face font-lock-keyword-face) 27963 27983 (fontified nil) 27983 27985 (fontified nil face font-lock-builtin-face) 27985 27986 (fontified nil face font-lock-builtin-face) 27986 27992 (fontified nil) 27992 27993 (fontified nil face font-lock-comment-delimiter-face) 27993 28007 (fontified nil face font-lock-comment-face) 28007 28027 (fontified nil) 28027 28029 (fontified nil face font-lock-comment-delimiter-face) 28029 28061 (fontified nil face font-lock-comment-face) 28061 28081 (fontified nil) 28081 28088 (fontified nil face font-lock-function-name-face) 28088 28089 (fontified nil) 28089 28110 (fontified nil face font-lock-string-face) 28110 28111 (fontified nil face font-lock-builtin-face) 28111 28116 (fontified nil face font-lock-string-face) 28116 28117 (fontified nil face font-lock-builtin-face) 28117 28126 (fontified nil) 28126 28157 (fontified nil) 28157 28159 (fontified nil face font-lock-builtin-face) 28159 28167 (fontified nil) 28167 28187 (fontified nil) 28187 28192 (fontified nil face font-lock-keyword-face) 28192 28193 (fontified nil) 28193 28235 (fontified nil) 28235 28243 (fontified nil) 28243 28262 (fontified nil face font-lock-keyword-face) 28262 28289 (fontified nil) 28289 28297 (fontified nil) 28297 28303 (fontified nil face font-lock-warning-face) 28303 28323 (fontified nil) 28323 28345 (fontified nil) 28345 28358 (fontified nil) 28358 28389 (fontified nil) 28389 28391 (fontified nil face font-lock-builtin-face) 28391 28412 (fontified nil face font-lock-variable-name-face) 28412 28413 (fontified nil) 28413 28439 (fontified nil) 28439 28441 (fontified nil face font-lock-builtin-face) 28441 28457 (fontified nil face font-lock-variable-name-face) 28457 28458 (fontified nil) 28458 28466 (fontified nil) 28466 28485 (fontified nil face font-lock-keyword-face) 28485 28486 (fontified nil face font-lock-builtin-face) 28486 28487 (fontified nil) 28487 28489 (fontified nil face font-lock-keyword-face) 28489 28490 (fontified nil) 28490 28498 (fontified nil) 28498 28515 (fontified nil face font-lock-keyword-face) 28515 28516 (fontified nil face font-lock-builtin-face) 28516 28519 (fontified nil) 28519 28527 (fontified nil) 28527 28533 (fontified nil face font-lock-keyword-face) 28533 28534 (fontified nil face font-lock-builtin-face) 28534 28541 (fontified nil) 28541 28542 (fontified nil face font-lock-builtin-face) 28542 28543 (fontified nil) 28543 28545 (fontified nil face font-lock-keyword-face) 28545 28546 (fontified nil face font-lock-builtin-face) 28546 28559 (fontified nil) 28559 28578 (fontified nil) 28578 28580 (fontified nil face font-lock-builtin-face) 28580 28585 (fontified nil face font-lock-variable-name-face) 28585 28587 (fontified nil) 28587 28617 (fontified nil) 28617 28619 (fontified nil face font-lock-builtin-face) 28619 28623 (fontified nil) 28623 28624 (fontified nil face font-lock-builtin-face) 28624 28647 (fontified nil) 28647 28660 (fontified nil) 28660 28662 (fontified nil face font-lock-builtin-face) 28662 28688 (fontified nil) 28688 28696 (fontified nil) 28696 28698 (fontified nil face font-lock-keyword-face) 28698 28709 (fontified nil) 28709 28732 (fontified nil) 28732 28734 (fontified nil face font-lock-builtin-face) 28734 28760 (fontified nil) 28760 28761 (fontified nil face font-lock-builtin-face) 28761 28779 (fontified nil) 28779 28780 (fontified nil) 28780 28788 (fontified nil) 28788 28805 (fontified nil face font-lock-keyword-face) 28805 28827 (fontified nil) 28827 28835 (fontified nil) 28835 28854 (fontified nil face font-lock-keyword-face) 28854 28881 (fontified nil) 28881 28889 (fontified nil) 28889 28895 (fontified nil face font-lock-warning-face) 28895 28946 (fontified nil) 28946 28960 (fontified nil) 28960 28962 (fontified nil face font-lock-builtin-face) 28962 28965 (fontified nil) 28965 28973 (fontified nil) 28973 28980 (fontified nil face font-lock-function-name-face) 28980 28985 (fontified nil) 28985 28986 (fontified nil face font-lock-builtin-face) 28986 29000 (fontified nil) 29000 29001 (fontified nil face font-lock-builtin-face) 29001 29002 (fontified nil) 29002 29008 (fontified nil face font-lock-string-face) 29008 29009 (fontified nil face font-lock-builtin-face) 29009 29014 (fontified nil) 29014 29015 (fontified nil face font-lock-builtin-face) 29015 29041 (fontified nil) 29041 29042 (fontified nil face font-lock-builtin-face) 29042 29043 (fontified nil) 29043 29048 (fontified nil face font-lock-string-face) 29048 29049 (fontified nil face font-lock-builtin-face) 29049 29057 (fontified nil) 29057 29058 (fontified nil face font-lock-builtin-face) 29058 29059 (fontified nil) 29059 29065 (fontified nil face font-lock-string-face) 29065 29066 (fontified nil face font-lock-builtin-face) 29066 29074 (fontified nil) 29074 29082 (fontified nil) 29082 29088 (fontified nil face font-lock-warning-face) 29088 29144 (fontified nil) 29144 29152 (fontified nil) 29152 29166 (fontified nil face font-lock-function-name-face) 29166 29179 (fontified nil) 29179 29180 (fontified nil face font-lock-builtin-face) 29180 29185 (fontified nil) 29185 29201 (fontified nil) 29201 29203 (fontified nil face font-lock-builtin-face) 29203 29204 (fontified nil) 29204 29211 (fontified nil face font-lock-function-name-face) 29211 29216 (fontified nil) 29216 29217 (fontified nil face font-lock-builtin-face) 29217 29235 (fontified nil) 29235 29236 (fontified nil face font-lock-builtin-face) 29236 29237 (fontified nil) 29237 29243 (fontified nil face font-lock-string-face) 29243 29244 (fontified nil face font-lock-builtin-face) 29244 29249 (fontified nil) 29249 29250 (fontified nil face font-lock-builtin-face) 29250 29272 (fontified nil) 29272 29273 (fontified nil face font-lock-builtin-face) 29273 29274 (fontified nil) 29274 29279 (fontified nil face font-lock-string-face) 29279 29280 (fontified nil face font-lock-builtin-face) 29280 29288 (fontified nil) 29288 29289 (fontified nil face font-lock-builtin-face) 29289 29290 (fontified nil) 29290 29295 (fontified nil face font-lock-string-face) 29295 29296 (fontified nil face font-lock-builtin-face) 29296 29297 (fontified nil) 29297 29298 (fontified nil face font-lock-builtin-face) 29298 29312 (fontified nil) 29312 29320 (fontified nil) 29320 29322 (fontified nil face font-lock-keyword-face) 29322 29333 (fontified nil) 29333 29335 (fontified nil face font-lock-builtin-face) 29335 29341 (fontified nil) 29341 29353 (fontified nil) 29353 29359 (fontified nil face font-lock-warning-face) 29359 29360 (fontified nil) 29360 29365 (fontified nil face font-lock-variable-name-face) 29365 29377 (fontified nil) 29377 29409 (fontified nil) 29409 29411 (fontified nil face font-lock-builtin-face) 29411 29413 (fontified nil) 29413 29421 (fontified nil) 29421 29428 (fontified nil face font-lock-function-name-face) 29428 29433 (fontified nil) 29433 29434 (fontified nil face font-lock-builtin-face) 29434 29445 (fontified nil) 29445 29446 (fontified nil face font-lock-builtin-face) 29446 29447 (fontified nil) 29447 29453 (fontified nil face font-lock-string-face) 29453 29454 (fontified nil face font-lock-builtin-face) 29454 29459 (fontified nil) 29459 29460 (fontified nil face font-lock-builtin-face) 29460 29490 (fontified nil) 29490 29491 (fontified nil face font-lock-builtin-face) 29491 29492 (fontified nil) 29492 29497 (fontified nil face font-lock-string-face) 29497 29498 (fontified nil face font-lock-builtin-face) 29498 29499 (fontified nil) 29499 29500 (fontified nil face font-lock-builtin-face) 29500 29512 (fontified nil) 29512 29513 (fontified nil face font-lock-builtin-face) 29513 29514 (fontified nil) 29514 29520 (fontified nil face font-lock-string-face) 29520 29521 (fontified nil face font-lock-builtin-face) 29521 29549 (fontified nil) 29549 29557 (fontified nil) 29557 29563 (fontified nil face font-lock-warning-face) 29563 29652 (fontified nil) 29652 29672 (fontified nil) 29672 29674 (fontified nil face font-lock-builtin-face) 29674 29678 (fontified nil) 29678 29679 (fontified nil face font-lock-builtin-face) 29679 29698 (fontified nil) 29698 29706 (fontified nil) 29706 29710 (fontified nil face font-lock-keyword-face) 29710 29725 (fontified nil) 29725 29726 (fontified nil face font-lock-builtin-face) 29726 29737 (fontified nil) 29737 29747 (fontified nil) 29747 29784 (fontified nil) 29784 29786 (face font-lock-builtin-face fontified nil) 29786 29798 (fontified nil) 29798 29799 (face font-lock-builtin-face fontified nil) 29799 29805 (fontified nil) 29805 29812 (face font-lock-variable-name-face fontified nil) 29812 29815 (fontified nil) 29815 29827 (fontified nil) 29827 29829 (face font-lock-keyword-face fontified nil) 29829 29845 (fontified nil) 29845 29857 (fontified nil) 29857 29859 (face font-lock-builtin-face fontified nil) 29859 29879 (fontified nil) 29879 29895 (fontified nil) 29895 29901 (face font-lock-warning-face fontified nil) 29901 29902 (fontified nil) 29902 29909 (face font-lock-variable-name-face fontified nil) 29909 29934 (fontified nil) 29934 29942 (fontified nil) 29942 29948 (face font-lock-warning-face fontified nil) 29948 29951 (fontified nil) 29951 29952 (face font-lock-comment-delimiter-face fontified nil) 29952 29979 (face font-lock-comment-face fontified nil) 29979 29986 (fontified nil) 29986 30010 (fontified nil) 30010 30011 (fontified nil rear-nonsticky nil)) . 5002) (undo-tree-id161 . -29737) (undo-tree-id162 . -30011) (undo-tree-id163 . -29986) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (nil fontified t 5002 . 5033) (nil fontified t 5070 . 5099) (nil fontified t 5099 . 5106) (nil fontified t 5164 . 5168) (nil fontified t 5188 . 5217) (nil fontified t 5227 . 5239) (nil fontified t 5262 . 5272) (nil fontified t 5272 . 5282) (nil fontified t 5299 . 5309) (nil fontified t 5343 . 5374) (nil fontified t 5387 . 5424) (nil fontified t 5434 . 5458) (nil fontified t 5499 . 5517) (nil fontified t 5553 . 5568) (nil fontified t 5588 . 5617) (nil fontified t 5627 . 5639) (nil fontified t 5662 . 5672) (nil fontified t 5672 . 5682) (nil fontified t 5699 . 5708) (nil fontified t 5726 . 5736) (nil fontified t 5774 . 5775) (nil fontified t 5811 . 5816) (nil fontified t 5844 . 5855) (nil fontified t 5900 . 5926) (nil fontified t 5975 . 5993) (nil fontified t 6100 . 6119) (nil fontified t 6129 . 6158) (nil fontified t 6204 . 6209) (nil fontified t 6230 . 6290) (nil fontified t 6334 . 6351) (nil fontified t 6351 . 6357) (nil fontified t 6384 . 6403) (nil fontified t 6440 . 6452) (nil fontified t 6500 . 6516) (nil fontified nil 6525 . 6591) (nil fontified nil 6600 . 6625) (nil fontified nil 6625 . 6843) (nil fontified nil 6843 . 6854) (nil fontified nil 6868 . 6896) (nil fontified nil 6940 . 6960) (nil fontified nil 6996 . 7028) (nil fontified nil 7106 . 7124) (nil fontified nil 7169 . 7192) (nil fontified nil 7206 . 7279) (nil fontified nil 7362 . 7387) (nil fontified nil 7452 . 7456) (nil fontified nil 7494 . 7505) (nil fontified nil 7515 . 7527) (nil fontified nil 7550 . 7560) (nil fontified nil 7560 . 7570) (nil fontified nil 7587 . 7596) (nil fontified nil 7614 . 7624) (nil fontified nil 7656 . 7679) (nil fontified nil 7728 . 7754) (nil fontified nil 7861 . 7880) (nil fontified nil 7890 . 7914) (nil fontified nil 7949 . 8004) (nil fontified nil 8051 . 8077) (nil fontified nil 8102 . 8169) (nil fontified nil 8183 . 8202) (nil fontified nil 8234 . 8238) (nil fontified nil 8281 . 8303) (nil fontified nil 8313 . 8326) (nil fontified nil 8339 . 8388) (nil fontified nil 8402 . 8430) (nil fontified nil 8443 . 8466) (nil fontified nil 8495 . 8558) (nil fontified nil 8575 . 8619) (nil fontified nil 8668 . 8672) (nil fontified nil 8709 . 8720) (nil fontified nil 8756 . 8767) (nil fontified nil 8785 . 8797) (nil fontified nil 8806 . 8850) (nil fontified nil 8899 . 8904) (nil fontified nil 8940 . 8952) (nil fontified nil 8994 . 8998) (nil fontified nil 8998 . 9384) (nil fontified nil 9412 . 9418) (nil fontified nil 9467 . 9484) (nil fontified nil 9497 . 9508) (nil fontified nil 9555 . 9569) (nil fontified nil 9618 . 9635) (nil fontified nil 9648 . 9669) (nil fontified nil 9685 . 9688) (nil fontified nil 9716 . 9742) (nil fontified nil 9780 . 9798) (nil fontified nil 9845 . 9873) (nil fontified nil 9988 . 10053) (nil fontified nil 10091 . 10102) (nil fontified nil 10112 . 10124) (nil fontified nil 10147 . 10157) (nil fontified nil 10157 . 10167) (nil fontified nil 10185 . 10195) (nil fontified nil 10222 . 10246) (nil fontified nil 10260 . 10312) (nil fontified nil 10332 . 10361) (nil fontified nil 10371 . 10383) (nil fontified nil 10406 . 10416) (nil fontified nil 10416 . 10426) (nil fontified nil 10444 . 10454) (nil fontified nil 10481 . 10505) (nil fontified nil 10515 . 10533) (nil fontified nil 10615 . 10626) (nil fontified nil 10640 . 10643) (nil fontified nil 10723 . 10777) (nil fontified nil 10797 . 10826) (nil fontified nil 10836 . 10848) (nil fontified nil 10871 . 10881) (nil fontified nil 10881 . 10891) (nil fontified nil 10909 . 10919) (nil fontified nil 10995 . 11040) (nil fontified nil 11060 . 11089) (nil fontified nil 11099 . 11111) (nil fontified nil 11134 . 11144) (nil fontified nil 11144 . 11154) (nil fontified nil 11172 . 11182) (nil fontified nil 11260 . 11278) (nil fontified nil 11284 . 11440) (nil fontified nil 11471 . 11485) (nil fontified nil 11495 . 11511) (nil fontified nil 11542 . 11555) (nil fontified nil 11555 . 11566) (nil fontified nil 11632 . 11633) (nil fontified nil 11633 . 32563) (nil fontified nil 32575 . 32592) (nil fontified nil 32633 . 32634) (nil fontified nil 32660 . 32676) (nil fontified nil 32700 . 32715) (nil fontified nil 32756 . 32780) (nil fontified nil 32823 . 32828) (nil fontified nil 32851 . 32877) (nil fontified nil 32938 . 32947) (nil fontified nil 32995 . 33009) (nil fontified nil 33031 . 33063) (nil fontified nil 33119 . 33128) (nil fontified nil 33161 . 33169) (nil fontified nil 33194 . 33195) (nil fontified nil 33195 . 33237) (nil fontified nil 33264 . 33291) (nil fontified nil 33305 . 33325) (nil fontified nil 33347 . 33360) (nil fontified nil 33414 . 33415) (nil fontified nil 33459 . 33460) (nil fontified nil 33491 . 33492) (nil fontified nil 33518 . 33521) (nil fontified nil 33548 . 33561) (nil fontified nil 33587 . 33589) (nil fontified nil 33626 . 33649) (nil fontified nil 33664 . 33690) (nil fontified nil 33700 . 33711) (nil fontified nil 33763 . 33781) (nil fontified nil 33781 . 33782) (nil fontified nil 33807 . 33829) (nil fontified nil 33856 . 33883) (nil fontified nil 33897 . 33948) (nil fontified nil 33964 . 33967) (nil fontified nil 34068 . 34076) (nil fontified nil 34090 . 34146) (nil fontified nil 34182 . 34187) (nil fontified nil 34300 . 34314) (nil fontified nil 34337 . 34343) (nil fontified nil 34367 . 34379) (nil fontified nil 34413 . 34415) (nil fontified nil 34523 . 34551) (nil fontified nil 34565 . 34654) (nil fontified nil 34681 . 34700) (nil fontified t 34739 . 34749) (nil fontified nil 34728 . 34739) (nil fontified t 34814 . 34817) (nil fontified t 34861 . 34881) (nil fontified t 34911 . 34936) (nil fontified t 34954 . 34981) (nil fontified t 34981 . 34988) (nil rear-nonsticky t 35012 . 35013)) (25716 48444 866247 400000) 0 nil])
([nil nil ((#("=VD._desktopNum_from_Hwnd(Id)" 0 1 (face font-lock-builtin-face fontified t) 1 3 (fontified t) 3 4 (face font-lock-builtin-face fontified t) 4 24 (fontified t) 24 25 (rear-nonsticky t fontified t) 25 26 (fontified t) 26 27 (face font-lock-keyword-face fontified t) 27 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t)) . 4998) (undo-tree-id230 . -29) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -26) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -29) (undo-tree-id240 . -29) (undo-tree-id241 . -4) (undo-tree-id242 . -5) (t 25716 48452 696468 700000)) nil (25716 48497 197800 500000) 0 nil])
nil
nil
([nil nil ((#("0" 0 1 (fontified t)) . -4961) (undo-tree-id229 . -1) 4962) nil (25716 48497 197792 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4989 . 4990) (nil fontified nil 4989 . 4990) (nil fontified nil 4988 . 4989) (nil fontified nil 4987 . 4988) (nil fontified nil 4986 . 4987) (nil fontified nil 4985 . 4986) (nil fontified nil 4965 . 4985) (nil fontified nil 4964 . 4965) (nil fontified nil 4962 . 4964) (nil fontified nil 4961 . 4962) (4961 . 4990)) nil (25716 48497 197789 800000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-builtin-face fontified t)) . 4961)) nil (25716 48497 197787 700000) 0 nil])
([nil nil ((#("_hWnd:
            pView:=arr_success_pView_hWnd[2]
            if (pView) {
                WindowDesktop:=[arr_success_pView_hWnd[3], pView]
            }" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 19 (fontified t) 19 24 (fontified t) 24 26 (face font-lock-builtin-face fontified t) 26 51 (fontified t) 51 52 (fontified t) 52 64 (fontified t) 64 66 (face font-lock-keyword-face fontified t) 66 76 (fontified t) 76 77 (fontified t) 77 93 (fontified t) 93 105 (fontified t) 105 106 (fontified t rear-nonsticky t) 106 108 (face font-lock-builtin-face fontified t) 108 134 (fontified t) 134 135 (face font-lock-builtin-face fontified t) 135 142 (fontified t) 142 143 (fontified t) 143 155 (fontified t) 155 156 (fontified t)) . -5019) (undo-tree-id197 . -6) (undo-tree-id198 . -156) (undo-tree-id199 . -6) (undo-tree-id200 . -156) (undo-tree-id201 . -156) (undo-tree-id202 . -156) (undo-tree-id203 . -156) (undo-tree-id204 . -156) (undo-tree-id205 . -156) (undo-tree-id206 . -156) (undo-tree-id207 . -93) (undo-tree-id208 . -93) (undo-tree-id209 . -106) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -156) (undo-tree-id213 . -156) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -156) (undo-tree-id221 . -143) (undo-tree-id222 . -1) (undo-tree-id223 . -6) (undo-tree-id224 . -7) (undo-tree-id225 . 1) (undo-tree-id226 . -156) (undo-tree-id227 . 81) (undo-tree-id228 . -76) 5175) nil (25716 48497 197785 200000) 0 nil])
([nil nil ((#("
            arr_success_pView" 0 1 (fontified t) 1 13 (fontified t) 13 30 (fontified t)) . 4989) (undo-tree-id171 . -30) (undo-tree-id172 . -30) (undo-tree-id173 . -30) (undo-tree-id174 . -30) (undo-tree-id175 . -30) (undo-tree-id176 . -30) (undo-tree-id177 . -30) (undo-tree-id178 . -30) (undo-tree-id179 . -30) (undo-tree-id180 . -30) (undo-tree-id181 . -30) (undo-tree-id182 . -30) (undo-tree-id183 . -30) (undo-tree-id184 . -30) (undo-tree-id185 . -30) (undo-tree-id186 . -30) (undo-tree-id187 . -30) (undo-tree-id188 . -30) (undo-tree-id189 . -30) (undo-tree-id190 . -30) (undo-tree-id191 . -30) (undo-tree-id192 . -30) (undo-tree-id193 . -30) (undo-tree-id194 . -30) (undo-tree-id195 . -30) (undo-tree-id196 . -30)) nil (25716 48497 197761 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4989) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 4990 (t 25716 48497 254375 600000)) nil (25716 48500 646981 800000) 0 nil])
([nil nil ((4985 . 4987) (t 25716 48500 699571 100000)) nil (25716 48595 875184 400000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -4985) (undo-tree-id246 . -1) (#("s" 0 1 (fontified t)) . -4986) (undo-tree-id247 . -1) 4987) nil (25716 48595 875181 500000) 0 nil])
([nil nil ((5072 . 5084) (#("            " 0 12 (fontified nil)) . 5072) (5084 . 5084) (5085 . 5086)) nil (25716 48595 875161 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4931) (t 25716 48595 912285 300000)) nil (25716 48604 97474 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5084) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 5085 (t 25716 48604 148995 200000)) nil (25716 48608 112680 400000) 0 nil])
([nil nil ((5084 . 5085) (t 25716 48608 142638 400000)) nil (25716 49046 20913 800000) 0 nil])
([nil nil ((15750 . 15751) (15703 . 15707) (#("    " 0 4 (fontified nil)) . 15703) (15707 . 15707) (15749 . 15750)) nil (25716 49046 20911 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16530 . 16531) (nil fontified nil 15751 . 16531) (15751 . 16531)) nil (25716 49046 390275 500000) 0 nil])
([nil nil ((16466 . 16470) (16391 . 16395) (16367 . 16371) (16350 . 16354) (16301 . 16305) (16085 . 16089) (16014 . 16018) (15911 . 15915) (15821 . 15825) (15751 . 15755) 16531) nil (25716 49083 150602 100000) 0 nil] [nil nil ((#("
WinGet, hWnd, ID, A  ; Get the window handle of the active window
currentStyle := DllCall(\"GetWindowLong\", \"Ptr\", hWnd, \"Int\", -16)  ; GWL_STYLE = -16

newStyle := BitXOr(currentStyle, 0x800000)  ; Modify the style to add/remove WS_BORDER (0x800000)

DllCall(\"SetWindowLong\", \"Ptr\", hWnd, \"Int\", -16, \"Int\", newStyle)
DllCall(\"SetWindowPos\", \"Ptr\", hWnd, \"Ptr\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"UInt\", 0x37)  ; SWP_FRAMECHANGED = 0x20 | SWP_NOZORDER = 0x4 | SWP_NOMOVE = 0x2 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10

; Wait some time before reverting the change
Sleep, 1000

; Revert the change
DllCall(\"SetWindowLong\", \"Ptr\", hWnd, \"Int\", -16, \"Int\", currentStyle)
DllCall(\"SetWindowPos\", \"Ptr\", hWnd, \"Ptr\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"UInt\", 0x37)
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-builtin-face fontified t) 8 13 (fontified t) 13 14 (face font-lock-builtin-face fontified t) 14 15 (fontified t) 15 17 (face font-lock-keyword-face fontified t) 17 18 (face font-lock-builtin-face fontified t) 18 22 (fontified t) 22 24 (face font-lock-comment-delimiter-face fontified t) 24 67 (face font-lock-comment-face fontified t) 67 80 (fontified t) 80 82 (face font-lock-builtin-face fontified t) 82 83 (fontified t) 83 90 (face font-lock-function-name-face fontified t) 90 91 (fontified t) 91 106 (face font-lock-string-face fontified t) 106 107 (face font-lock-builtin-face fontified t) 107 108 (fontified t) 108 113 (face font-lock-string-face fontified t) 113 114 (face font-lock-builtin-face fontified t) 114 119 (fontified t) 119 120 (face font-lock-builtin-face fontified t) 120 121 (fontified t) 121 126 (face font-lock-string-face fontified t) 126 127 (face font-lock-builtin-face fontified t) 127 128 (fontified t) 128 129 (face font-lock-builtin-face fontified t) 129 134 (fontified t) 134 136 (face font-lock-comment-delimiter-face fontified t) 136 152 (face font-lock-comment-face fontified t) 152 162 (fontified t) 162 164 (face font-lock-builtin-face fontified t) 164 165 (fontified t) 165 171 (face font-lock-keyword-face fontified t) 171 184 (fontified t) 184 185 (face font-lock-builtin-face fontified t) 185 197 (fontified t) 197 199 (face font-lock-comment-delimiter-face fontified t) 199 251 (face font-lock-comment-face fontified t) 251 252 (fontified t) 252 259 (face font-lock-function-name-face fontified t) 259 260 (fontified t) 260 275 (face font-lock-string-face fontified t) 275 276 (face font-lock-builtin-face fontified t) 276 277 (fontified t) 277 282 (face font-lock-string-face fontified t) 282 283 (face font-lock-builtin-face fontified t) 283 288 (fontified t) 288 289 (face font-lock-builtin-face fontified t) 289 290 (fontified t) 290 295 (face font-lock-string-face fontified t) 295 296 (face font-lock-builtin-face fontified t) 296 297 (fontified t) 297 298 (face font-lock-builtin-face fontified t) 298 300 (fontified t) 300 301 (face font-lock-builtin-face fontified t) 301 302 (fontified t) 302 307 (face font-lock-string-face fontified t) 307 308 (face font-lock-builtin-face fontified t) 308 319 (fontified t) 319 326 (face font-lock-function-name-face fontified t) 326 327 (fontified t) 327 341 (face font-lock-string-face fontified t) 341 342 (face font-lock-builtin-face fontified t) 342 343 (fontified t) 343 348 (face font-lock-string-face fontified t) 348 349 (face font-lock-builtin-face fontified t) 349 354 (fontified t) 354 355 (face font-lock-builtin-face fontified t) 355 356 (fontified t) 356 361 (face font-lock-string-face fontified t) 361 362 (face font-lock-builtin-face fontified t) 362 364 (fontified t) 364 365 (face font-lock-builtin-face fontified t) 365 366 (fontified t) 366 371 (face font-lock-string-face fontified t) 371 372 (face font-lock-builtin-face fontified t) 372 374 (fontified t) 374 375 (face font-lock-builtin-face fontified t) 375 376 (fontified t) 376 381 (face font-lock-string-face fontified t) 381 382 (face font-lock-builtin-face fontified t) 382 384 (fontified t) 384 385 (face font-lock-builtin-face fontified t) 385 386 (fontified t) 386 391 (face font-lock-string-face fontified t) 391 392 (face font-lock-builtin-face fontified t) 392 394 (fontified t) 394 395 (face font-lock-builtin-face fontified t) 395 396 (fontified t) 396 401 (face font-lock-string-face fontified t) 401 402 (face font-lock-builtin-face fontified t) 402 404 (fontified t) 404 405 (face font-lock-builtin-face fontified t) 405 406 (fontified t) 406 412 (face font-lock-string-face fontified t) 412 413 (face font-lock-builtin-face fontified t) 413 421 (fontified t) 421 423 (face font-lock-comment-delimiter-face fontified t) 423 530 (face font-lock-comment-face fontified t) 530 531 (fontified t) 531 533 (face font-lock-comment-delimiter-face fontified t) 533 576 (face font-lock-comment-face fontified t) 576 581 (face font-lock-keyword-face fontified t) 581 582 (face font-lock-builtin-face fontified t) 582 589 (fontified t) 589 591 (face font-lock-comment-delimiter-face fontified t) 591 609 (face font-lock-comment-face fontified t) 609 616 (face font-lock-function-name-face fontified t) 616 617 (fontified t) 617 632 (face font-lock-string-face fontified t) 632 633 (face font-lock-builtin-face fontified t) 633 634 (fontified t) 634 639 (face font-lock-string-face fontified t) 639 640 (face font-lock-builtin-face fontified t) 640 645 (fontified t) 645 646 (face font-lock-builtin-face fontified t) 646 647 (fontified t) 647 652 (face font-lock-string-face fontified t) 652 653 (face font-lock-builtin-face fontified t) 653 654 (fontified t) 654 655 (face font-lock-builtin-face fontified t) 655 657 (fontified t) 657 658 (face font-lock-builtin-face fontified t) 658 659 (fontified t) 659 664 (face font-lock-string-face fontified t) 664 665 (face font-lock-builtin-face fontified t) 665 680 (fontified t) 680 687 (face font-lock-function-name-face fontified t) 687 688 (fontified t) 688 702 (face font-lock-string-face fontified t) 702 703 (face font-lock-builtin-face fontified t) 703 704 (fontified t) 704 709 (face font-lock-string-face fontified t) 709 710 (face font-lock-builtin-face fontified t) 710 715 (fontified t) 715 716 (face font-lock-builtin-face fontified t) 716 717 (fontified t) 717 722 (face font-lock-string-face fontified t) 722 723 (face font-lock-builtin-face fontified t) 723 725 (fontified t) 725 726 (face font-lock-builtin-face fontified t) 726 727 (fontified t) 727 732 (face font-lock-string-face fontified t) 732 733 (face font-lock-builtin-face fontified t) 733 735 (fontified t) 735 736 (face font-lock-builtin-face fontified t) 736 737 (fontified t) 737 742 (face font-lock-string-face fontified t) 742 743 (face font-lock-builtin-face fontified t) 743 745 (fontified t) 745 746 (face font-lock-builtin-face fontified t) 746 747 (fontified t) 747 752 (face font-lock-string-face fontified t) 752 753 (face font-lock-builtin-face fontified t) 753 755 (fontified t) 755 756 (face font-lock-builtin-face fontified t) 756 757 (fontified t) 757 762 (face font-lock-string-face fontified t) 762 763 (face font-lock-builtin-face fontified t) 763 765 (fontified t) 765 766 (face font-lock-builtin-face fontified t) 766 767 (fontified t) 767 773 (face font-lock-string-face fontified t) 773 774 (face font-lock-builtin-face fontified t) 774 780 (fontified t) 780 781 (rear-nonsticky t fontified t)) . 15750) (undo-tree-id250 . -781) (undo-tree-id251 . -1) (undo-tree-id252 . -781) (undo-tree-id253 . -781) (undo-tree-id254 . -1) (undo-tree-id255 . -2) 15902) ((15750 . 16531)) (25716 49046 21015 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -16570) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 16571) nil (25716 49083 150600 700000) 0 nil])
([nil nil ((15750 . 15751)) ((#("z" 0 1 (fontified t)) . 15750) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1)) (25716 49046 20878 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16365) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 16366) nil (25716 49083 150598 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -16299) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 16300) nil (25716 49083 150594 600000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -16012) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 16013) nil (25716 49083 150211 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -15909) (undo-tree-id272 . -1) (undo-tree-id273 . -1) 15910) nil (25716 49083 150208 600000) 0 nil])
([nil nil ((#("hWnd" 0 4 (fontified t)) . 15763) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4)) nil (25716 49083 150206 700000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 7) (16602 . 16603) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16511 . 16512) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16189 . 16190) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16102 . 16103) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15910 . 15911) (apply deactivate-cursor-after-undo 3) (15783 . 15784) (apply activate-cursor-for-undo 7) (16596 . 16597) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16506 . 16507) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16185 . 16186) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16099 . 16100) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15908 . 15909) (apply deactivate-cursor-after-undo 3) (15782 . 15783) (apply activate-cursor-for-undo 7) (16590 . 16591) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16501 . 16502) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16181 . 16182) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16096 . 16097) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15906 . 15907) (apply deactivate-cursor-after-undo 3) (15781 . 15782) (apply activate-cursor-for-undo 7) (16584 . 16585) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16496 . 16497) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16177 . 16178) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16093 . 16094) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15904 . 15905) (apply deactivate-cursor-after-undo 3) (15780 . 15781) (apply activate-cursor-for-undo 7) (16578 . 16579) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16491 . 16492) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16173 . 16174) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16090 . 16091) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15902 . 15903) (apply deactivate-cursor-after-undo 3) (15779 . 15780) (apply activate-cursor-for-undo 7) (16572 . 16573) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16486 . 16487) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16169 . 16170) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16087 . 16088) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15900 . 15901) (apply deactivate-cursor-after-undo 3) (15778 . 15779) (apply activate-cursor-for-undo 7) (16566 . 16567) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16481 . 16482) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16165 . 16166) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16084 . 16085) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15898 . 15899) (apply deactivate-cursor-after-undo 3) (15777 . 15778) (apply activate-cursor-for-undo 7) (16560 . 16561) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16476 . 16477) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16161 . 16162) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16081 . 16082) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15896 . 15897) (apply deactivate-cursor-after-undo 3) (15776 . 15777) (apply activate-cursor-for-undo 7) (16554 . 16555) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16471 . 16472) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16157 . 16158) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16078 . 16079) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15894 . 15895) (apply deactivate-cursor-after-undo 3) (15775 . 15776) (apply activate-cursor-for-undo 7) (16548 . 16549) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16466 . 16467) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16153 . 16154) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16075 . 16076) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15892 . 15893) (apply deactivate-cursor-after-undo 3) (15774 . 15775) (apply activate-cursor-for-undo 7) (16542 . 16543) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16461 . 16462) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16149 . 16150) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16072 . 16073) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15890 . 15891) (apply deactivate-cursor-after-undo 3) (15773 . 15774) (apply activate-cursor-for-undo 7) (16536 . 16537) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16456 . 16457) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16145 . 16146) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16069 . 16070) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15888 . 15889) (apply deactivate-cursor-after-undo 3) (15772 . 15773) (apply activate-cursor-for-undo 7) (16530 . 16531) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16451 . 16452) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16141 . 16142) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16066 . 16067) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15886 . 15887) (apply deactivate-cursor-after-undo 3) (15771 . 15772) (apply activate-cursor-for-undo 7) (16524 . 16525) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16446 . 16447) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16137 . 16138) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16063 . 16064) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15884 . 15885) (apply deactivate-cursor-after-undo 3) (15770 . 15771) (apply activate-cursor-for-undo 7) (16518 . 16519) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16441 . 16442) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16133 . 16134) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16060 . 16061) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15882 . 15883) (apply deactivate-cursor-after-undo 3) (15769 . 15770) (apply activate-cursor-for-undo 7) (16512 . 16513) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16436 . 16437) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16129 . 16130) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16057 . 16058) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15880 . 15881) (apply deactivate-cursor-after-undo 3) (15768 . 15769) (apply activate-cursor-for-undo 7) (16506 . 16507) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16431 . 16432) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16125 . 16126) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16054 . 16055) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15878 . 15879) (apply deactivate-cursor-after-undo 3) (15767 . 15768) (apply activate-cursor-for-undo 7) (16500 . 16501) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16426 . 16427) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16121 . 16122) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16051 . 16052) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15876 . 15877) (apply deactivate-cursor-after-undo 3) (15766 . 15767) (apply activate-cursor-for-undo 7) (16494 . 16495) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16421 . 16422) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16117 . 16118) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16048 . 16049) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15874 . 15875) (apply deactivate-cursor-after-undo 3) (15765 . 15766) (apply activate-cursor-for-undo 7) (16488 . 16489) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16416 . 16417) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16113 . 16114) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16045 . 16046) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15872 . 15873) (apply deactivate-cursor-after-undo 3) (15764 . 15765) (apply activate-cursor-for-undo 3) (15870 . 15871) (#("hWnd" 0 4 (fontified t)) . 15870) (undo-tree-id259 . -4) (apply deactivate-cursor-after-undo 3) (apply activate-cursor-for-undo 4) (16045 . 16046) (#("hWnd" 0 4 (fontified t)) . 16045) (undo-tree-id260 . -4) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 5) (16115 . 16116) (#("hWnd" 0 4 (fontified t)) . 16115) (undo-tree-id261 . -4) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 6) (16420 . 16421) (#("hWnd" 0 4 (fontified t)) . 16420) (undo-tree-id262 . -4) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (16494 . 16495) (#("hWnd" 0 4 (fontified t)) . 16494) (undo-tree-id263 . -4) (apply deactivate-cursor-after-undo 7) (15763 . 15764)) nil (25716 49083 150193 300000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 7) (16608 . 16609) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (16516 . 16517) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (16193 . 16194) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (16105 . 16106) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (15912 . 15913) (apply deactivate-cursor-after-undo 3) (15784 . 15785)) nil (25716 49083 150156 300000) 0 nil])
([nil nil ((#("    WinGet, %TopWindowIdInMonitor%, ID, A  ; Get the window handle of the active window" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-builtin-face fontified t) 11 12 (fontified t) 12 34 (face font-lock-variable-name-face fontified t) 34 35 (face font-lock-builtin-face fontified t) 35 36 (fontified t) 36 38 (face font-lock-keyword-face fontified t) 38 39 (face font-lock-builtin-face fontified t) 39 43 (fontified t) 43 45 (face font-lock-comment-delimiter-face fontified t) 45 87 (face font-lock-comment-face fontified t)) . 15751) (undo-tree-id294 . -87) (undo-tree-id295 . -12) (undo-tree-id296 . -12) (undo-tree-id297 . -12) (undo-tree-id298 . -12) (undo-tree-id299 . -12) (undo-tree-id300 . -12) (undo-tree-id301 . -87) (undo-tree-id302 . -12) (undo-tree-id303 . -13) (undo-tree-id304 . -87) (t 25716 49083 189378 400000)) nil (25716 49092 370418 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15750) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) 15751) nil (25716 49092 370406 0) 0 nil])
([nil nil ((#("BitXOr" 0 6 (face font-lock-keyword-face fontified t)) . 15874) (undo-tree-id310 . -6) (undo-tree-id311 . -6) (undo-tree-id312 . -6) (t 25716 49092 420072 600000)) nil (25716 49155 164212 200000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 15874) (undo-tree-id308 . 1) (undo-tree-id309 . -1)) nil (25716 49155 164203 500000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -15896) (undo-tree-id305 . -1) (undo-tree-id306 . 1) (undo-tree-id307 . -1) 15897) nil (25716 49155 164198 200000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-builtin-face fontified t)) . 15886)) nil (25716 49155 164178 500000) 0 nil])
([nil nil ((15886 . 15888)) nil (25716 49179 950567 400000) 0 nil])
([nil nil ((#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -15803) (undo-tree-id318 . -1) 15804 (t 25716 49155 218230 300000)) nil (25716 49207 41129 300000) 0 nil] [nil nil ((15889 . 15893) (#(" " 0 1 (fontified nil)) . 15889) (15890 . 15890) (15858 . 15862) (#("    " 0 4 (fontified nil)) . 15858) (15862 . 15862) (15888 . 15889) (t 25716 49155 218230 300000)) ((#("
" 0 1 (fontified nil)) . 15888) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (15858 . 15862) (#("    " 0 4 (fontified t)) . 15858) (15889 . 15890) (#("    " 0 4 (fontified t)) . 15889)) (25716 49179 949492 100000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -15823) (undo-tree-id317 . -1) 15824) nil (25716 49207 41126 500000) 0 nil])
nil
([nil nil ((apply activate-cursor-for-undo 11) (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -16508) (apply deactivate-cursor-after-undo 11) (apply activate-cursor-for-undo 10) (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -16417) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -16095) (apply deactivate-cursor-after-undo 9) (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -16008) (undo-tree-id316 . -1) 16009) nil (25716 49207 41122 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 11) (#("%" 0 1 (fontified t)) . 16484) (apply deactivate-cursor-after-undo 11) (apply activate-cursor-for-undo 10) (#("%" 0 1 (fontified t)) . 16394) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (#("%" 0 1 (fontified t)) . 16073) (apply deactivate-cursor-after-undo 9) (#("%" 0 1 (fontified t)) . 15987) (undo-tree-id315 . -1)) nil (25716 49207 41113 100000) 0 nil])
([nil nil ((15750 . 15751) (t 25716 49207 82381 200000)) nil (25716 49245 545056 100000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -16333) (undo-tree-id319 . -1) 16334) nil (25716 49245 545050 800000) 0 nil])
([nil nil ((15751 . 15753) (t 25716 49245 598763 200000)) nil (25716 49308 958527 0) 0 nil])
([nil nil ((15751 . 15755) 15753) nil (25716 49308 958526 0) 0 nil])
([nil nil ((15757 . 15760)) nil (25716 49308 958525 100000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-comment-face fontified t)) . -15759) (undo-tree-id320 . -1) 15760) nil (25716 49308 958523 800000) 0 nil])
([nil nil ((15759 . 15760)) nil (25716 49308 958512 200000) 0 nil])
([nil nil ((15751 . 15755) (#("    " 0 4 (fontified nil)) . 15751) (15755 . 15755) (15760 . 15761)) nil (25716 49308 958511 0) 0 nil])
([nil nil ((15761 . 15762)) nil (25716 49308 958509 900000) 0 nil])
([nil nil ((15761 . 15765) 15762) nil (25716 49308 958509 200000) 0 nil])
([nil nil ((15766 . 15770)) nil (25716 49308 958508 500000) 0 nil])
([nil nil ((15770 . 15784)) nil (25716 49308 958610 700000) 0 nil])
([nil nil ((15761 . 15765) (#("    " 0 4 (fontified nil)) . 15761) (15765 . 15765) (15784 . 15785)) nil (25716 49320 419380 500000) 0 nil] [nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 15784)) ((15784 . 15785)) (25716 49308 958502 600000) 0 nil])
([nil nil ((15785 . 15787)) nil (25716 49320 419379 200000) 0 nil])
nil
([nil nil ((15785 . 15789) 15787) nil (25716 49320 419378 200000) 0 nil])
([nil nil ((15791 . 15805)) nil (25716 49320 419377 100000) 0 nil])
([nil nil ((15805 . 15807)) nil (25716 49320 419376 100000) 0 nil])
([nil nil ((15807 . 15830)) nil (25716 49320 419375 200000) 0 nil])
([nil nil ((15830 . 15831)) nil (25716 49320 419373 800000) 0 nil])
([nil nil ((15807 . 15808)) nil (25716 49320 419372 0) 0 nil])
([nil nil ((15761 . 15785) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -15784) (undo-tree-id328 . -1) (undo-tree-id329 . 1) (undo-tree-id330 . -1) (#("    ; *****************" 0 4 (fontified t) 4 6 (face font-lock-comment-delimiter-face fontified t) 6 23 (face font-lock-comment-face fontified t)) . -15785) (undo-tree-id331 . -23) 15808) nil (25716 49320 419369 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15750) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#("    ; ***" 0 4 (fontified t) 4 6 (face font-lock-comment-delimiter-face fontified t) 6 9 (face font-lock-comment-face fontified t)) . 15751) (undo-tree-id326 . -9) (undo-tree-id327 . -1) 15760) nil (25716 49320 419360 900000) 0 nil])
([nil nil ((apply -24 15750 16666 undo--wrap-and-run-primitive-undo 15750 16666 ((16546 . 16548) (16453 . 16455) (16427 . 16429) (16410 . 16412) (16359 . 16361) (16126 . 16128) (16037 . 16039) (15940 . 15942) (15833 . 15835) (15807 . 15809) (15781 . 15783) (15755 . 15757) 15750)) (t 25716 49320 452581 900000)) nil (25716 49669 946978 300000) 0 nil])
([nil nil ((apply 24 15750 16641 undo--wrap-and-run-primitive-undo 15750 16641 ((#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16524) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16433) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16409) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16394) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16345) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16114) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16027) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15932) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15827) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15803) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15779) (#("; " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15755) 16665)) (t 25716 49669 980976 0)) nil (25716 49878 648190 500000) 0 nil])
([nil nil ((16641 . 16643) (t 25716 49878 682544 800000)) nil (25716 50082 888420 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17883 . 17884) (nil fontified nil 16642 . 17884) (16642 . 17884)) nil (25716 50082 888419 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16868) (undo-tree-id342 . -1) 16869) nil (25716 50082 888417 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17063) (undo-tree-id341 . -1) 17064) nil (25716 50082 888414 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17201) (undo-tree-id340 . -1) 17202) nil (25716 50082 888411 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17330) (undo-tree-id339 . -1) 17331) nil (25716 50082 888408 800000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -17557) (undo-tree-id338 . -1) 17558) nil (25716 50082 888405 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17627) (undo-tree-id337 . -1) 17628) nil (25716 50082 888402 600000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . -17877) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) 17878) nil (25716 50082 888395 400000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -16938) (undo-tree-id332 . -1) (#("0" 0 1 (fontified t)) . -16939) (undo-tree-id333 . -1) 16940) nil (25716 50086 147370 700000) 0 nil])
([nil nil ((16938 . 16940)) nil (25716 50092 436585 900000) 0 nil] [nil nil ((16938 . 16940)) ((#("90" 0 2 (fontified t)) . 16938) (undo-tree-id343 . -2) (t 25716 50082 927272 300000)) (25716 50082 888364 800000) 0 nil])
([nil nil ((apply -24 15750 16666 undo--wrap-and-run-primitive-undo 15750 16666 ((16546 . 16548) (16453 . 16455) (16427 . 16429) (16410 . 16412) (16359 . 16361) (16126 . 16128) (16037 . 16039) (15940 . 15942) (15833 . 15835) (15807 . 15809) (15781 . 15783) (15755 . 15757) 16641)) (t 25716 50092 481630 500000)) nil (25716 50100 401821 900000) 0 nil])
nil
([nil nil ((apply activate-cursor-for-undo 16) (17274 . 17275) (apply deactivate-cursor-after-undo 16) (apply activate-cursor-for-undo 15) (17320 . 17321) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (17376 . 17377) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (17467 . 17468) (apply deactivate-cursor-after-undo 13) (17480 . 17481) (t 25716 50100 436325 0)) nil (25716 50135 541122 500000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -16947) (undo-tree-id344 . -1) (#("0" 0 1 (fontified t)) . -16948) (undo-tree-id345 . -1) 16949 (t 25716 50135 590499 100000)) nil (25716 50170 152408 100000) 0 nil])
([nil nil ((16947 . 16948)) nil (25716 50170 152384 200000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -16947) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 16948 (t 25716 50170 207857 900000)) nil (25717 64960 116535 700000) 0 nil])
([nil nil ((16947 . 16948)) nil (25717 64960 116531 200000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -17647) (undo-tree-id346 . -1) (#("0" 0 1 (fontified t)) . -17648) (undo-tree-id347 . -1) 17649) nil (25717 64960 116528 500000) 0 nil])
([nil nil ((17647 . 17648)) nil (25717 64960 116508 500000) 0 nil])
([nil nil ((17648 . 17649) (t 25717 64960 167152 800000)) nil (25717 65044 122436 100000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -17648) (undo-tree-id352 . -1) 17649) nil (25717 65044 122430 500000) 0 nil])
([nil nil ((#("
    ; ; *****************
    ; ; make window flash
    ; ; *****************
    ; currentStyle := DllCall(\"GetWindowLong\", \"Ptr\", TopWindowIdInMonitor, \"Int\", -16)  ; GWL_STYLE = -16
    ; newStyle := currentStyle ^ 0x800000  ; Modify the style to add/remove WS_BORDER (0x800000)
    ; DllCall(\"SetWindowLong\", \"Ptr\", TopWindowIdInMonitor, \"Int\", -16, \"Int\", newStyle)
    ; DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"UInt\", 0x37)  ; SWP_FRAMECHANGED = 0x20 | SWP_NOZORDER = 0x4 | SWP_NOMOVE = 0x2 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
    ; ; Wait some time before reverting the change
    ; Sleep, 100
    ; ; Revert the change
    ; DllCall(\"SetWindowLong\", \"Ptr\", TopWindowIdInMonitor, \"Int\", -16, \"Int\", currentStyle)
    ; DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"Int\", 0, \"UInt\", 0x37)
" 0 1 (fontified t) 1 5 (fontified t) 5 7 (face font-lock-comment-delimiter-face fontified t) 7 9 (face font-lock-comment-face fontified t) 9 27 (face font-lock-comment-face fontified t) 27 31 (fontified t) 31 33 (face font-lock-comment-delimiter-face fontified t) 33 35 (face font-lock-comment-face fontified t) 35 52 (face font-lock-comment-face fontified t) 52 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 59 (face font-lock-comment-delimiter-face fontified t) 59 61 (face font-lock-comment-face fontified t) 61 78 (face font-lock-comment-face fontified t) 78 79 (face font-lock-comment-face fontified t) 79 83 (fontified t) 83 85 (face font-lock-comment-delimiter-face fontified t) 85 98 (face font-lock-comment-face fontified t) 98 100 (face font-lock-comment-face fontified t) 100 101 (face font-lock-comment-face fontified t) 101 108 (face font-lock-comment-face fontified t) 108 109 (face font-lock-comment-face fontified t) 109 124 (face font-lock-comment-face fontified t) 124 125 (face font-lock-comment-face fontified t) 125 126 (face font-lock-comment-face fontified t) 126 131 (face font-lock-comment-face fontified t) 131 132 (face font-lock-comment-face fontified t) 132 133 (face font-lock-comment-face fontified t) 133 153 (face font-lock-comment-face fontified t) 153 154 (face font-lock-comment-face fontified t) 154 155 (face font-lock-comment-face fontified t) 155 160 (face font-lock-comment-face fontified t) 160 161 (face font-lock-comment-face fontified t) 161 162 (face font-lock-comment-face fontified t) 162 163 (face font-lock-comment-face fontified t) 163 168 (face font-lock-comment-face fontified t) 168 170 (face font-lock-comment-face fontified t) 170 185 (face font-lock-comment-face fontified t) 185 186 (face font-lock-comment-face fontified t) 186 190 (fontified t) 190 192 (face font-lock-comment-delimiter-face fontified t) 192 201 (face font-lock-comment-face fontified t) 201 203 (face font-lock-comment-face fontified t) 203 204 (face font-lock-comment-face fontified t) 204 217 (face font-lock-comment-face fontified t) 217 218 (face font-lock-comment-face fontified t) 218 219 (face font-lock-comment-face fontified t) 219 229 (face font-lock-comment-face fontified t) 229 231 (face font-lock-comment-face fontified t) 231 282 (face font-lock-comment-face fontified t) 282 283 (face font-lock-comment-face fontified t) 283 287 (fontified t) 287 289 (face font-lock-comment-delimiter-face fontified t) 289 296 (face font-lock-comment-face fontified t) 296 297 (face font-lock-comment-face fontified t) 297 312 (face font-lock-comment-face fontified t) 312 313 (face font-lock-comment-face fontified t) 313 314 (face font-lock-comment-face fontified t) 314 319 (face font-lock-comment-face fontified t) 319 320 (face font-lock-comment-face fontified t) 320 321 (face font-lock-comment-face fontified t) 321 341 (face font-lock-comment-face fontified t) 341 342 (face font-lock-comment-face fontified t) 342 343 (face font-lock-comment-face fontified t) 343 348 (face font-lock-comment-face fontified t) 348 349 (face font-lock-comment-face fontified t) 349 350 (face font-lock-comment-face fontified t) 350 351 (face font-lock-comment-face fontified t) 351 353 (face font-lock-comment-face fontified t) 353 354 (face font-lock-comment-face fontified t) 354 355 (face font-lock-comment-face fontified t) 355 360 (face font-lock-comment-face fontified t) 360 361 (face font-lock-comment-face fontified t) 361 372 (face font-lock-comment-face fontified t) 372 376 (fontified t) 376 378 (face font-lock-comment-delimiter-face fontified t) 378 385 (face font-lock-comment-face fontified t) 385 386 (face font-lock-comment-face fontified t) 386 400 (face font-lock-comment-face fontified t) 400 401 (face font-lock-comment-face fontified t) 401 402 (face font-lock-comment-face fontified t) 402 407 (face font-lock-comment-face fontified t) 407 408 (face font-lock-comment-face fontified t) 408 409 (face font-lock-comment-face fontified t) 409 429 (face font-lock-comment-face fontified t) 429 430 (face font-lock-comment-face fontified t) 430 431 (face font-lock-comment-face fontified t) 431 436 (face font-lock-comment-face fontified t) 436 437 (face font-lock-comment-face fontified t) 437 439 (face font-lock-comment-face fontified t) 439 440 (face font-lock-comment-face fontified t) 440 441 (face font-lock-comment-face fontified t) 441 446 (face font-lock-comment-face fontified t) 446 447 (face font-lock-comment-face fontified t) 447 449 (face font-lock-comment-face fontified t) 449 450 (face font-lock-comment-face fontified t) 450 451 (face font-lock-comment-face fontified t) 451 456 (face font-lock-comment-face fontified t) 456 457 (face font-lock-comment-face fontified t) 457 459 (face font-lock-comment-face fontified t) 459 460 (face font-lock-comment-face fontified t) 460 461 (face font-lock-comment-face fontified t) 461 466 (face font-lock-comment-face fontified t) 466 467 (face font-lock-comment-face fontified t) 467 469 (face font-lock-comment-face fontified t) 469 470 (face font-lock-comment-face fontified t) 470 471 (face font-lock-comment-face fontified t) 471 476 (face font-lock-comment-face fontified t) 476 477 (face font-lock-comment-face fontified t) 477 479 (face font-lock-comment-face fontified t) 479 480 (face font-lock-comment-face fontified t) 480 481 (face font-lock-comment-face fontified t) 481 487 (face font-lock-comment-face fontified t) 487 488 (face font-lock-comment-face fontified t) 488 496 (face font-lock-comment-face fontified t) 496 498 (face font-lock-comment-face fontified t) 498 604 (face font-lock-comment-face fontified t) 604 605 (face font-lock-comment-face fontified t) 605 609 (fontified t) 609 611 (face font-lock-comment-delimiter-face fontified t) 611 613 (face font-lock-comment-face fontified t) 613 656 (face font-lock-comment-face fontified t) 656 660 (fontified t) 660 662 (face font-lock-comment-delimiter-face fontified t) 662 667 (face font-lock-comment-face fontified t) 667 668 (face font-lock-comment-face fontified t) 668 672 (face font-lock-comment-face fontified t) 672 673 (face font-lock-comment-face fontified t) 673 677 (fontified t) 677 679 (face font-lock-comment-delimiter-face fontified t) 679 681 (face font-lock-comment-face fontified t) 681 699 (face font-lock-comment-face fontified t) 699 703 (fontified t) 703 705 (face font-lock-comment-delimiter-face fontified t) 705 712 (face font-lock-comment-face fontified t) 712 713 (face font-lock-comment-face fontified t) 713 728 (face font-lock-comment-face fontified t) 728 729 (face font-lock-comment-face fontified t) 729 730 (face font-lock-comment-face fontified t) 730 735 (face font-lock-comment-face fontified t) 735 736 (face font-lock-comment-face fontified t) 736 737 (face font-lock-comment-face fontified t) 737 757 (face font-lock-comment-face fontified t) 757 758 (face font-lock-comment-face fontified t) 758 759 (face font-lock-comment-face fontified t) 759 764 (face font-lock-comment-face fontified t) 764 765 (face font-lock-comment-face fontified t) 765 766 (face font-lock-comment-face fontified t) 766 767 (face font-lock-comment-face fontified t) 767 769 (face font-lock-comment-face fontified t) 769 770 (face font-lock-comment-face fontified t) 770 771 (face font-lock-comment-face fontified t) 771 776 (face font-lock-comment-face fontified t) 776 777 (face font-lock-comment-face fontified t) 777 792 (face font-lock-comment-face fontified t) 792 796 (fontified t) 796 798 (face font-lock-comment-delimiter-face fontified t) 798 805 (face font-lock-comment-face fontified t) 805 806 (face font-lock-comment-face fontified t) 806 820 (face font-lock-comment-face fontified t) 820 821 (face font-lock-comment-face fontified t) 821 822 (face font-lock-comment-face fontified t) 822 827 (face font-lock-comment-face fontified t) 827 828 (face font-lock-comment-face fontified t) 828 829 (face font-lock-comment-face fontified t) 829 849 (face font-lock-comment-face fontified t) 849 850 (face font-lock-comment-face fontified t) 850 851 (face font-lock-comment-face fontified t) 851 856 (face font-lock-comment-face fontified t) 856 857 (face font-lock-comment-face fontified t) 857 859 (face font-lock-comment-face fontified t) 859 860 (face font-lock-comment-face fontified t) 860 861 (face font-lock-comment-face fontified t) 861 866 (face font-lock-comment-face fontified t) 866 867 (face font-lock-comment-face fontified t) 867 869 (face font-lock-comment-face fontified t) 869 870 (face font-lock-comment-face fontified t) 870 871 (face font-lock-comment-face fontified t) 871 876 (face font-lock-comment-face fontified t) 876 877 (face font-lock-comment-face fontified t) 877 879 (face font-lock-comment-face fontified t) 879 880 (face font-lock-comment-face fontified t) 880 881 (face font-lock-comment-face fontified t) 881 886 (face font-lock-comment-face fontified t) 886 887 (face font-lock-comment-face fontified t) 887 889 (face font-lock-comment-face fontified t) 889 890 (face font-lock-comment-face fontified t) 890 891 (face font-lock-comment-face fontified t) 891 896 (face font-lock-comment-face fontified t) 896 897 (face font-lock-comment-face fontified t) 897 899 (face font-lock-comment-face fontified t) 899 900 (face font-lock-comment-face fontified t) 900 901 (face font-lock-comment-face fontified t) 901 907 (face font-lock-comment-face fontified t) 907 908 (face font-lock-comment-face fontified t) 908 914 (face font-lock-comment-face fontified t) 914 915 (face font-lock-comment-face fontified t)) . 15750) (undo-tree-id353 . -915) (undo-tree-id354 . -207) (undo-tree-id355 . -111) (undo-tree-id356 . -101) (undo-tree-id357 . -153) (undo-tree-id358 . -321) (undo-tree-id359 . -915) (undo-tree-id360 . -915) (undo-tree-id361 . -785) (undo-tree-id362 . -915) (undo-tree-id363 . -915) (t 25717 65044 164302 600000)) nil (25717 65099 53174 900000) 0 nil])
([nil nil ((15750 . 15751) (t 25717 65099 96935 500000)) nil (25717 65120 101173 0) 0 nil])
([nil nil ((15751 . 15759)) nil (25717 65120 101171 300000) 0 nil])
([nil nil ((15751 . 15755) (15759 . 15760)) nil (25717 65120 101169 900000) 0 nil])
([nil nil ((15764 . 15765)) nil (25717 65120 101168 400000) 0 nil])
([nil nil ((15764 . 15768) 15765) nil (25717 65120 101167 200000) 0 nil])
([nil nil ((15769 . 15770)) nil (25717 65120 101165 500000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -15769) (undo-tree-id388 . -1) 15770) nil (25717 65120 101163 700000) 0 nil])
([nil nil ((15769 . 15771)) nil (25717 65120 101161 0) 0 nil])
([nil nil ((15771 . 15776)) nil (25717 65120 101159 400000) 0 nil])
([nil nil ((15776 . 15789)) nil (25717 65120 101157 900000) 0 nil])
([nil nil ((15789 . 15815) 15776) nil (25717 65120 101156 400000) 0 nil])
([nil nil ((15764 . 15790) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -15776) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("    ;*******
    ;*******" 0 4 (fontified t) 4 5 (face font-lock-comment-delimiter-face fontified t) 5 13 (face font-lock-comment-face fontified t) 13 17 (fontified t) 17 18 (face font-lock-comment-delimiter-face fontified t) 18 25 (face font-lock-comment-face fontified t)) . -15777) (undo-tree-id383 . -12) (undo-tree-id384 . -12) (undo-tree-id385 . -25) (undo-tree-id386 . -12) (undo-tree-id387 . -25) 15789) nil (25717 65120 101153 900000) 0 nil])
([nil nil ((15751 . 15777) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -15763) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . 1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("    ;*******
    ;*******" 0 4 (fontified t) 4 5 (face font-lock-comment-delimiter-face fontified t) 5 13 (face font-lock-comment-face fontified t) 13 17 (fontified t) 17 18 (face font-lock-comment-delimiter-face fontified t) 18 25 (face font-lock-comment-face fontified t)) . -15764) (undo-tree-id371 . -12) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -25) (undo-tree-id375 . -25) 15776) nil (25717 65120 101137 0) 0 nil])
([nil nil ((16295 . 16522) (t 25717 65120 141263 300000)) nil (25717 65442 12483 300000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -16507) (16499 . 16507) (#("    " 0 4 (fontified nil)) . -16463) (16455 . 16463) (#("    " 0 4 (fontified nil)) . -16387) (16379 . 16387) (#("    " 0 4 (fontified nil)) . -16354) (16346 . 16354) (#("    " 0 4 (fontified nil)) . -16304) (16296 . 16304) 16310) nil (25717 65442 12480 800000) 0 nil])
([nil nil ((16373 . 16378)) nil (25717 65442 12477 800000) 0 nil])
([nil nil ((16458 . 16463)) nil (25717 65442 12476 100000) 0 nil])
([nil nil ((#("original" 0 8 (fontified t)) . -16473) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -1) 16481) nil (25717 65442 12474 200000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 18) (16518 . 16519) (apply deactivate-cursor-after-undo 18) (16477 . 16478) (apply activate-cursor-for-undo 18) (16516 . 16517) (apply deactivate-cursor-after-undo 18) (16476 . 16477) (apply activate-cursor-for-undo 18) (16514 . 16515) (apply deactivate-cursor-after-undo 18) (16475 . 16476) (apply activate-cursor-for-undo 18) (16512 . 16513) (apply deactivate-cursor-after-undo 18) (16474 . 16475) (apply activate-cursor-for-undo 18) (16510 . 16511) (#("original" 0 8 (fontified t)) . -16510) (apply deactivate-cursor-after-undo 18) (16473 . 16474)) nil (25717 65442 12456 300000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 20) (16544 . 16545) (apply deactivate-cursor-after-undo 20) (16498 . 16499) (apply activate-cursor-for-undo 20) (16542 . 16543) (apply deactivate-cursor-after-undo 20) (16497 . 16498) (apply activate-cursor-for-undo 20) (16540 . 16541) (apply deactivate-cursor-after-undo 20) (16496 . 16497) (apply activate-cursor-for-undo 20) (16538 . 16539) (apply deactivate-cursor-after-undo 20) (16495 . 16496) (apply activate-cursor-for-undo 20) (16536 . 16537) (apply deactivate-cursor-after-undo 20) (16494 . 16495)) nil (25717 65442 12446 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16295) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("        ; Get the original position of the window" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 49 (face font-lock-comment-face fontified t)) . 16296) (undo-tree-id394 . -4) 16300 (t 25717 65442 51570 400000)) nil (25717 65450 735128 600000) 0 nil])
([nil nil ((16290 . 16294) (#("    " 0 4 (fontified nil)) . 16290) (16294 . 16294) (16295 . 16296) (t 25717 65450 779739 500000)) nil (25717 65463 834690 900000) 0 nil])
([nil nil ((16296 . 16297)) nil (25717 65463 834688 400000) 0 nil])
([nil nil ((16296 . 16304) 16297) nil (25717 65463 834686 800000) 0 nil])
([nil nil ((16305 . 16326)) nil (25717 65463 834684 900000) 0 nil])
([nil nil ((16326 . 16347)) nil (25717 65463 834682 900000) 0 nil])
([nil nil ((16347 . 16362)) nil (25717 65463 834676 500000) 0 nil])
([nil nil ((16528 . 16536) (#("        " 0 8 (fontified nil)) . 16528) (16536 . 16536) (16573 . 16574) (t 25717 65463 884842 100000)) nil (25718 38 612679 600000) 0 nil])
([nil nil ((16574 . 16577)) nil (25718 38 612676 600000) 0 nil])
([nil nil ((16574 . 16582) 16577) nil (25718 38 612674 300000) 0 nil])
([nil nil ((16585 . 16587)) nil (25718 38 612672 500000) 0 nil])
([nil nil ((16587 . 16605) (#("
        ; Convert" 0 1 (fontified t) 1 9 (fontified t) 9 11 (face font-lock-comment-delimiter-face fontified t) 11 18 (face font-lock-comment-face fontified t)) . 16587)) nil (25718 38 612670 900000) 0 nil])
([nil nil ((#("if ()" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 5 (fontified t)) . 16582) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) 16587) nil (25718 38 612668 700000) 0 nil])
([nil nil ((16582 . 16587)) nil (25718 38 612664 300000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . -16586) (undo-tree-id404 . -1) 16587) nil (25718 38 612662 400000) 0 nil])
([nil nil ((16586 . 16591)) nil (25718 38 612659 500000) 0 nil])
([nil nil ((16591 . 16594)) nil (25718 38 612657 900000) 0 nil])
([nil nil ((16591 . 16600) (#("ori" 0 3 (fontified t)) . -16591) (undo-tree-id403 . -3) 16594) nil (25718 38 612656 0) 0 nil])
([nil nil ((16600 . 16607)) nil (25718 38 612653 300000) 0 nil])
([nil nil ((16603 . 16609) (#("test" 0 4 (fontified t)) . -16603) (undo-tree-id402 . -4) 16607) nil (25718 38 612651 400000) 0 nil])
([nil nil ((16589 . 16590)) nil (25718 38 612648 300000) 0 nil])
([nil nil ((16610 . 16647)) nil (25718 38 612646 700000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . 16646) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1)) nil (25718 38 612644 700000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 23) (16624 . 16625) (#("X" 0 1 (fontified nil)) . 16624) (undo-tree-id395 . -1) (apply deactivate-cursor-after-undo 23) (apply activate-cursor-for-undo 22) (16637 . 16638) (#("X" 0 1 (fontified nil)) . 16637) (undo-tree-id396 . -1) (apply deactivate-cursor-after-undo 22) (16646 . 16647)) nil (25718 38 612631 300000) 0 nil])
([nil nil ((16611 . 16619) (#("        " 0 8 (fontified nil)) . 16611) (16619 . 16619) (16647 . 16648) (t 25718 38 661263 500000)) nil (25718 96 156460 900000) 0 nil])
([nil nil ((16648 . 16650)) nil (25718 96 156458 200000) 0 nil])
([nil nil ((16648 . 16656) 16650) nil (25718 96 156456 300000) 0 nil])
([nil nil ((16660 . 16669) (16658 . 16661)) nil (25718 96 156454 700000) 0 nil])
([nil nil ((16611 . 16619) (#("        " 0 8 (fontified nil)) . 16611) (16619 . 16619) (16647 . 16648)) nil (25718 96 156452 500000) 0 nil])
([nil nil ((16648 . 16650)) nil (25718 96 156450 700000) 0 nil])
([nil nil ((16650 . 16659)) nil (25718 96 156449 100000) 0 nil])
([nil nil ((16648 . 16656) 16659) nil (25718 96 156447 600000) 0 nil])
([nil nil ((16667 . 16677)) nil (25718 96 156446 100000) 0 nil])
([nil nil ((16699 . 16701)) nil (25718 96 156444 700000) 0 nil])
([nil nil ((16701 . 16705)) nil (25718 96 156443 300000) 0 nil])
([nil nil ((16699 . 16708) (#("test_s" 0 6 (fontified t)) . -16699) (undo-tree-id409 . -6) 16705) nil (25718 96 156441 700000) 0 nil])
([nil nil ((16708 . 16711)) nil (25718 96 156438 600000) 0 nil])
([nil nil ((16711 . 16712)) nil (25718 96 156437 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16729 . 16730) (nil fontified nil 16721 . 16730) (nil fontified nil 16720 . 16721) (nil fontified nil 16719 . 16720) (nil fontified nil 16712 . 16719) (16712 . 16730)) nil (25718 96 156435 800000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . 16717)) nil (25718 96 156433 200000) 0 nil])
([nil nil ((16717 . 16718)) nil (25718 96 156431 500000) 0 nil])
([nil nil ((16731 . 16734)) nil (25718 96 156430 100000) 0 nil])
([nil nil ((16678 . 16686) (#("        " 0 8 (fontified nil)) . 16678) (16686 . 16686) (16733 . 16743)) nil (25718 96 156428 300000) 0 nil])
([nil nil ((16734 . 16737)) nil (25718 96 156426 100000) 0 nil])
([nil nil ((16734 . 16739) (#("bre" 0 3 (fontified t)) . -16734) (undo-tree-id408 . -3) 16737) nil (25718 96 156423 500000) 0 nil])
([nil nil ((16734 . 16746) 16739) nil (25718 96 156402 500000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 25) (#(":" 0 1 (face font-lock-builtin-face fontified t)) . -16625) (apply deactivate-cursor-after-undo 25) (#(":" 0 1 (face font-lock-builtin-face fontified t)) . -16589) (undo-tree-id410 . -1) 16590 (t 25718 96 211396 0)) nil (25718 128 731693 0) 0 nil])
([nil nil ((#("text" 0 4 (fontified t)) . -16688) (undo-tree-id424 . -3) (undo-tree-id425 . -4) (undo-tree-id426 . 4) (undo-tree-id427 . -4) (undo-tree-id428 . -1) (t 25718 128 776106 900000)) nil (25718 213 98241 600000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 29) (16719 . 16727) (#(" " 0 1 (fontified nil)) . 16718) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (16689 . 16701) (#("            " 0 12 (fontified nil)) . 16689) (16701 . 16701) (16719 . 16720) (#("text" 0 4 (fontified nil)) . -16719) (apply deactivate-cursor-after-undo 29) (16689 . 16701) (16676 . 16684) (#("        " 0 8 (fontified nil)) . 16676) (16684 . 16684) (16688 . 16689)) nil (25718 213 98234 800000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 29) (#("
" 0 1 (fontified nil)) . -16717) (undo-tree-id418 . 1) (apply deactivate-cursor-after-undo 29) (#("
" 0 1 (fontified t)) . -16688) (undo-tree-id419 . -1) (undo-tree-id420 . 1) (undo-tree-id421 . -1) 16689) nil (25718 213 98228 600000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 29) (#(" " 0 1 (fontified nil)) . 16716) (undo-tree-id415 . 1) (apply deactivate-cursor-after-undo 29) (#(" " 0 1 (fontified t)) . 16688) (undo-tree-id416 . 1) (undo-tree-id417 . -1)) nil (25718 213 98220 100000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . -16688) (undo-tree-id412 . -11) (undo-tree-id413 . 11) (undo-tree-id414 . -11) 16701) nil (25718 213 98214 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 29) (16712 . 16713) (apply deactivate-cursor-after-undo 29) (16691 . 16692) (apply activate-cursor-for-undo 29) (16710 . 16711) (apply deactivate-cursor-after-undo 29) (16690 . 16691) (apply activate-cursor-for-undo 29) (16708 . 16709) (apply deactivate-cursor-after-undo 29) (16689 . 16690) (apply activate-cursor-for-undo 29) (16706 . 16707) (#("       " 0 7 (fontified nil)) . -16706) (undo-tree-id411 . 7) (apply deactivate-cursor-after-undo 29) (16688 . 16689)) nil (25718 213 98204 900000) 0 nil])
([nil nil ((16709 . 16710) (t 25718 213 138899 600000)) nil (25718 242 948012 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 31) (16648 . 16649) (16629 . 16630) (apply deactivate-cursor-after-undo 31) (16610 . 16611) (16591 . 16592) (t 25718 243 2205 600000)) nil (25718 350 118535 600000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 31) (16634 . 16635) (apply deactivate-cursor-after-undo 31) (16593 . 16594) (apply activate-cursor-for-undo 31) (16632 . 16633) (apply deactivate-cursor-after-undo 31) (16592 . 16593) (apply activate-cursor-for-undo 31) (16630 . 16631) (apply deactivate-cursor-after-undo 31) (16591 . 16592)) nil (25718 350 118524 900000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 33) (16631 . 16632) (apply deactivate-cursor-after-undo 33) (16589 . 16590) (t 25718 350 176774 200000)) nil (25718 362 369831 300000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -16097) (undo-tree-id429 . -1) 16098 (t 25718 362 403361 600000)) nil (25719 29855 557063 500000) 0 nil])
([nil nil ((16097 . 16098)) nil (25719 29855 557041 100000) 0 nil])
([nil nil ((17280 . 17756) (t 25719 29855 583510 700000)) nil (25731 34976 168839 600000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -17711) (17707 . 17711) (#("            " 0 12 (fontified nil)) . -17701) (17693 . 17701) (#("        " 0 8 (fontified nil)) . -17645) (17641 . 17645) (#("        " 0 8 (fontified nil)) . -17619) (17615 . 17619) (#("        " 0 8 (fontified nil)) . -17581) (17577 . 17581) (#("        " 0 8 (fontified nil)) . -17543) (17539 . 17543) (#("        " 0 8 (fontified nil)) . -17501) (17497 . 17501) (#("        " 0 8 (fontified nil)) . -17459) (17455 . 17459) (#("        " 0 8 (fontified nil)) . -17382) (17378 . 17382) (#("        " 0 8 (fontified nil)) . -17348) (17344 . 17348) (#("        " 0 8 (fontified nil)) . -17285) (17281 . 17285) 17291) nil (25731 34976 168838 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17712) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("    ; Reset the window to the original position
    DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", originalX, \"Int\", originalY, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10" 0 4 (fontified t) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 48 (fontified t face font-lock-comment-face) 48 52 (fontified t) 52 59 (fontified t face font-lock-function-name-face) 59 60 (fontified t) 60 74 (fontified t face font-lock-string-face) 74 75 (fontified t face font-lock-builtin-face) 75 76 (fontified t) 76 81 (fontified t face font-lock-string-face) 81 82 (fontified t face font-lock-builtin-face) 82 103 (fontified t) 103 104 (fontified t face font-lock-builtin-face) 104 105 (fontified t) 105 110 (fontified t face font-lock-string-face) 110 111 (fontified t face font-lock-builtin-face) 111 113 (fontified t) 113 114 (fontified t face font-lock-builtin-face) 114 115 (fontified t) 115 120 (fontified t face font-lock-string-face) 120 121 (fontified t face font-lock-builtin-face) 121 131 (fontified t) 131 132 (fontified t face font-lock-builtin-face) 132 133 (fontified t) 133 138 (fontified t face font-lock-string-face) 138 139 (fontified t face font-lock-builtin-face) 139 149 (fontified t) 149 150 (fontified t face font-lock-builtin-face) 150 151 (fontified t) 151 156 (fontified t face font-lock-string-face) 156 157 (fontified t face font-lock-builtin-face) 157 159 (fontified t) 159 160 (fontified t face font-lock-builtin-face) 160 161 (fontified t) 161 166 (fontified t face font-lock-string-face) 166 167 (fontified t face font-lock-builtin-face) 167 169 (fontified t) 169 170 (fontified t face font-lock-builtin-face) 170 171 (fontified t) 171 177 (fontified t face font-lock-string-face) 177 178 (fontified t face font-lock-builtin-face) 178 186 (fontified t) 186 188 (fontified t face font-lock-comment-delimiter-face) 188 249 (fontified t face font-lock-comment-face)) . 17713) (undo-tree-id11 . -57) (undo-tree-id12 . -57) (undo-tree-id13 . -48) (undo-tree-id14 . -9) (undo-tree-id15 . -10) (undo-tree-id16 . -9) (undo-tree-id17 . -57) 17770) nil (25731 34976 168835 500000) 0 nil])
([nil nil ((17692 . 17942)) nil (25731 34976 168822 200000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -17753) (17745 . 17753) (#("    " 0 4 (fontified nil)) . -17701) (17693 . 17701) 17721) nil (25731 34976 168820 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -17950) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("        break" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face)) . 17951) (undo-tree-id3 . -13) 17964) nil (25731 34976 168814 200000) 0 nil])
([nil nil ((17345 . 17364) (17343 . 17346) (t 25731 34976 199982 200000)) nil (25731 35000 603941 0) 0 nil])
([nil nil ((17364 . 17384)) nil (25731 35000 603940 0) 0 nil])
([nil nil ((#("(this duplicate code should be collapsed)" 0 41 (fontified t face font-lock-comment-face)) . 17344) (undo-tree-id22 . -41) (undo-tree-id23 . 1) (undo-tree-id24 . -41) (undo-tree-id25 . 41) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -41) (undo-tree-id29 . -41) 17385) nil (25731 35000 603939 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -17343) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 17344) nil (25731 35000 603935 500000) 0 nil])
([nil nil ((17281 . 17285) (#("    " 0 4 (fontified nil)) . 17281) (17285 . 17285) (17343 . 17344)) nil (25731 35000 603923 900000) 0 nil])
([nil nil ((17344 . 17345)) nil (25731 35000 603922 700000) 0 nil])
([nil nil ((17344 . 17348) 17345) nil (25731 35000 603922 0) 0 nil])
([nil nil ((17349 . 17350)) nil (25731 35000 603921 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17390 . 17391) (nil fontified nil 17350 . 17391) (17350 . 17391)) nil (25731 35000 603917 100000) 0 nil])
([nil nil ((17281 . 17329) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -17343) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("    ; (this duplicate code should be collapsed)" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 46 (fontified t face font-lock-comment-face) 46 47 (fontified t rear-nonsticky t face font-lock-comment-face)) . -17344) (undo-tree-id38 . -47) (undo-tree-id39 . -6) (undo-tree-id40 . 1) (undo-tree-id41 . -47) (undo-tree-id42 . 41) (undo-tree-id43 . -7) (undo-tree-id44 . -6) (undo-tree-id45 . -7) 17391 (t 25731 35000 635013 300000)) nil (25731 35005 62936 400000) 0 nil])
([nil nil ((17696 . 17697) (t 25731 35005 96614 700000)) nil (25731 35011 559058 600000) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4077) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4071) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4014) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3926) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3887) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3864) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3858) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3818) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3801) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3795) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3766) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3708) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3702) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3664) 4142)) (t 25731 35011 589068 800000)) nil (25731 35163 895953 900000) 0 nil])
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 3659)) (t 25731 35163 923396 300000)) nil (25731 35246 37345 200000) 0 nil])
([nil nil ((apply 32 3659 4110 undo--wrap-and-run-primitive-undo 3659 4110 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4098) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4077) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4071) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4014) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3926) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3887) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3864) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3858) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3818) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3801) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3795) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3766) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3708) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3702) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3664) 4142))) nil (25731 35246 37340 300000) 0 nil])
([nil nil ((apply -32 3659 4143 undo--wrap-and-run-primitive-undo 3659 4143 ((4128 . 4130) (4105 . 4107) (4097 . 4099) (4038 . 4040) (3987 . 3989) (3946 . 3948) (3905 . 3907) (3880 . 3882) (3872 . 3874) (3830 . 3832) (3811 . 3813) (3803 . 3805) (3772 . 3774) (3712 . 3714) (3704 . 3706) (3664 . 3666) 4110)) (t 25731 35246 71867 400000)) nil (25731 35552 181590 400000) 0 nil])
([nil nil ((22488 . 22490) (t 25731 35552 213887 300000)) nil (25732 60852 308365 400000) 0 nil])
([nil nil ((22490 . 22501)) nil (25732 60852 308364 600000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -22499) (undo-tree-id55 . -1) (#(")" 0 1 (fontified t)) . 22500)) nil (25732 60852 308363 700000) 0 nil])
([nil nil ((22499 . 22500)) nil (25732 60852 308362 700000) 0 nil])
([nil nil ((22500 . 22502)) nil (25732 60852 308361 800000) 0 nil])
([nil nil ((22502 . 22505)) nil (25732 60852 308361 200000) 0 nil])
([nil nil ((22504 . 22506)) nil (25732 60852 308360 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22518 . 22519) (nil fontified nil 22505 . 22519) (22505 . 22519)) nil (25732 60852 308359 900000) 0 nil])
([nil nil ((22505 . 22509) 22519) nil (25732 60852 308359 400000) 0 nil])
([nil nil ((22523 . 22526)) nil (25732 60852 308358 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22541 . 22542) (nil fontified nil 22529 . 22542) (nil fontified nil 22527 . 22529) (nil fontified nil 22526 . 22527) (22526 . 22542)) nil (25732 60852 308357 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -22523) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("=" 0 1 (fontified t face font-lock-builtin-face)) . -22524) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t)) . -22525) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 22526) nil (25732 60852 308354 0) 0 nil])
([nil nil ((22539 . 22765) (t 25732 60852 334774 900000)) nil (25732 60894 775139 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -22764) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 22765) nil (25732 60948 248720 400000) 0 nil])
([nil nil ((apply 8 22584 22756 undo--wrap-and-run-primitive-undo 22584 22756 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22715) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22670) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22629) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22588) 22718))) nil (25732 60958 923959 500000) 0 nil] [nil nil ((#("rX := CurrentMonitor[2]
    ; CurrentMonitorY := CurrentMonitor[3]
    ; CurrentMonitorWidth := CurrentMonitor[4]
    ; CurrentMonitorHeight := CurrentMonitor[5]
}" 0 3 (fontified t face font-lock-comment-face) 3 5 (fontified t face font-lock-comment-face) 5 24 (fontified t face font-lock-comment-face) 24 28 (fontified t) 28 30 (fontified t face font-lock-comment-delimiter-face) 30 46 (fontified t face font-lock-comment-face) 46 48 (fontified t face font-lock-comment-face) 48 67 (fontified t face font-lock-comment-face) 67 71 (fontified t) 71 73 (fontified t face font-lock-comment-delimiter-face) 73 93 (fontified t face font-lock-comment-face) 93 95 (fontified t face font-lock-comment-face) 95 114 (fontified t face font-lock-comment-face) 114 118 (fontified t) 118 120 (fontified t face font-lock-comment-delimiter-face) 120 141 (fontified t face font-lock-comment-face) 141 143 (fontified t face font-lock-comment-face) 143 161 (fontified t face font-lock-comment-face) 161 162 (fontified t face font-lock-comment-face) 162 163 (fontified t)) . -22603) (undo-tree-id58 . -163) (undo-tree-id59 . -161) (undo-tree-id60 . 67) (undo-tree-id61 . -110) (undo-tree-id62 . -115) (undo-tree-id63 . -2) (undo-tree-id64 . -162) (undo-tree-id65 . -1) (undo-tree-id66 . 19) (undo-tree-id67 . -158) (undo-tree-id68 . -163) (undo-tree-id69 . 1) (undo-tree-id70 . -163)) ((22603 . 22766)) (25732 60947 571850 0) 0 nil] [nil nil ((apply 8 22584 22756 undo--wrap-and-run-primitive-undo 22584 22756 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22715) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22670) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22629) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -22588) 22603)) (t 25732 60894 793927 500000)) ((apply -8 22584 22764 undo--wrap-and-run-primitive-undo 22584 22764 ((22588 . 22590) (22629 . 22631) (22670 . 22672) (22715 . 22717) 22489)) (t 25732 60907 498547 600000)) (25732 60907 460852 100000) 0 nil] [nil nil ((apply -8 22603 22773 undo--wrap-and-run-primitive-undo 22603 22773 (("               " . 22604) ("    " . 22603) (22746 . 22748) (22697 . 22699) (22652 . 22654) (22607 . 22609) (22603 . 22622))) (t 25732 60894 793927 500000)) ((apply 8 22603 22765 undo--wrap-and-run-primitive-undo 22603 22765 ((#("                   " 18 19 (fontified t face font-lock-comment-face)) . 22603) (#("; " 0 1 (fontified t face font-lock-comment-face)) . 22607) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 22652) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 22697) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 22746) (22603 . 22607) (22604 . 22619) 22603))) (25732 60900 447127 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22504) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (t 25732 60958 950689 800000)) nil (25732 60979 298032 0) 0 nil])
([nil nil ((22603 . 22604)) ((#("P" 0 1 (fontified t face font-lock-comment-face)) . 22603) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . -1)) (25732 60947 571768 100000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (fontified t)) . -22502) (undo-tree-id74 . -1) 22503) nil (25732 60979 298029 300000) 0 nil])
nil
([nil nil ((22502 . 22503)) nil (25732 60979 298018 600000) 0 nil])
([nil nil ((22505 . 22509) (#("    " 0 4 (fontified nil)) . 22505) (22509 . 22509) (22504 . 22505)) nil (25732 61023 234619 500000) 0 nil])
([nil nil ((22711 . 22715) (#("    " 0 4 (fontified nil)) . 22711) (22715 . 22715) (22756 . 22757) (t 25732 60979 319368 300000)) nil (25732 61058 934206 200000) 0 nil] [nil nil ((22757 . 22758) (22711 . 22715) (#("    " 0 4 (fontified nil)) . 22711) (22715 . 22715) (22756 . 22757) (t 25732 60979 319368 300000)) ((#("
" 0 1 (fontified nil)) . 22756) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (22711 . 22715) (#("    " 0 4 (fontified t)) . 22711) (#("
" 0 1 (fontified t)) . 22757) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1)) (25732 61021 866133 200000) 0 nil])
([nil nil ((22757 . 22931)) ((#("
    CurrentMonitorX := CurrentMonitor[2]
    CurrentMonitorY := CurrentMonitor[3]
    CurrentMonitorWidth := CurrentMonitor[4]
    CurrentMonitorHeight := CurrentMonitor[5]
" 0 1 (fontified t) 1 5 (fontified t) 5 18 (fontified t) 18 19 (fontified t) 19 21 (fontified t) 21 23 (fontified t face font-lock-builtin-face) 23 24 (fontified t) 24 38 (fontified t) 38 42 (fontified t) 42 46 (fontified t) 46 60 (fontified t) 60 62 (fontified t) 62 64 (fontified t face font-lock-builtin-face) 64 65 (fontified t) 65 79 (fontified t) 79 83 (fontified t) 83 87 (fontified t) 87 101 (fontified t) 101 107 (fontified t) 107 109 (fontified t face font-lock-builtin-face) 109 110 (fontified t) 110 124 (fontified t) 124 128 (fontified t) 128 132 (fontified t) 132 146 (fontified t) 146 153 (fontified t) 153 155 (fontified t face font-lock-builtin-face) 155 156 (fontified t) 156 170 (fontified t) 170 174 (fontified t)) . 22757) (undo-tree-id129 . -19) (undo-tree-id130 . -5) (undo-tree-id131 . -1) (undo-tree-id132 . -19) (undo-tree-id133 . -19) (undo-tree-id134 . -19) (undo-tree-id135 . -19) (undo-tree-id136 . -19) (undo-tree-id137 . -19) (undo-tree-id138 . -19) (undo-tree-id139 . -19) (undo-tree-id140 . -24) (undo-tree-id141 . -25) (undo-tree-id142 . -24) (undo-tree-id143 . -38) (undo-tree-id144 . -46) (undo-tree-id145 . -47) (undo-tree-id146 . -46) (undo-tree-id147 . -60) (undo-tree-id148 . -65) (undo-tree-id149 . -66) (undo-tree-id150 . -65) (undo-tree-id151 . -79) (undo-tree-id152 . -87) (undo-tree-id153 . -88) (undo-tree-id154 . -87) (undo-tree-id155 . -101) (undo-tree-id156 . -110) (undo-tree-id157 . -111) (undo-tree-id158 . -110) (undo-tree-id159 . -124) (undo-tree-id160 . -132) (undo-tree-id161 . -133) (undo-tree-id162 . -132) (undo-tree-id163 . -146) (undo-tree-id164 . -156) (undo-tree-id165 . -157) (undo-tree-id166 . -156) (undo-tree-id167 . -170) (undo-tree-id168 . -1) (undo-tree-id169 . -19) (undo-tree-id170 . -20) (undo-tree-id171 . -19) (undo-tree-id172 . -20) (t 25732 61033 727580 300000)) (25732 61061 114952 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22913 . 22914) (nil fontified nil 22895 . 22914) (nil fontified nil 22893 . 22895) (nil fontified nil 22872 . 22893) (nil fontified nil 22868 . 22872) (nil fontified nil 22849 . 22868) (nil fontified nil 22847 . 22849) (nil fontified nil 22827 . 22847) (nil fontified nil 22823 . 22827) (nil fontified nil 22804 . 22823) (nil fontified nil 22802 . 22804) (nil fontified nil 22786 . 22802) (nil fontified nil 22782 . 22786) (nil fontified nil 22763 . 22782) (nil fontified nil 22761 . 22763) (nil fontified nil 22758 . 22761) (22758 . 22914)) ((#("rX := CurrentMonitor[2]
    CurrentMonitorY := CurrentMonitor[3]
    CurrentMonitorWidth := CurrentMonitor[4]
    CurrentMonitorHeight := CurrentMonitor[5]
" 0 3 (fontified nil) 3 5 (fontified nil face font-lock-builtin-face) 5 24 (fontified nil) 24 28 (fontified nil) 28 44 (fontified nil) 44 46 (fontified nil face font-lock-builtin-face) 46 65 (fontified nil) 65 69 (fontified nil) 69 89 (fontified nil) 89 91 (fontified nil face font-lock-builtin-face) 91 110 (fontified nil) 110 114 (fontified nil) 114 135 (fontified nil) 135 137 (fontified nil face font-lock-builtin-face) 137 155 (fontified nil) 155 156 (fontified nil rear-nonsticky nil)) . 22758) (undo-tree-id83 . -156) (nil fontified t 22763 . 22782) (nil fontified t 22804 . 22823) (nil fontified t 22849 . 22868) (nil rear-nonsticky t 22913 . 22914)) (25732 61021 866003 200000) 0 nil] [nil nil ((22758 . 22763)) ((#("SubTo" 0 5 (fontified t)) . 22758) (undo-tree-id82 . -5)) (25732 61009 424781 700000) 0 nil])
([nil nil ((#("CurrentMonitor" 0 13 (fontified t) 13 14 (fontified t)) . -22762) (undo-tree-id173 . -14) (undo-tree-id174 . -14) (undo-tree-id175 . -14) (undo-tree-id176 . -14) (undo-tree-id177 . -14) (undo-tree-id178 . -14) (undo-tree-id179 . -14) (undo-tree-id180 . -14) (undo-tree-id181 . -14) (undo-tree-id182 . -14) (undo-tree-id183 . -14) (undo-tree-id184 . -14) (undo-tree-id185 . -14) (undo-tree-id186 . -14) (undo-tree-id187 . -14) (undo-tree-id188 . -14) (t 25732 61033 727580 300000)) nil (25732 61083 177997 100000) 0 nil] [nil nil ((#("CurrentMonitor" 0 13 (fontified t) 13 14 (fontified t)) . 22762) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . -14) (undo-tree-id112 . -14) (undo-tree-id113 . -14) (undo-tree-id114 . -14) (undo-tree-id115 . -14) (undo-tree-id116 . -14) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (t 25732 61033 727580 300000)) ((22762 . 22776)) (25732 61057 633953 300000) 0 nil] [nil nil ((#("CurrentMonitor" 0 13 (fontified t) 13 14 (fontified t)) . 22762) (undo-tree-id94 . -14) (undo-tree-id95 . -14) (undo-tree-id96 . -14) 22776 (t 25732 61033 727580 300000)) ((22762 . 22776)) (25732 61046 552504 500000) 0 nil])
nil
([nil nil ((22758 . 22768) (#("SubTo" 0 5 (fontified t)) . -22758) (undo-tree-id79 . -5) 22763) ((22758 . 22763) (#("SubTopLeft" 0 10 (fontified t)) . 22758) (undo-tree-id81 . -10)) (25732 61008 977936 500000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 15) (22886 . 22887) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22845 . 22846) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22808 . 22809) (apply deactivate-cursor-after-undo 13) (22771 . 22772) (apply activate-cursor-for-undo 15) (22882 . 22883) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22842 . 22843) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22806 . 22807) (apply deactivate-cursor-after-undo 13) (22770 . 22771) (apply activate-cursor-for-undo 15) (22878 . 22879) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22839 . 22840) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22804 . 22805) (apply deactivate-cursor-after-undo 13) (22769 . 22770) (apply activate-cursor-for-undo 15) (22874 . 22875) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22836 . 22837) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22802 . 22803) (apply deactivate-cursor-after-undo 13) (22768 . 22769) (apply activate-cursor-for-undo 15) (22870 . 22871) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22833 . 22834) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22800 . 22801) (apply deactivate-cursor-after-undo 13) (22767 . 22768) (apply activate-cursor-for-undo 15) (22866 . 22867) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22830 . 22831) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22798 . 22799) (apply deactivate-cursor-after-undo 13) (22766 . 22767) (apply activate-cursor-for-undo 15) (22862 . 22863) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22827 . 22828) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22796 . 22797) (apply deactivate-cursor-after-undo 13) (22765 . 22766) (apply activate-cursor-for-undo 15) (22858 . 22859) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22824 . 22825) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22794 . 22795) (apply deactivate-cursor-after-undo 13) (22764 . 22765) (apply activate-cursor-for-undo 15) (22854 . 22855) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22821 . 22822) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22792 . 22793) (apply deactivate-cursor-after-undo 13) (22763 . 22764) (apply activate-cursor-for-undo 15) (22850 . 22851) (#("CurrentMonitor" 0 14 (fontified t)) . -22850) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 14) (22818 . 22819) (#("CurrentMonitor" 0 14 (fontified t)) . -22818) (apply deactivate-cursor-after-undo 14) (apply activate-cursor-for-undo 13) (22790 . 22791) (#("CurrentMonitor" 0 14 (fontified t)) . -22790) (apply deactivate-cursor-after-undo 13) (22762 . 22763)) nil (25732 61083 177977 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 11) (22862 . 22863) (apply deactivate-cursor-after-undo 11) (apply activate-cursor-for-undo 10) (22846 . 22847) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (22832 . 22833) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 8) (22817 . 22818) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (22803 . 22804) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (22792 . 22793) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (22778 . 22779) (apply deactivate-cursor-after-undo 5) (22767 . 22768) (apply activate-cursor-for-undo 11) (22854 . 22855) (apply deactivate-cursor-after-undo 11) (apply activate-cursor-for-undo 10) (22839 . 22840) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (22826 . 22827) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 8) (22812 . 22813) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (22799 . 22800) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (22789 . 22790) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (22776 . 22777) (apply deactivate-cursor-after-undo 5) (22766 . 22767) (apply activate-cursor-for-undo 11) (22846 . 22847) (apply deactivate-cursor-after-undo 11) (apply activate-cursor-for-undo 10) (22832 . 22833) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (22820 . 22821) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 8) (22807 . 22808) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (22795 . 22796) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (22786 . 22787) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (22774 . 22775) (apply deactivate-cursor-after-undo 5) (22765 . 22766) (apply activate-cursor-for-undo 11) (22838 . 22839) (apply deactivate-cursor-after-undo 11) (apply activate-cursor-for-undo 10) (22825 . 22826) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (22814 . 22815) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 8) (22802 . 22803) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (22791 . 22792) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (22783 . 22784) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (22772 . 22773) (apply deactivate-cursor-after-undo 5) (22764 . 22765) (apply activate-cursor-for-undo 11) (22830 . 22831) (apply deactivate-cursor-after-undo 11) (apply activate-cursor-for-undo 10) (22818 . 22819) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 9) (22808 . 22809) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 8) (22797 . 22798) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (22787 . 22788) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (22780 . 22781) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 5) (22770 . 22771) (apply deactivate-cursor-after-undo 5) (22763 . 22764) (apply activate-cursor-for-undo 5) (22768 . 22769) (#("CurrentMonitor" 0 14 (fontified nil)) . 22768) (undo-tree-id102 . -14) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 6) (22790 . 22791) (#("CurrentMonitor" 0 14 (fontified nil)) . 22790) (undo-tree-id103 . -14) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (22809 . 22810) (#("CurrentMonitor" 0 14 (fontified t)) . 22809) (undo-tree-id104 . -14) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 8) (22831 . 22832) (#("CurrentMonitor" 0 14 (fontified nil)) . 22831) (undo-tree-id105 . -14) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 9) (22854 . 22855) (#("CurrentMonitor" 0 14 (fontified t)) . 22854) (undo-tree-id106 . -14) (apply deactivate-cursor-after-undo 9) (apply activate-cursor-for-undo 10) (22876 . 22877) (#("CurrentMonitor" 0 14 (fontified nil)) . 22876) (undo-tree-id107 . -14) (apply deactivate-cursor-after-undo 10) (apply activate-cursor-for-undo 11) (22900 . 22901) (#("CurrentMonitor" 0 14 (fontified t)) . 22900) (undo-tree-id108 . -14) (apply deactivate-cursor-after-undo 11) (22762 . 22763)) ((#("S" 0 1 (fontified nil)) . 22762) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (22900 . 22914) (#("S" 0 1 (fontified nil)) . 22900) (undo-tree-id123 . -1) (22876 . 22890) (#("S" 0 1 (fontified nil)) . 22876) (22854 . 22868) (#("S" 0 1 (fontified nil)) . 22854) (22831 . 22845) (#("S" 0 1 (fontified nil)) . 22831) (22809 . 22823) (#("S" 0 1 (fontified nil)) . 22809) (22790 . 22804) (#("S" 0 1 (fontified nil)) . 22790) (22768 . 22782) (#("S" 0 1 (fontified nil)) . 22768) (#("u" 0 1 (fontified nil)) . 22763) (undo-tree-id124 . -1) (#("u" 0 1 (fontified nil)) . 22770) (#("u" 0 1 (fontified nil)) . 22780) (#("u" 0 1 (fontified nil)) . 22787) (#("u" 0 1 (fontified nil)) . 22797) (#("u" 0 1 (fontified nil)) . 22808) (#("u" 0 1 (fontified nil)) . 22818) (#("u" 0 1 (fontified nil)) . 22830) (#("b" 0 1 (fontified nil)) . 22764) (undo-tree-id125 . -1) (#("b" 0 1 (fontified nil)) . 22772) (#("b" 0 1 (fontified nil)) . 22783) (#("b" 0 1 (fontified nil)) . 22791) (#("b" 0 1 (fontified nil)) . 22802) (#("b" 0 1 (fontified nil)) . 22814) (#("b" 0 1 (fontified nil)) . 22825) (#("b" 0 1 (fontified nil)) . 22838) (#("T" 0 1 (fontified nil)) . 22765) (undo-tree-id126 . -1) (#("T" 0 1 (fontified nil)) . 22774) (#("T" 0 1 (fontified nil)) . 22786) (#("T" 0 1 (fontified nil)) . 22795) (#("T" 0 1 (fontified nil)) . 22807) (#("T" 0 1 (fontified nil)) . 22820) (#("T" 0 1 (fontified nil)) . 22832) (#("T" 0 1 (fontified nil)) . 22846) (#("o" 0 1 (fontified nil)) . 22766) (undo-tree-id127 . -1) (#("o" 0 1 (fontified nil)) . 22776) (#("o" 0 1 (fontified nil)) . 22789) (#("o" 0 1 (fontified nil)) . 22799) (#("o" 0 1 (fontified nil)) . 22812) (#("o" 0 1 (fontified nil)) . 22826) (#("o" 0 1 (fontified nil)) . 22839) (#("o" 0 1 (fontified nil)) . 22854) (#("p" 0 1 (fontified nil)) . 22767) (undo-tree-id128 . -1) (#("p" 0 1 (fontified t)) . 22778) (#("p" 0 1 (fontified nil)) . 22792) (#("p" 0 1 (fontified t)) . 22803) (#("p" 0 1 (fontified nil)) . 22817) (#("p" 0 1 (fontified t)) . 22832) (#("p" 0 1 (fontified nil)) . 22846) (#("p" 0 1 (fontified t)) . 22862)) (25732 61057 633001 0) 0 nil])
([nil nil ((22762 . 22763)) ((#("S" 0 1 (fontified t)) . 22762) (undo-tree-id100 . -1) (undo-tree-id101 . -1)) (25732 61046 552382 600000) 0 nil] [nil nil ((22762 . 22764)) ((#("Su" 0 2 (fontified t)) . 22762) (undo-tree-id98 . -2) (undo-tree-id99 . -1)) (25732 61043 407519 400000) 0 nil])
([nil nil ((22768 . 22769)) ((#("X" 0 1 (fontified t)) . 22768) (undo-tree-id80 . -1)) (25732 61008 359120 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 19) (#("[2]" 0 3 (fontified t)) . 22791) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (#("[3]" 0 3 (fontified t)) . 22828) (undo-tree-id191 . -3) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (#("[4]" 0 3 (fontified t)) . 22869) (undo-tree-id192 . -3) (apply deactivate-cursor-after-undo 17) (#("[5]" 0 3 (fontified t)) . 22911) (undo-tree-id193 . -3) (undo-tree-id194 . 3) (undo-tree-id195 . -1) (undo-tree-id196 . 1) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (t 25732 61083 196696 500000)) nil (25732 61122 514206 100000) 0 nil])
nil
nil
([nil nil ((22764 . 22765)) ((#("b" 0 1 (fontified t)) . 22764) (undo-tree-id97 . -1)) (25732 61043 407441 800000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . -22768) (undo-tree-id78 . -1) 22769) ((22768 . 22769)) (25732 61008 359044 600000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 19) (nil rear-nonsticky nil 22791 . 22792) (nil fontified nil 22791 . 22792) (22791 . 22792) (apply deactivate-cursor-after-undo 19) (apply activate-cursor-for-undo 18) (nil rear-nonsticky nil 22825 . 22826) (nil fontified nil 22825 . 22826) (22825 . 22826) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (nil rear-nonsticky nil 22867 . 22868) (nil fontified nil 22863 . 22868) (22863 . 22868) (apply deactivate-cursor-after-undo 17) (nil rear-nonsticky nil 22907 . 22908) (nil fontified nil 22902 . 22908) (22902 . 22908)) nil (25732 61122 514184 300000) 0 nil])
nil
nil
([nil nil ((22870 . 22874) (t 25732 61122 548628 200000)) nil (25732 61137 821399 500000) 0 nil])
([nil nil ((22919 . 22922)) nil (25732 61137 821398 500000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -22921) (undo-tree-id199 . -1) 22922) nil (25732 61137 821396 900000) 0 nil])
([nil nil ((22921 . 22923)) nil (25732 61137 821383 300000) 0 nil])
([nil nil ((22924 . 22925) (22875 . 22879) (#("    " 0 4 (fontified nil)) . 22875) (22879 . 22879) (22923 . 22924) (t 25732 61137 849892 700000)) nil (25732 61204 345978 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22925)) nil (25732 61204 345978 100000) 0 nil])
([nil nil ((22925 . 22927)) nil (25732 61204 345977 400000) 0 nil])
([nil nil ((22925 . 22929) 22927) nil (25732 61204 345977 0) 0 nil])
([nil nil ((22931 . 22937)) nil (25732 61204 345976 400000) 0 nil])
([nil nil ((#("Activate" 0 8 (fontified t)) . -22929) (undo-tree-id211 . -8) (undo-tree-id212 . -8) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (undo-tree-id215 . -8) (undo-tree-id216 . -1) (undo-tree-id217 . -8)) nil (25732 61204 345975 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25699 . 25700) (nil fontified nil 25698 . 25700) (nil fontified nil 25644 . 25698) (nil fontified nil 25642 . 25644) (nil fontified nil 25638 . 25642) (nil fontified nil 25607 . 25638) (nil fontified nil 25605 . 25607) (nil fontified nil 25600 . 25605) (nil fontified nil 25599 . 25600) (nil fontified nil 25598 . 25599) (nil fontified nil 25594 . 25598) (nil fontified nil 25593 . 25594) (nil fontified nil 25532 . 25593) (nil fontified nil 25530 . 25532) (nil fontified nil 25522 . 25530) (nil fontified nil 25521 . 25522) (nil fontified nil 25515 . 25521) (nil fontified nil 25514 . 25515) (nil fontified nil 25513 . 25514) (nil fontified nil 25511 . 25513) (nil fontified nil 25510 . 25511) (nil fontified nil 25505 . 25510) (nil fontified nil 25504 . 25505) (nil fontified nil 25503 . 25504) (nil fontified nil 25501 . 25503) (nil fontified nil 25500 . 25501) (nil fontified nil 25495 . 25500) (nil fontified nil 25494 . 25495) (nil fontified nil 25493 . 25494) (nil fontified nil 25483 . 25493) (nil fontified nil 25482 . 25483) (nil fontified nil 25477 . 25482) (nil fontified nil 25476 . 25477) (nil fontified nil 25475 . 25476) (nil fontified nil 25465 . 25475) (nil fontified nil 25464 . 25465) (nil fontified nil 25459 . 25464) (nil fontified nil 25458 . 25459) (nil fontified nil 25457 . 25458) (nil fontified nil 25455 . 25457) (nil fontified nil 25454 . 25455) (nil fontified nil 25449 . 25454) (nil fontified nil 25448 . 25449) (nil fontified nil 25447 . 25448) (nil fontified nil 25426 . 25447) (nil fontified nil 25425 . 25426) (nil fontified nil 25420 . 25425) (nil fontified nil 25419 . 25420) (nil fontified nil 25418 . 25419) (nil fontified nil 25404 . 25418) (nil fontified nil 25403 . 25404) (nil fontified nil 25396 . 25403) (nil fontified nil 25388 . 25396) (nil fontified nil 25346 . 25388) (nil fontified nil 25345 . 25346) (nil fontified nil 25344 . 25345) (nil fontified nil 25336 . 25344) (nil fontified nil 25335 . 25336) (nil fontified nil 25322 . 25335) (nil fontified nil 25321 . 25322) (nil fontified nil 25313 . 25321) (nil fontified nil 25311 . 25313) (nil fontified nil 25300 . 25311) (nil fontified nil 25299 . 25300) (nil fontified nil 25289 . 25299) (nil fontified nil 25287 . 25289) (nil fontified nil 25283 . 25287) (nil fontified nil 25280 . 25283) (nil fontified nil 25279 . 25280) (nil fontified nil 25273 . 25279) (nil fontified nil 25271 . 25273) (nil fontified nil 25261 . 25271) (nil fontified nil 25248 . 25261) (nil fontified nil 25247 . 25248) (nil fontified nil 25236 . 25247) (nil fontified nil 25233 . 25236) (nil fontified nil 25232 . 25233) (nil fontified nil 25230 . 25232) (nil fontified nil 25223 . 25230) (nil fontified nil 25219 . 25223) (nil fontified nil 25210 . 25219) (nil fontified nil 25209 . 25210) (nil fontified nil 25198 . 25209) (nil fontified nil 25195 . 25198) (nil fontified nil 25194 . 25195) (nil fontified nil 25192 . 25194) (nil fontified nil 25185 . 25192) (nil fontified nil 25179 . 25185) (nil fontified nil 25174 . 25179) (nil fontified nil 25173 . 25174) (nil fontified nil 25172 . 25173) (nil fontified nil 25170 . 25172) (nil fontified nil 25169 . 25170) (nil fontified nil 25159 . 25169) (nil fontified nil 25153 . 25159) (nil fontified nil 25152 . 25153) (nil fontified nil 25150 . 25152) (nil fontified nil 25143 . 25150) (nil fontified nil 25137 . 25143) (nil fontified nil 25132 . 25137) (nil fontified nil 25131 . 25132) (nil fontified nil 25130 . 25131) (nil fontified nil 25128 . 25130) (nil fontified nil 25127 . 25128) (nil fontified nil 25117 . 25127) (nil fontified nil 25111 . 25117) (nil fontified nil 25110 . 25111) (nil fontified nil 25108 . 25110) (nil fontified nil 25101 . 25108) (nil fontified nil 25086 . 25101) (nil fontified nil 25085 . 25086) (nil fontified nil 25084 . 25085) (nil fontified nil 25083 . 25084) (nil fontified nil 25078 . 25083) (nil fontified nil 25077 . 25078) (nil fontified nil 25076 . 25077) (nil fontified nil 25055 . 25076) (nil fontified nil 25054 . 25055) (nil fontified nil 25049 . 25054) (nil fontified nil 25048 . 25049) (nil fontified nil 25047 . 25048) (nil fontified nil 25032 . 25047) (nil fontified nil 25031 . 25032) (nil fontified nil 25024 . 25031) (nil fontified nil 25015 . 25024) (nil fontified nil 25014 . 25015) (nil fontified nil 25004 . 25014) (nil fontified nil 24990 . 25004) (nil fontified nil 24986 . 24990) (nil fontified nil 24985 . 24986) (nil fontified nil 24929 . 24985) (nil fontified nil 24927 . 24929) (nil fontified nil 24923 . 24927) (nil fontified nil 24881 . 24923) (nil fontified nil 24879 . 24881) (nil fontified nil 24875 . 24879) (nil fontified nil 24874 . 24875) (nil fontified nil 24869 . 24874) (nil fontified nil 24866 . 24869) (nil fontified nil 24865 . 24866) (nil fontified nil 24860 . 24865) (nil fontified nil 24852 . 24860) (nil fontified nil 24816 . 24852) (nil fontified nil 24814 . 24816) (nil fontified nil 24806 . 24814) (nil fontified nil 24744 . 24806) (nil fontified nil 24742 . 24744) (nil fontified nil 24734 . 24742) (nil fontified nil 24733 . 24734) (nil fontified nil 24727 . 24733) (nil fontified nil 24726 . 24727) (nil fontified nil 24725 . 24726) (nil fontified nil 24723 . 24725) (nil fontified nil 24722 . 24723) (nil fontified nil 24717 . 24722) (nil fontified nil 24716 . 24717) (nil fontified nil 24715 . 24716) (nil fontified nil 24713 . 24715) (nil fontified nil 24712 . 24713) (nil fontified nil 24707 . 24712) (nil fontified nil 24706 . 24707) (nil fontified nil 24705 . 24706) (nil fontified nil 24699 . 24705) (nil fontified nil 24698 . 24699) (nil fontified nil 24693 . 24698) (nil fontified nil 24692 . 24693) (nil fontified nil 24691 . 24692) (nil fontified nil 24685 . 24691) (nil fontified nil 24684 . 24685) (nil fontified nil 24679 . 24684) (nil fontified nil 24678 . 24679) (nil fontified nil 24677 . 24678) (nil fontified nil 24675 . 24677) (nil fontified nil 24674 . 24675) (nil fontified nil 24669 . 24674) (nil fontified nil 24668 . 24669) (nil fontified nil 24667 . 24668) (nil fontified nil 24646 . 24667) (nil fontified nil 24645 . 24646) (nil fontified nil 24640 . 24645) (nil fontified nil 24639 . 24640) (nil fontified nil 24638 . 24639) (nil fontified nil 24624 . 24638) (nil fontified nil 24623 . 24624) (nil fontified nil 24616 . 24623) (nil fontified nil 24608 . 24616) (nil fontified nil 24586 . 24608) (nil fontified nil 24584 . 24586) (nil fontified nil 24570 . 24584) (nil fontified nil 24567 . 24570) (nil fontified nil 24566 . 24567) (nil fontified nil 24565 . 24566) (nil fontified nil 24557 . 24565) (nil fontified nil 24556 . 24557) (nil fontified nil 24545 . 24556) (nil fontified nil 24543 . 24545) (nil fontified nil 24523 . 24543) (nil fontified nil 24520 . 24523) (nil fontified nil 24519 . 24520) (nil fontified nil 24518 . 24519) (nil fontified nil 24510 . 24518) (nil fontified nil 24509 . 24510) (nil fontified nil 24498 . 24509) (nil fontified nil 24496 . 24498) (nil fontified nil 24482 . 24496) (nil fontified nil 24455 . 24482) (nil fontified nil 24453 . 24455) (nil fontified nil 24440 . 24453) (nil fontified nil 24439 . 24440) (nil fontified nil 24435 . 24439) (nil fontified nil 24434 . 24435) (nil fontified nil 24428 . 24434) (nil fontified nil 24427 . 24428) (nil fontified nil 24426 . 24427) (nil fontified nil 24419 . 24426) (nil fontified nil 24418 . 24419) (nil fontified nil 24416 . 24418) (nil fontified nil 24404 . 24416) (nil fontified nil 24376 . 24404) (nil fontified nil 24374 . 24376) (nil fontified nil 24355 . 24374) (nil fontified nil 24350 . 24355) (nil fontified nil 24324 . 24350) (nil fontified nil 24323 . 24324) (nil fontified nil 24315 . 24323) (nil fontified nil 24313 . 24315) (nil fontified nil 24302 . 24313) (nil fontified nil 24301 . 24302) (nil fontified nil 24292 . 24301) (nil fontified nil 24290 . 24292) (nil fontified nil 24279 . 24290) (nil fontified nil 24278 . 24279) (nil fontified nil 24272 . 24278) (nil fontified nil 24270 . 24272) (nil fontified nil 24243 . 24270) (nil fontified nil 24242 . 24243) (nil fontified nil 24231 . 24242) (nil fontified nil 24228 . 24231) (nil fontified nil 24227 . 24228) (nil fontified nil 24225 . 24227) (nil fontified nil 24201 . 24225) (nil fontified nil 24200 . 24201) (nil fontified nil 24189 . 24200) (nil fontified nil 24186 . 24189) (nil fontified nil 24185 . 24186) (nil fontified nil 24183 . 24185) (nil fontified nil 24166 . 24183) (nil fontified nil 24161 . 24166) (nil fontified nil 24160 . 24161) (nil fontified nil 24159 . 24160) (nil fontified nil 24157 . 24159) (nil fontified nil 24156 . 24157) (nil fontified nil 24146 . 24156) (nil fontified nil 24140 . 24146) (nil fontified nil 24139 . 24140) (nil fontified nil 24137 . 24139) (nil fontified nil 24120 . 24137) (nil fontified nil 24115 . 24120) (nil fontified nil 24114 . 24115) (nil fontified nil 24113 . 24114) (nil fontified nil 24111 . 24113) (nil fontified nil 24110 . 24111) (nil fontified nil 24100 . 24110) (nil fontified nil 24094 . 24100) (nil fontified nil 24093 . 24094) (nil fontified nil 24091 . 24093) (nil fontified nil 24065 . 24091) (nil fontified nil 24064 . 24065) (nil fontified nil 24063 . 24064) (nil fontified nil 24062 . 24063) (nil fontified nil 24057 . 24062) (nil fontified nil 24056 . 24057) (nil fontified nil 24055 . 24056) (nil fontified nil 24034 . 24055) (nil fontified nil 24033 . 24034) (nil fontified nil 24028 . 24033) (nil fontified nil 24027 . 24028) (nil fontified nil 24026 . 24027) (nil fontified nil 24011 . 24026) (nil fontified nil 24010 . 24011) (nil fontified nil 24003 . 24010) (nil fontified nil 23990 . 24003) (nil fontified nil 23989 . 23990) (nil fontified nil 23979 . 23989) (nil fontified nil 23965 . 23979) (nil fontified nil 23957 . 23965) (nil fontified nil 23900 . 23957) (nil fontified nil 23898 . 23900) (nil fontified nil 23875 . 23898) (nil fontified nil 23871 . 23875) (nil fontified nil 23867 . 23871) (nil fontified nil 23837 . 23867) (nil fontified nil 23835 . 23837) (nil fontified nil 23825 . 23835) (nil fontified nil 23824 . 23825) (nil fontified nil 23822 . 23824) (nil fontified nil 23820 . 23822) (nil fontified nil 23813 . 23820) (nil fontified nil 23779 . 23813) (nil fontified nil 23777 . 23779) (nil fontified nil 23770 . 23777) (nil fontified nil 23769 . 23770) (nil fontified nil 23764 . 23769) (nil fontified nil 23762 . 23764) (nil fontified nil 23752 . 23762) (nil fontified nil 23711 . 23752) (nil fontified nil 23709 . 23711) (nil fontified nil 23704 . 23709) (nil fontified nil 23702 . 23704) (nil fontified nil 23690 . 23702) (nil fontified nil 23688 . 23690) (nil fontified nil 23677 . 23688) (nil fontified nil 23643 . 23677) (nil fontified nil 23641 . 23643) (nil fontified nil 23635 . 23641) (nil fontified nil 23630 . 23635) (nil fontified nil 23629 . 23630) (nil fontified nil 23628 . 23629) (nil fontified nil 23626 . 23628) (nil fontified nil 23625 . 23626) (nil fontified nil 23620 . 23625) (nil fontified nil 23614 . 23620) (nil fontified nil 23613 . 23614) (nil fontified nil 23611 . 23613) (nil fontified nil 23595 . 23611) (nil fontified nil 23590 . 23595) (nil fontified nil 23589 . 23590) (nil fontified nil 23588 . 23589) (nil fontified nil 23586 . 23588) (nil fontified nil 23585 . 23586) (nil fontified nil 23580 . 23585) (nil fontified nil 23574 . 23580) (nil fontified nil 23573 . 23574) (nil fontified nil 23571 . 23573) (nil fontified nil 23551 . 23571) (nil fontified nil 23550 . 23551) (nil fontified nil 23549 . 23550) (nil fontified nil 23548 . 23549) (nil fontified nil 23543 . 23548) (nil fontified nil 23542 . 23543) (nil fontified nil 23541 . 23542) (nil fontified nil 23520 . 23541) (nil fontified nil 23519 . 23520) (nil fontified nil 23514 . 23519) (nil fontified nil 23513 . 23514) (nil fontified nil 23512 . 23513) (nil fontified nil 23497 . 23512) (nil fontified nil 23496 . 23497) (nil fontified nil 23489 . 23496) (nil fontified nil 23480 . 23489) (nil fontified nil 23479 . 23480) (nil fontified nil 23474 . 23479) (nil fontified nil 23460 . 23474) (nil fontified nil 23456 . 23460) (nil fontified nil 23416 . 23456) (nil fontified nil 23414 . 23416) (nil fontified nil 23410 . 23414) (nil fontified nil 23402 . 23410) (nil fontified nil 23401 . 23402) (nil fontified nil 23397 . 23401) (nil fontified nil 23389 . 23397) (nil fontified nil 23388 . 23389) (nil fontified nil 23384 . 23388) (nil fontified nil 23380 . 23384) (nil fontified nil 23377 . 23380) (nil fontified nil 23375 . 23377) (nil fontified nil 23371 . 23375) (nil fontified nil 23363 . 23371) (nil fontified nil 23362 . 23363) (nil fontified nil 23358 . 23362) (nil fontified nil 23350 . 23358) (nil fontified nil 23349 . 23350) (nil fontified nil 23343 . 23349) (nil fontified nil 23321 . 23343) (nil fontified nil 23320 . 23321) (nil fontified nil 23314 . 23320) (nil fontified nil 23313 . 23314) (nil fontified nil 23312 . 23313) (nil fontified nil 23301 . 23312) (nil fontified nil 23273 . 23301) (nil fontified nil 23271 . 23273) (nil fontified nil 23230 . 23271) (nil fontified nil 23229 . 23230) (nil fontified nil 23216 . 23229) (nil fontified nil 23215 . 23216) (nil fontified nil 23206 . 23215) (nil fontified nil 23205 . 23206) (nil fontified nil 23196 . 23205) (nil fontified nil 23195 . 23196) (nil fontified nil 23155 . 23195) (nil fontified nil 23153 . 23155) (nil fontified nil 23130 . 23153) (nil fontified nil 23084 . 23130) (nil fontified nil 23082 . 23084) (nil fontified nil 23078 . 23082) (nil fontified nil 23031 . 23078) (nil fontified nil 23029 . 23031) (nil fontified nil 23025 . 23029) (nil fontified nil 22993 . 23025) (nil fontified nil 22991 . 22993) (nil fontified nil 22953 . 22991) (nil fontified nil 22949 . 22953) (nil fontified nil 22947 . 22949) (nil fontified nil 22930 . 22947) (nil fontified nil 22929 . 22930) (22929 . 25700)) nil (25732 61204 345964 700000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -25698) (undo-tree-id206 . -1) (undo-tree-id207 . 1) (undo-tree-id208 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -25699) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 25700) nil (25732 61204 345949 600000) 0 nil])
([nil nil ((#("
    ; ActiveWindow := WinActive(\"A\")
    ; DllCall(\"FlashWindow\", UInt, ActiveWindow, Int, True)
" 0 5 (fontified t) 5 7 (fontified t face font-lock-comment-delimiter-face) 7 38 (fontified t face font-lock-comment-face) 38 42 (fontified t) 42 44 (fontified t face font-lock-comment-delimiter-face) 44 98 (fontified t face font-lock-comment-face)) . 25600) (undo-tree-id203 . -98) (undo-tree-id204 . -98) (undo-tree-id205 . -98)) nil (25732 61204 345946 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -25599) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 25600) nil (25732 61204 345941 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23343) (undo-tree-id233 . -1) 23344 (t 25732 61204 373860 800000)) nil (25732 61245 93804 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23295) (undo-tree-id232 . -1) 23296) nil (25732 61245 93803 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23023) (undo-tree-id231 . -1) 23024) nil (25732 61245 93802 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22967) (undo-tree-id230 . -1) 22968) nil (25732 61245 93800 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22923) (undo-tree-id229 . -1) 22924) nil (25732 61245 93799 100000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 22924) (22928 . 22928) (22928 . 22929)) nil (25732 61245 93797 600000) 0 nil])
([nil nil ((22925 . 22926)) nil (25732 61245 93796 300000) 0 nil])
([nil nil ((22925 . 22929) 22926) nil (25732 61245 93795 300000) 0 nil])
([nil nil ((22930 . 22951)) nil (25732 61245 93794 300000) 0 nil])
([nil nil ((22951 . 22955)) nil (25732 61245 93793 300000) 0 nil])
([nil nil ((#("    ; from here to the end of " 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 30 (fontified t face font-lock-comment-face)) . 22925) (undo-tree-id226 . -30) (undo-tree-id227 . -30) (undo-tree-id228 . -30)) nil (25732 61245 93792 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22924) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 22925) nil (25732 61248 744919 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22923) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("
    AllWindowIds := GetAllWindowIds()
    FilteredWindowIds := FilterWindowIds(AllWindowIds)
    ; these are retrieved in the order in which they
    ; stack - index 0 is top (and ahk is 1-indexed)
    WindowIdsInMonitor := GetWindowIdsInMonitor(FilteredWindowIds, MonitorX, MonitorY, MonitorWidth, MonitorHeight)
    TopWindowIdInMonitor := WindowIdsInMonitor[1]
    WinActivate, ahk_id %TopWindowIdInMonitor%
    ;*******
    ;*******
    ; Wiggle
    ;*******
    ;*******
    ; Get the original position of the window
    VarSetCapacity(rect, 16)
    DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect)
    originalX := NumGet(rect, 0, \"Int\")
    originalY := NumGet(rect, 4, \"Int\")
    ; Constants for the circle movement
    radius := 5
    step := 90  ; Degrees of each step, smaller = smoother
    steps := 360 / step  ; Number of steps for a full circle
    pi := 3.14159
    ; Perform the circular movement
    Loop % steps
    {
        ; make sure i didn't move the window while it was wiggling
        VarSetCapacity(rect_test, 16)
        DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect_test)
        test_X := NumGet(rect_test, 0, \"Int\")
        test_Y := NumGet(rect_test, 4, \"Int\")
        test_X := Abs(originalX - test_X)
        test_Y := Abs(originalY - test_Y)
        test_step := step * 4
        if (test_X > test_step || test_Y > test_step) {
            break
        }
        ; convert the step to radians
        rad := A_Index * step * pi / 180
        ; Calculate the new position
        new_X := originalX + radius * Cos(rad)
        new_Y := originalY + radius * Sin(rad)
        ; Set the new_ position
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", new_X, \"Int\", new_Y, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
        ; Wait some time before the next move
        Sleep, 3
    }
    ; (this duplicate code should be collapsed)
    ; make sure i didn't move the window while it was wiggling
    VarSetCapacity(rect_test, 16)
    DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect_test)
    test_X := NumGet(rect_test, 0, \"Int\")
    test_Y := NumGet(rect_test, 4, \"Int\")
    test_X := Abs(originalX - test_X)
    test_Y := Abs(originalY - test_Y)
    test_step := step * 4
    if !(test_X > test_step || test_Y > test_step) {
        ; Reset the window to the original position
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", originalX, \"Int\", originalY, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
    }" 0 1 (fontified t) 1 18 (fontified t) 18 20 (fontified t face font-lock-builtin-face) 20 24 (fontified t) 24 39 (fontified t) 39 61 (fontified t) 61 63 (fontified t face font-lock-builtin-face) 63 94 (fontified t) 94 98 (fontified t) 98 100 (fontified t face font-lock-comment-delimiter-face) 100 147 (fontified t face font-lock-comment-face) 147 151 (fontified t) 151 153 (fontified t face font-lock-comment-delimiter-face) 153 199 (fontified t face font-lock-comment-face) 199 222 (fontified t) 222 224 (fontified t face font-lock-builtin-face) 224 264 (fontified t) 264 265 (fontified t face font-lock-builtin-face) 265 274 (fontified t) 274 275 (fontified t face font-lock-builtin-face) 275 284 (fontified t) 284 285 (fontified t face font-lock-builtin-face) 285 298 (fontified t) 298 299 (fontified t face font-lock-builtin-face) 299 315 (fontified t) 315 340 (fontified t) 340 342 (fontified t face font-lock-builtin-face) 342 365 (fontified t) 365 369 (fontified t) 369 380 (fontified t face font-lock-keyword-face) 380 381 (fontified t face font-lock-builtin-face) 381 382 (fontified t) 382 388 (fontified t face font-lock-keyword-face) 388 389 (fontified t) 389 411 (fontified t face font-lock-variable-name-face) 411 412 (fontified t) 412 416 (fontified t) 416 417 (fontified t face font-lock-comment-delimiter-face) 417 425 (fontified t face font-lock-comment-face) 425 429 (fontified t) 429 430 (fontified t face font-lock-comment-delimiter-face) 430 438 (fontified t face font-lock-comment-face) 438 442 (fontified t) 442 444 (fontified t face font-lock-comment-delimiter-face) 444 447 (fontified t face font-lock-comment-face) 447 451 (fontified t face font-lock-comment-face) 451 455 (fontified t) 455 456 (fontified t face font-lock-comment-delimiter-face) 456 464 (fontified t face font-lock-comment-face) 464 468 (fontified t) 468 469 (fontified t face font-lock-comment-delimiter-face) 469 477 (fontified t face font-lock-comment-face) 477 481 (fontified t) 481 483 (fontified t face font-lock-comment-delimiter-face) 483 523 (fontified t face font-lock-comment-face) 523 527 (fontified t) 527 541 (fontified t face font-lock-function-name-face) 541 546 (fontified t) 546 547 (fontified t face font-lock-builtin-face) 547 556 (fontified t) 556 563 (fontified t face font-lock-function-name-face) 563 564 (fontified t) 564 579 (fontified t face font-lock-string-face) 579 580 (fontified t face font-lock-builtin-face) 580 581 (fontified t) 581 586 (fontified t face font-lock-string-face) 586 587 (fontified t face font-lock-builtin-face) 587 608 (fontified t) 608 609 (fontified t face font-lock-builtin-face) 609 610 (fontified t) 610 615 (fontified t face font-lock-string-face) 615 616 (fontified t face font-lock-builtin-face) 616 617 (fontified t) 617 618 (fontified t face font-lock-builtin-face) 618 638 (fontified t) 638 640 (fontified t face font-lock-builtin-face) 640 641 (fontified t) 641 647 (fontified t face font-lock-function-name-face) 647 652 (fontified t) 652 653 (fontified t face font-lock-builtin-face) 653 655 (fontified t) 655 656 (fontified t face font-lock-builtin-face) 656 657 (fontified t) 657 662 (fontified t face font-lock-string-face) 662 678 (fontified t) 678 680 (fontified t face font-lock-builtin-face) 680 681 (fontified t) 681 687 (fontified t face font-lock-function-name-face) 687 692 (fontified t) 692 693 (fontified t face font-lock-builtin-face) 693 695 (fontified t) 695 696 (fontified t face font-lock-builtin-face) 696 697 (fontified t) 697 702 (fontified t face font-lock-string-face) 702 708 (fontified t) 708 710 (fontified t face font-lock-comment-delimiter-face) 710 744 (fontified t face font-lock-comment-face) 744 755 (fontified t) 755 757 (fontified t face font-lock-builtin-face) 757 769 (fontified t) 769 771 (fontified t face font-lock-builtin-face) 771 776 (fontified t) 776 778 (fontified t face font-lock-comment-delimiter-face) 778 819 (fontified t face font-lock-comment-face) 819 829 (fontified t) 829 831 (fontified t face font-lock-builtin-face) 831 836 (fontified t) 836 837 (fontified t face font-lock-builtin-face) 837 844 (fontified t) 844 846 (fontified t face font-lock-comment-delimiter-face) 846 880 (fontified t face font-lock-comment-face) 880 887 (fontified t) 887 889 (fontified t face font-lock-builtin-face) 889 891 (fontified t) 891 892 (fontified t face font-lock-builtin-face) 892 902 (fontified t) 902 904 (fontified t face font-lock-comment-delimiter-face) 904 934 (fontified t face font-lock-comment-face) 934 938 (fontified t) 938 942 (fontified t face font-lock-keyword-face) 942 965 (fontified t) 965 967 (fontified t face font-lock-comment-delimiter-face) 967 1024 (fontified t face font-lock-comment-face) 1024 1032 (fontified t) 1032 1046 (fontified t face font-lock-function-name-face) 1046 1056 (fontified t) 1056 1057 (fontified t face font-lock-builtin-face) 1057 1070 (fontified t) 1070 1077 (fontified t face font-lock-function-name-face) 1077 1078 (fontified t) 1078 1093 (fontified t face font-lock-string-face) 1093 1094 (fontified t face font-lock-builtin-face) 1094 1095 (fontified t) 1095 1100 (fontified t face font-lock-string-face) 1100 1101 (fontified t face font-lock-builtin-face) 1101 1122 (fontified t) 1122 1123 (fontified t face font-lock-builtin-face) 1123 1124 (fontified t) 1124 1129 (fontified t face font-lock-string-face) 1129 1130 (fontified t face font-lock-builtin-face) 1130 1131 (fontified t) 1131 1132 (fontified t face font-lock-builtin-face) 1132 1158 (fontified t) 1158 1160 (fontified t face font-lock-builtin-face) 1160 1161 (fontified t) 1161 1167 (fontified t face font-lock-function-name-face) 1167 1177 (fontified t) 1177 1178 (fontified t face font-lock-builtin-face) 1178 1180 (fontified t) 1180 1181 (fontified t face font-lock-builtin-face) 1181 1182 (fontified t) 1182 1187 (fontified t face font-lock-string-face) 1187 1204 (fontified t) 1204 1206 (fontified t face font-lock-builtin-face) 1206 1207 (fontified t) 1207 1213 (fontified t face font-lock-function-name-face) 1213 1223 (fontified t) 1223 1224 (fontified t face font-lock-builtin-face) 1224 1226 (fontified t) 1226 1227 (fontified t face font-lock-builtin-face) 1227 1228 (fontified t) 1228 1233 (fontified t face font-lock-string-face) 1233 1250 (fontified t) 1250 1252 (fontified t face font-lock-builtin-face) 1252 1253 (fontified t) 1253 1256 (fontified t face font-lock-function-name-face) 1256 1267 (fontified t) 1267 1268 (fontified t face font-lock-builtin-face) 1268 1292 (fontified t) 1292 1294 (fontified t face font-lock-builtin-face) 1294 1295 (fontified t) 1295 1298 (fontified t face font-lock-function-name-face) 1298 1309 (fontified t) 1309 1310 (fontified t face font-lock-builtin-face) 1310 1337 (fontified t) 1337 1339 (fontified t face font-lock-builtin-face) 1339 1345 (fontified t) 1345 1346 (fontified t face font-lock-builtin-face) 1346 1357 (fontified t) 1357 1359 (fontified t face font-lock-keyword-face) 1359 1368 (fontified t) 1368 1369 (fontified t face font-lock-builtin-face) 1369 1380 (fontified t) 1380 1382 (fontified t face font-lock-builtin-face) 1382 1390 (fontified t) 1390 1391 (fontified t face font-lock-builtin-face) 1391 1417 (fontified t) 1417 1422 (fontified t face font-lock-keyword-face) 1422 1441 (fontified t) 1441 1443 (fontified t face font-lock-comment-delimiter-face) 1443 1471 (fontified t face font-lock-comment-face) 1471 1483 (fontified t) 1483 1485 (fontified t face font-lock-builtin-face) 1485 1486 (fontified t) 1486 1492 (fontified t face font-lock-variable-name-face) 1492 1493 (fontified t face font-lock-variable-name-face) 1493 1494 (fontified t) 1494 1495 (fontified t face font-lock-builtin-face) 1495 1496 (fontified t) 1496 1500 (fontified t) 1500 1501 (fontified t) 1501 1502 (face font-lock-builtin-face fontified t) 1502 1506 (fontified t) 1506 1507 (face font-lock-builtin-face fontified t) 1507 1512 (fontified t) 1520 1522 (face font-lock-comment-delimiter-face) 1522 1539 (face font-lock-comment-face) 1539 1549 (face font-lock-comment-face) 1563 1565 (face font-lock-builtin-face) 1576 1577 (face font-lock-builtin-face) 1585 1586 (face font-lock-builtin-face) 1587 1590 (face font-lock-function-name-face) 1610 1612 (face font-lock-builtin-face) 1623 1624 (face font-lock-builtin-face) 1632 1633 (face font-lock-builtin-face) 1634 1637 (face font-lock-keyword-face) 1651 1653 (face font-lock-comment-delimiter-face) 1653 1675 (face font-lock-comment-face) 1683 1690 (face font-lock-function-name-face) 1691 1705 (face font-lock-string-face) 1705 1706 (face font-lock-builtin-face) 1707 1712 (face font-lock-string-face) 1712 1713 (face font-lock-builtin-face) 1734 1735 (face font-lock-builtin-face) 1736 1741 (face font-lock-string-face) 1741 1742 (face font-lock-builtin-face) 1744 1745 (face font-lock-builtin-face) 1746 1751 (face font-lock-string-face) 1751 1752 (face font-lock-builtin-face) 1758 1759 (face font-lock-builtin-face) 1760 1765 (face font-lock-string-face) 1765 1766 (face font-lock-builtin-face) 1772 1773 (face font-lock-builtin-face) 1774 1779 (face font-lock-string-face) 1779 1780 (face font-lock-builtin-face) 1782 1783 (face font-lock-builtin-face) 1784 1789 (face font-lock-string-face) 1789 1790 (face font-lock-builtin-face) 1792 1793 (face font-lock-builtin-face) 1794 1800 (face font-lock-string-face) 1800 1801 (face font-lock-builtin-face) 1809 1811 (face font-lock-comment-delimiter-face) 1811 1865 (face font-lock-comment-face) 1865 1873 (face font-lock-comment-face) 1881 1883 (face font-lock-comment-delimiter-face) 1883 1912 (face font-lock-comment-face) 1912 1919 (face font-lock-comment-face) 1927 1932 (face font-lock-keyword-face) 1932 1933 (face font-lock-builtin-face) 1946 1948 (face font-lock-comment-delimiter-face) 1948 1990 (face font-lock-comment-face) 1994 1996 (face font-lock-comment-delimiter-face) 1996 2052 (face font-lock-comment-face) 2052 2053 (face font-lock-comment-face) 2053 2057 (fontified t) 2057 2071 (fontified t face font-lock-function-name-face) 2071 2081 (fontified t) 2081 2082 (fontified t face font-lock-builtin-face) 2082 2087 (fontified t) 2087 2091 (fontified t) 2091 2098 (fontified t face font-lock-function-name-face) 2098 2099 (fontified t) 2099 2114 (fontified t face font-lock-string-face) 2114 2115 (fontified t face font-lock-builtin-face) 2115 2116 (fontified t) 2116 2121 (fontified t face font-lock-string-face) 2121 2122 (fontified t face font-lock-builtin-face) 2122 2143 (fontified t) 2143 2144 (fontified t face font-lock-builtin-face) 2144 2145 (fontified t) 2145 2150 (fontified t face font-lock-string-face) 2150 2151 (fontified t face font-lock-builtin-face) 2151 2152 (fontified t) 2152 2153 (fontified t face font-lock-builtin-face) 2153 2164 (fontified t) 2164 2168 (fontified t) 2168 2175 (fontified t) 2175 2177 (fontified t face font-lock-builtin-face) 2177 2178 (fontified t) 2178 2184 (fontified t face font-lock-function-name-face) 2184 2194 (fontified t) 2194 2195 (fontified t face font-lock-builtin-face) 2195 2197 (fontified t) 2197 2198 (fontified t face font-lock-builtin-face) 2198 2199 (fontified t) 2199 2204 (fontified t face font-lock-string-face) 2204 2210 (fontified t) 2210 2217 (fontified t) 2217 2219 (fontified t face font-lock-builtin-face) 2219 2220 (fontified t) 2220 2226 (fontified t face font-lock-function-name-face) 2226 2236 (fontified t) 2236 2237 (fontified t face font-lock-builtin-face) 2237 2239 (fontified t) 2239 2240 (fontified t face font-lock-builtin-face) 2240 2241 (fontified t) 2241 2246 (fontified t face font-lock-string-face) 2246 2252 (fontified t) 2252 2259 (fontified t) 2259 2261 (fontified t face font-lock-builtin-face) 2261 2262 (fontified t) 2262 2265 (fontified t face font-lock-function-name-face) 2265 2276 (fontified t) 2276 2277 (fontified t face font-lock-builtin-face) 2277 2286 (fontified t) 2286 2290 (fontified t) 2290 2297 (fontified t) 2297 2299 (fontified t face font-lock-builtin-face) 2299 2300 (fontified t) 2300 2303 (fontified t face font-lock-function-name-face) 2303 2314 (fontified t) 2314 2315 (fontified t face font-lock-builtin-face) 2315 2328 (fontified t) 2328 2338 (fontified t) 2338 2340 (fontified t face font-lock-builtin-face) 2340 2346 (fontified t) 2346 2347 (fontified t face font-lock-builtin-face) 2347 2350 (fontified t) 2350 2354 (fontified t) 2354 2356 (fontified t face font-lock-keyword-face) 2356 2366 (fontified t) 2366 2367 (fontified t face font-lock-builtin-face) 2367 2378 (fontified t) 2378 2380 (fontified t face font-lock-builtin-face) 2380 2388 (fontified t) 2388 2389 (fontified t face font-lock-builtin-face) 2389 2402 (fontified t) 2402 2403 (fontified t) 2403 2411 (fontified t) 2411 2412 (fontified t face font-lock-comment-delimiter-face) 2412 2413 (fontified t face font-lock-comment-delimiter-face) 2413 2455 (fontified t face font-lock-comment-face) 2455 2463 (fontified t) 2463 2470 (fontified t face font-lock-function-name-face) 2470 2471 (fontified t) 2471 2485 (fontified t face font-lock-string-face) 2485 2486 (fontified t face font-lock-builtin-face) 2486 2487 (fontified t) 2487 2492 (fontified t face font-lock-string-face) 2492 2493 (fontified t face font-lock-builtin-face) 2493 2514 (fontified t) 2514 2515 (fontified t face font-lock-builtin-face) 2515 2516 (fontified t) 2516 2521 (fontified t face font-lock-string-face) 2521 2522 (fontified t face font-lock-builtin-face) 2522 2524 (fontified t) 2524 2525 (fontified t face font-lock-builtin-face) 2525 2526 (fontified t) 2526 2531 (fontified t face font-lock-string-face) 2531 2532 (fontified t face font-lock-builtin-face) 2532 2542 (fontified t) 2542 2543 (fontified t face font-lock-builtin-face) 2543 2544 (fontified t) 2544 2549 (fontified t face font-lock-string-face) 2549 2550 (fontified t face font-lock-builtin-face) 2550 2560 (fontified t) 2560 2561 (fontified t face font-lock-builtin-face) 2561 2562 (fontified t) 2562 2567 (fontified t face font-lock-string-face) 2567 2568 (fontified t face font-lock-builtin-face) 2568 2570 (fontified t) 2570 2571 (fontified t face font-lock-builtin-face) 2571 2572 (fontified t) 2572 2577 (fontified t face font-lock-string-face) 2577 2578 (fontified t face font-lock-builtin-face) 2578 2580 (fontified t) 2580 2581 (fontified t face font-lock-builtin-face) 2581 2582 (fontified t) 2582 2588 (fontified t face font-lock-string-face) 2588 2589 (fontified t face font-lock-builtin-face) 2589 2597 (fontified t) 2597 2599 (fontified t face font-lock-comment-delimiter-face) 2599 2660 (fontified t face font-lock-comment-face) 2660 2661 (fontified t face font-lock-comment-face) 2661 2662 (fontified t) 2662 2665 (fontified t) 2665 2666 (fontified t)) . 22924) (undo-tree-id261 . -2662) (undo-tree-id262 . -2666) (undo-tree-id263 . -2662) (undo-tree-id264 . -2662) (undo-tree-id265 . -2663) (undo-tree-id266 . -2662)) nil (25732 61282 848220 100000) 0 nil] [nil nil ((25586 . 25588)) ((#("mm" 0 2 (fontified t)) . 25586) (undo-tree-id238 . -2)) (25732 61248 172860 900000) 0 nil] [nil nil ((#("
    AllWindowIds := GetAllWindowIds()
    FilteredWindowIds := FilterWindowIds(AllWindowIds)
    ; these are retrieved in the order in which they
    ; stack - index 0 is top (and ahk is 1-indexed)
    WindowIdsInMonitor := GetWindowIdsInMonitor(FilteredWindowIds, MonitorX, MonitorY, MonitorWidth, MonitorHeight)
    TopWindowIdInMonitor := WindowIdsInMonitor[1]
    WinActivate, ahk_id %TopWindowIdInMonitor%
    ;*******
    ;*******
    ; Wiggle
    ;*******
    ;*******
    ; Get the original position of the window
    VarSetCapacity(rect, 16)
    DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect)
    originalX := NumGet(rect, 0, \"Int\")
    originalY := NumGet(rect, 4, \"Int\")
    ; Constants for the circle movement
    radius := 5
    step := 90  ; Degrees of each step, smaller = smoother
    steps := 360 / step  ; Number of steps for a full circle
    pi := 3.14159
    ; Perform the circular movement
    Loop % steps
    {
        ; make sure i didn't move the window while it was wiggling
        VarSetCapacity(rect_test, 16)
        DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect_test)
        test_X := NumGet(rect_test, 0, \"Int\")
        test_Y := NumGet(rect_test, 4, \"Int\")
        test_X := Abs(originalX - test_X)
        test_Y := Abs(originalY - test_Y)
        test_step := step * 4
        if (test_X > test_step || test_Y > test_step) {
            break
        }
        ; convert the step to radians
        rad := A_Index * step * pi / 180
        ; Calculate the new position
        new_X := originalX + radius * Cos(rad)
        new_Y := originalY + radius * Sin(rad)
        ; Set the new_ position
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", new_X, \"Int\", new_Y, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
        ; Wait some time before the next move
        Sleep, 3
    }
    ; (this duplicate code should be collapsed)
    ; make sure i didn't move the window while it was wiggling
    VarSetCapacity(rect_test, 16)
    DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect_test)
    test_X := NumGet(rect_test, 0, \"Int\")
    test_Y := NumGet(rect_test, 4, \"Int\")
    test_X := Abs(originalX - test_X)
    test_Y := Abs(originalY - test_Y)
    test_step := step * 4
    if !(test_X > test_step || test_Y > test_step) {
        ; Reset the window to the original position
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", originalX, \"Int\", originalY, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
 " 0 1 (fontified t) 1 18 (fontified t) 18 20 (fontified t face font-lock-builtin-face) 20 24 (fontified t) 24 39 (fontified t) 39 61 (fontified t) 61 63 (fontified t face font-lock-builtin-face) 63 94 (fontified t) 94 98 (fontified t) 98 100 (fontified t face font-lock-comment-delimiter-face) 100 147 (fontified t face font-lock-comment-face) 147 151 (fontified t) 151 153 (fontified t face font-lock-comment-delimiter-face) 153 199 (fontified t face font-lock-comment-face) 199 222 (fontified t) 222 224 (fontified t face font-lock-builtin-face) 224 264 (fontified t) 264 265 (fontified t face font-lock-builtin-face) 265 274 (fontified t) 274 275 (fontified t face font-lock-builtin-face) 275 284 (fontified t) 284 285 (fontified t face font-lock-builtin-face) 285 298 (fontified t) 298 299 (fontified t face font-lock-builtin-face) 299 315 (fontified t) 315 340 (fontified t) 340 342 (fontified t face font-lock-builtin-face) 342 365 (fontified t) 365 369 (fontified t) 369 380 (fontified t face font-lock-keyword-face) 380 381 (fontified t face font-lock-builtin-face) 381 382 (fontified t) 382 388 (fontified t face font-lock-keyword-face) 388 389 (fontified t) 389 411 (fontified t face font-lock-variable-name-face) 411 412 (fontified t) 412 416 (fontified t) 416 417 (fontified t face font-lock-comment-delimiter-face) 417 425 (fontified t face font-lock-comment-face) 425 429 (fontified t) 429 430 (fontified t face font-lock-comment-delimiter-face) 430 438 (fontified t face font-lock-comment-face) 438 442 (fontified t) 442 444 (fontified t face font-lock-comment-delimiter-face) 444 447 (fontified t face font-lock-comment-face) 447 451 (fontified t face font-lock-comment-face) 451 455 (fontified t) 455 456 (fontified t face font-lock-comment-delimiter-face) 456 464 (fontified t face font-lock-comment-face) 464 468 (fontified t) 468 469 (fontified t face font-lock-comment-delimiter-face) 469 477 (fontified t face font-lock-comment-face) 477 481 (fontified t) 481 483 (fontified t face font-lock-comment-delimiter-face) 483 523 (fontified t face font-lock-comment-face) 523 527 (fontified t) 527 541 (fontified t face font-lock-function-name-face) 541 546 (fontified t) 546 547 (fontified t face font-lock-builtin-face) 547 556 (fontified t) 556 563 (fontified t face font-lock-function-name-face) 563 564 (fontified t) 564 579 (fontified t face font-lock-string-face) 579 580 (fontified t face font-lock-builtin-face) 580 581 (fontified t) 581 586 (fontified t face font-lock-string-face) 586 587 (fontified t face font-lock-builtin-face) 587 608 (fontified t) 608 609 (fontified t face font-lock-builtin-face) 609 610 (fontified t) 610 615 (fontified t face font-lock-string-face) 615 616 (fontified t face font-lock-builtin-face) 616 617 (fontified t) 617 618 (fontified t face font-lock-builtin-face) 618 638 (fontified t) 638 640 (fontified t face font-lock-builtin-face) 640 641 (fontified t) 641 647 (fontified t face font-lock-function-name-face) 647 652 (fontified t) 652 653 (fontified t face font-lock-builtin-face) 653 655 (fontified t) 655 656 (fontified t face font-lock-builtin-face) 656 657 (fontified t) 657 662 (fontified t face font-lock-string-face) 662 678 (fontified t) 678 680 (fontified t face font-lock-builtin-face) 680 681 (fontified t) 681 687 (fontified t face font-lock-function-name-face) 687 692 (fontified t) 692 693 (fontified t face font-lock-builtin-face) 693 695 (fontified t) 695 696 (fontified t face font-lock-builtin-face) 696 697 (fontified t) 697 702 (fontified t face font-lock-string-face) 702 708 (fontified t) 708 710 (fontified t face font-lock-comment-delimiter-face) 710 744 (fontified t face font-lock-comment-face) 744 755 (fontified t) 755 757 (fontified t face font-lock-builtin-face) 757 769 (fontified t) 769 771 (fontified t face font-lock-builtin-face) 771 776 (fontified t) 776 778 (fontified t face font-lock-comment-delimiter-face) 778 819 (fontified t face font-lock-comment-face) 819 829 (fontified t) 829 831 (fontified t face font-lock-builtin-face) 831 836 (fontified t) 836 837 (fontified t face font-lock-builtin-face) 837 844 (fontified t) 844 846 (fontified t face font-lock-comment-delimiter-face) 846 880 (fontified t face font-lock-comment-face) 880 887 (fontified t) 887 889 (fontified t face font-lock-builtin-face) 889 891 (fontified t) 891 892 (fontified t face font-lock-builtin-face) 892 902 (fontified t) 902 904 (fontified t face font-lock-comment-delimiter-face) 904 934 (fontified t face font-lock-comment-face) 934 938 (fontified t) 938 942 (fontified t face font-lock-keyword-face) 942 965 (fontified t) 965 967 (fontified t face font-lock-comment-delimiter-face) 967 1024 (fontified t face font-lock-comment-face) 1024 1032 (fontified t) 1032 1046 (fontified t face font-lock-function-name-face) 1046 1056 (fontified t) 1056 1057 (fontified t face font-lock-builtin-face) 1057 1070 (fontified t) 1070 1077 (fontified t face font-lock-function-name-face) 1077 1078 (fontified t) 1078 1093 (fontified t face font-lock-string-face) 1093 1094 (fontified t face font-lock-builtin-face) 1094 1095 (fontified t) 1095 1100 (fontified t face font-lock-string-face) 1100 1101 (fontified t face font-lock-builtin-face) 1101 1122 (fontified t) 1122 1123 (fontified t face font-lock-builtin-face) 1123 1124 (fontified t) 1124 1129 (fontified t face font-lock-string-face) 1129 1130 (fontified t face font-lock-builtin-face) 1130 1131 (fontified t) 1131 1132 (fontified t face font-lock-builtin-face) 1132 1158 (fontified t) 1158 1160 (fontified t face font-lock-builtin-face) 1160 1161 (fontified t) 1161 1167 (fontified t face font-lock-function-name-face) 1167 1177 (fontified t) 1177 1178 (fontified t face font-lock-builtin-face) 1178 1180 (fontified t) 1180 1181 (fontified t face font-lock-builtin-face) 1181 1182 (fontified t) 1182 1187 (fontified t face font-lock-string-face) 1187 1204 (fontified t) 1204 1206 (fontified t face font-lock-builtin-face) 1206 1207 (fontified t) 1207 1213 (fontified t face font-lock-function-name-face) 1213 1223 (fontified t) 1223 1224 (fontified t face font-lock-builtin-face) 1224 1226 (fontified t) 1226 1227 (fontified t face font-lock-builtin-face) 1227 1228 (fontified t) 1228 1233 (fontified t face font-lock-string-face) 1233 1250 (fontified t) 1250 1252 (fontified t face font-lock-builtin-face) 1252 1253 (fontified t) 1253 1256 (fontified t face font-lock-function-name-face) 1256 1267 (fontified t) 1267 1268 (fontified t face font-lock-builtin-face) 1268 1292 (fontified t) 1292 1294 (fontified t face font-lock-builtin-face) 1294 1295 (fontified t) 1295 1298 (fontified t face font-lock-function-name-face) 1298 1309 (fontified t) 1309 1310 (fontified t face font-lock-builtin-face) 1310 1337 (fontified t) 1337 1339 (fontified t face font-lock-builtin-face) 1339 1345 (fontified t) 1345 1346 (fontified t face font-lock-builtin-face) 1346 1357 (fontified t) 1357 1359 (fontified t face font-lock-keyword-face) 1359 1368 (fontified t) 1368 1369 (fontified t face font-lock-builtin-face) 1369 1380 (fontified t) 1380 1382 (fontified t face font-lock-builtin-face) 1382 1390 (fontified t) 1390 1391 (fontified t face font-lock-builtin-face) 1391 1417 (fontified t) 1417 1422 (fontified t face font-lock-keyword-face) 1422 1441 (fontified t) 1441 1443 (fontified t face font-lock-comment-delimiter-face) 1443 1471 (fontified t face font-lock-comment-face) 1471 1483 (fontified t) 1483 1485 (fontified t face font-lock-builtin-face) 1485 1486 (fontified t) 1486 1492 (fontified t face font-lock-variable-name-face) 1492 1493 (fontified t face font-lock-variable-name-face) 1493 1494 (fontified t) 1494 1495 (fontified t face font-lock-builtin-face) 1495 1496 (fontified t) 1496 1501 (fontified t) 1501 1502 (face font-lock-builtin-face fontified t) 1502 1506 (fontified t) 1506 1507 (face font-lock-builtin-face fontified t) 1507 1512 (fontified t) 1520 1522 (face font-lock-comment-delimiter-face) 1522 1539 (face font-lock-comment-face) 1539 1549 (face font-lock-comment-face) 1563 1565 (face font-lock-builtin-face) 1576 1577 (face font-lock-builtin-face) 1585 1586 (face font-lock-builtin-face) 1587 1590 (face font-lock-function-name-face) 1610 1612 (face font-lock-builtin-face) 1623 1624 (face font-lock-builtin-face) 1632 1633 (face font-lock-builtin-face) 1634 1637 (face font-lock-keyword-face) 1651 1653 (face font-lock-comment-delimiter-face) 1653 1675 (face font-lock-comment-face) 1683 1690 (face font-lock-function-name-face) 1691 1705 (face font-lock-string-face) 1705 1706 (face font-lock-builtin-face) 1707 1712 (face font-lock-string-face) 1712 1713 (face font-lock-builtin-face) 1734 1735 (face font-lock-builtin-face) 1736 1741 (face font-lock-string-face) 1741 1742 (face font-lock-builtin-face) 1744 1745 (face font-lock-builtin-face) 1746 1751 (face font-lock-string-face) 1751 1752 (face font-lock-builtin-face) 1758 1759 (face font-lock-builtin-face) 1760 1765 (face font-lock-string-face) 1765 1766 (face font-lock-builtin-face) 1772 1773 (face font-lock-builtin-face) 1774 1779 (face font-lock-string-face) 1779 1780 (face font-lock-builtin-face) 1782 1783 (face font-lock-builtin-face) 1784 1789 (face font-lock-string-face) 1789 1790 (face font-lock-builtin-face) 1792 1793 (face font-lock-builtin-face) 1794 1800 (face font-lock-string-face) 1800 1801 (face font-lock-builtin-face) 1809 1811 (face font-lock-comment-delimiter-face) 1811 1865 (face font-lock-comment-face) 1865 1873 (face font-lock-comment-face) 1881 1883 (face font-lock-comment-delimiter-face) 1883 1912 (face font-lock-comment-face) 1912 1919 (face font-lock-comment-face) 1927 1932 (face font-lock-keyword-face) 1932 1933 (face font-lock-builtin-face) 1946 1948 (face font-lock-comment-delimiter-face) 1948 1990 (face font-lock-comment-face) 1994 1996 (face font-lock-comment-delimiter-face) 1996 2052 (face font-lock-comment-face) 2052 2053 (face font-lock-comment-face) 2057 2071 (face font-lock-function-name-face) 2081 2082 (face font-lock-builtin-face) 2087 2091 (fontified t) 2091 2098 (fontified t face font-lock-function-name-face) 2098 2099 (fontified t) 2099 2114 (fontified t face font-lock-string-face) 2114 2115 (fontified t face font-lock-builtin-face) 2115 2116 (fontified t) 2116 2121 (fontified t face font-lock-string-face) 2121 2122 (fontified t face font-lock-builtin-face) 2122 2143 (fontified t) 2143 2144 (fontified t face font-lock-builtin-face) 2144 2145 (fontified t) 2145 2150 (fontified t face font-lock-string-face) 2150 2151 (fontified t face font-lock-builtin-face) 2151 2152 (fontified t) 2152 2153 (fontified t face font-lock-builtin-face) 2153 2164 (fontified t) 2164 2168 (fontified t) 2168 2175 (fontified t) 2175 2177 (fontified t face font-lock-builtin-face) 2177 2178 (fontified t) 2178 2184 (fontified t face font-lock-function-name-face) 2184 2194 (fontified t) 2194 2195 (fontified t face font-lock-builtin-face) 2195 2197 (fontified t) 2197 2198 (fontified t face font-lock-builtin-face) 2198 2199 (fontified t) 2199 2204 (fontified t face font-lock-string-face) 2204 2210 (fontified t) 2210 2217 (fontified t) 2217 2219 (fontified t face font-lock-builtin-face) 2219 2220 (fontified t) 2220 2226 (fontified t face font-lock-function-name-face) 2226 2236 (fontified t) 2236 2237 (fontified t face font-lock-builtin-face) 2237 2239 (fontified t) 2239 2240 (fontified t face font-lock-builtin-face) 2240 2241 (fontified t) 2241 2246 (fontified t face font-lock-string-face) 2246 2252 (fontified t) 2252 2259 (fontified t) 2259 2261 (fontified t face font-lock-builtin-face) 2261 2262 (fontified t) 2262 2265 (fontified t face font-lock-function-name-face) 2265 2276 (fontified t) 2276 2277 (fontified t face font-lock-builtin-face) 2277 2286 (fontified t) 2286 2290 (fontified t) 2290 2297 (fontified t) 2297 2299 (fontified t face font-lock-builtin-face) 2299 2300 (fontified t) 2300 2303 (fontified t face font-lock-function-name-face) 2303 2314 (fontified t) 2314 2315 (fontified t face font-lock-builtin-face) 2315 2328 (fontified t) 2328 2338 (fontified t) 2338 2340 (fontified t face font-lock-builtin-face) 2340 2346 (fontified t) 2346 2347 (fontified t face font-lock-builtin-face) 2347 2350 (fontified t) 2350 2354 (fontified t) 2354 2356 (fontified t face font-lock-keyword-face) 2356 2366 (fontified t) 2366 2367 (fontified t face font-lock-builtin-face) 2367 2378 (fontified t) 2378 2380 (fontified t face font-lock-builtin-face) 2380 2388 (fontified t) 2388 2389 (fontified t face font-lock-builtin-face) 2389 2402 (fontified t) 2402 2403 (fontified t) 2403 2411 (fontified t) 2411 2412 (fontified t face font-lock-comment-delimiter-face) 2412 2413 (fontified t face font-lock-comment-delimiter-face) 2413 2455 (fontified t face font-lock-comment-face) 2455 2463 (fontified t) 2463 2470 (fontified t face font-lock-function-name-face) 2470 2471 (fontified t) 2471 2485 (fontified t face font-lock-string-face) 2485 2486 (fontified t face font-lock-builtin-face) 2486 2487 (fontified t) 2487 2492 (fontified t face font-lock-string-face) 2492 2493 (fontified t face font-lock-builtin-face) 2493 2514 (fontified t) 2514 2515 (fontified t face font-lock-builtin-face) 2515 2516 (fontified t) 2516 2521 (fontified t face font-lock-string-face) 2521 2522 (fontified t face font-lock-builtin-face) 2522 2524 (fontified t) 2524 2525 (fontified t face font-lock-builtin-face) 2525 2526 (fontified t) 2526 2531 (fontified t face font-lock-string-face) 2531 2532 (fontified t face font-lock-builtin-face) 2532 2542 (fontified t) 2542 2543 (fontified t face font-lock-builtin-face) 2543 2544 (fontified t) 2544 2549 (fontified t face font-lock-string-face) 2549 2550 (fontified t face font-lock-builtin-face) 2550 2560 (fontified t) 2560 2561 (fontified t face font-lock-builtin-face) 2561 2562 (fontified t) 2562 2567 (fontified t face font-lock-string-face) 2567 2568 (fontified t face font-lock-builtin-face) 2568 2570 (fontified t) 2570 2571 (fontified t face font-lock-builtin-face) 2571 2572 (fontified t) 2572 2577 (fontified t face font-lock-string-face) 2577 2578 (fontified t face font-lock-builtin-face) 2578 2580 (fontified t) 2580 2581 (fontified t face font-lock-builtin-face) 2581 2582 (fontified t) 2582 2588 (fontified t face font-lock-string-face) 2588 2589 (fontified t face font-lock-builtin-face) 2589 2597 (fontified t) 2597 2599 (fontified t face font-lock-comment-delimiter-face) 2599 2660 (fontified t face font-lock-comment-face) 2660 2661 (fontified t face font-lock-comment-face) 2661 2662 (fontified t)) . -22924) (undo-tree-id218 . -2087) (undo-tree-id219 . -2662) (undo-tree-id220 . -2662) (undo-tree-id221 . -2661) (undo-tree-id222 . -1) 25592) ((22924 . 25586)) (25732 61245 93872 0) 0 nil])
([nil nil ((22924 . 22925) (22875 . 22879) (#("    " 0 4 (fontified nil)) . 22875) (22879 . 22879) (22923 . 22924)) nil (25732 61282 847953 500000) 0 nil])
([nil nil ((25585 . 25593) (#(" " 0 1 (fontified nil)) . 25585) (25586 . 25586) 25588) ((25585 . 25586) (#("        " 0 8 (fontified t)) . 25585)) (25732 61248 23501 900000) 0 nil])
([nil nil ((22924 . 22925)) ((#("S" 0 1 (fontified t)) . 22924) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1)) (25732 61245 93771 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22923) (undo-tree-id239 . -1) (undo-tree-id240 . 1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#("
" 0 1 (fontified t)) . -22924) (undo-tree-id243 . -1) (undo-tree-id244 . 1) (undo-tree-id245 . -1) 22925) nil (25732 61282 847951 100000) 0 nil])
([nil nil ((25595 . 25596)) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 25595) (undo-tree-id237 . -1)) (25732 61248 23419 200000) 0 nil])
nil
([nil nil ((22925 . 22927)) nil (25732 61282 847937 500000) 0 nil])
nil
([nil nil ((22927 . 22940)) nil (25732 61282 848287 200000) 0 nil])
([nil nil ((22940 . 22941)) nil (25732 61330 652042 800000) 0 nil] [nil nil ((22940 . 22941)) ((#("
" 0 1 (fontified nil)) . 22940) (undo-tree-id267 . -1)) (25732 61282 847931 600000) 0 nil])
([nil nil ((22941 . 22943)) nil (25732 61330 652042 300000) 0 nil])
nil
([nil nil ((22942 . 22944)) nil (25732 61330 652041 800000) 0 nil])
([nil nil ((22943 . 25610)) nil (25732 61330 652041 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22942) (undo-tree-id274 . -1) (undo-tree-id275 . 1) (undo-tree-id276 . -1) (#("
" 0 1 (fontified t)) . -22943) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 22944) nil (25732 61330 652040 200000) 0 nil])
([nil nil ((22939 . 22955)) nil (25732 61330 652038 100000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -22950) (undo-tree-id269 . -1) (#("t" 0 1 (fontified t)) . -22951) (undo-tree-id270 . -1) (#("i" 0 1 (fontified t)) . -22952) (undo-tree-id271 . -1) (#("r" 0 1 (fontified t)) . -22953) (undo-tree-id272 . -1) (#("o" 0 1 (fontified t)) . -22954) (undo-tree-id273 . -1) 22955) nil (25732 61330 652037 300000) 0 nil])
([nil nil ((22950 . 22957)) nil (25732 61330 652034 700000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -22956) (undo-tree-id268 . -1) 22957) nil (25732 61330 652033 700000) 0 nil])
([nil nil ((22956 . 22959)) nil (25732 61330 652024 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22970 . 22971) (nil fontified nil 22959 . 22971) (22959 . 22971)) nil (25732 61330 652023 600000) 0 nil])
([nil nil ((22971 . 22973)) nil (25732 61330 652022 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22985 . 22986) (nil fontified nil 22973 . 22986) (22973 . 22986)) nil (25732 61330 652017 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23082) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("    ; these are retrieved in the order in which they
    ; stack - index 0 is top (and ahk is 1-indexed)" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 53 (fontified t face font-lock-comment-face) 53 57 (fontified t) 57 59 (fontified t face font-lock-comment-delimiter-face) 59 104 (fontified t face font-lock-comment-face)) . 23083) (undo-tree-id335 . -104) (undo-tree-id336 . -104) (undo-tree-id337 . -53) (undo-tree-id338 . -52) (undo-tree-id339 . -53) (undo-tree-id340 . -52) (undo-tree-id341 . -104) (undo-tree-id342 . 1) (undo-tree-id343 . -104) (undo-tree-id344 . 22) (undo-tree-id345 . -83) 23187 (t 25732 61330 700127 800000)) nil (25732 61378 27847 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23295) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("    ;*******
    ;*******
    ; Wiggle
    ;*******
    ;*******
    ; Get the original position of the window" 0 4 (fontified t) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 13 (fontified t face font-lock-comment-face) 13 17 (fontified t) 17 18 (fontified t face font-lock-comment-delimiter-face) 18 26 (fontified t face font-lock-comment-face) 26 30 (fontified t) 30 32 (fontified t face font-lock-comment-delimiter-face) 32 35 (fontified t face font-lock-comment-face) 35 39 (fontified t face font-lock-comment-face) 39 43 (fontified t) 43 44 (fontified t face font-lock-comment-delimiter-face) 44 52 (fontified t face font-lock-comment-face) 52 56 (fontified t) 56 57 (fontified t face font-lock-comment-delimiter-face) 57 65 (fontified t face font-lock-comment-face) 65 69 (fontified t) 69 71 (fontified t face font-lock-comment-delimiter-face) 71 110 (fontified t face font-lock-comment-face)) . 23296) (undo-tree-id319 . -74) (undo-tree-id320 . -74) (undo-tree-id321 . -9) (undo-tree-id322 . -74) (undo-tree-id323 . -65) (undo-tree-id324 . -9) (undo-tree-id325 . -10) 23370) nil (25732 61378 27772 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23476) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("    ; Constants for the circle movement" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 39 (fontified t face font-lock-comment-face)) . 23477) (undo-tree-id311 . -39) 23516) nil (25732 61378 27502 900000) 0 nil])
([nil nil ((#("; Degrees of each step, smaller = smoother" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 42 (fontified t face font-lock-comment-face)) . 23509) (undo-tree-id306 . -42) (undo-tree-id307 . -42) (undo-tree-id308 . -42)) nil (25732 61378 27501 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -23508) (undo-tree-id304 . -1) (undo-tree-id305 . -1) 23509) nil (25732 61378 27500 200000) 0 nil])
([nil nil ((#("; Number of steps for a full circle" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 35 (fontified t face font-lock-comment-face)) . 23534) (undo-tree-id301 . -35) (undo-tree-id302 . -35) (undo-tree-id303 . -35)) nil (25732 61378 27499 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -23532) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#(" " 0 1 (fontified t)) . -23533) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 23534) nil (25732 61378 27497 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23550) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("    ; Perform the circular movement" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 35 (fontified t face font-lock-comment-face)) . 23551) (undo-tree-id296 . -23) 23574) nil (25732 61378 27495 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23573) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("        ; make sure i didn't move the window while it was wiggling" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 66 (fontified t face font-lock-comment-face)) . 23574) (undo-tree-id293 . -17) 23591) nil (25732 61378 27494 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23982) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("        ; convert the step to radians" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 37 (fontified t face font-lock-comment-face)) . 23983) (undo-tree-id290 . -5) 23988) nil (25732 61378 27492 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -24023) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (#("        ; Calculate the new position" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 27 (fontified t face font-lock-comment-face) 27 36 (fontified t face font-lock-comment-face)) . 24024) (undo-tree-id287 . -9) 24033) nil (25732 61378 27491 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -24117) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("        ; Set the new_ position" 0 1 (fontified t) 1 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 31 (fontified t face font-lock-comment-face)) . 24118) (undo-tree-id284 . -31) 24149) nil (25732 61378 27922 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -24315) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("        ; Wait some time before the next move" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 39 (fontified t face font-lock-comment-face) 39 45 (fontified t face font-lock-comment-face)) . 24316) (undo-tree-id365 . -45) 24361) nil (25732 61392 777393 500000) 0 nil] [nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -24315) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#("        ; Wait some time before the next move" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 39 (fontified t face font-lock-comment-face) 39 45 (fontified t face font-lock-comment-face)) . 24316) (undo-tree-id281 . -45) 24361) ((24315 . 24361)) (25732 61378 27485 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -24338) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#("    ; (this duplicate code should be collapsed)
    ; make sure i didn't move the window while it was wiggling" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 34 (fontified t face font-lock-comment-face) 34 48 (fontified t face font-lock-comment-face) 48 52 (fontified t) 52 54 (fontified t face font-lock-comment-delimiter-face) 54 81 (fontified t face font-lock-comment-face) 81 110 (fontified t face font-lock-comment-face)) . 24339) (undo-tree-id356 . -110) (undo-tree-id357 . -110) (undo-tree-id358 . -48) (undo-tree-id359 . -47) (undo-tree-id360 . -48) (undo-tree-id361 . -47) (undo-tree-id362 . -110) 24449) nil (25732 61392 777390 100000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -24688) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("        ; Reset the window to the original position" 0 8 (fontified t) 8 9 (fontified t face font-lock-comment-delimiter-face) 9 10 (fontified t face font-lock-comment-delimiter-face) 10 13 (fontified t face font-lock-comment-face) 13 31 (fontified t face font-lock-comment-face) 31 51 (fontified t face font-lock-comment-face)) . 24689) (undo-tree-id348 . -5) 24694) nil (25732 61392 777382 600000) 0 nil])
([nil nil ((22926 . 22927) (t 25732 61392 816412 0)) nil (25732 61422 767621 700000) 0 nil])
([nil nil ((22927 . 22948)) nil (25732 61422 767621 200000) 0 nil])
([nil nil ((22948 . 22949)) nil (25732 61422 767620 700000) 0 nil])
([nil nil ((22949 . 22970)) nil (25732 61422 767620 0) 0 nil])
([nil nil ((22970 . 22974)) nil (25732 61422 767619 500000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -22972) (undo-tree-id366 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -22973) (undo-tree-id367 . -1) 22974) nil (25732 61422 767619 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -22989) (22989 . 22990) (#(")" 0 1 (fontified nil face font-lock-comment-face)) . -22989) (22973 . 22990) (22972 . 22974)) nil (25732 61422 767608 800000) 0 nil])
([nil nil ((22990 . 23011)) nil (25732 61422 767607 800000) 0 nil])
([nil nil ((23011 . 23020)) nil (25732 61422 767604 100000) 0 nil])
([nil nil ((22987 . 23081) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . 22927) (#("; this code was taken verbatim from activate (comments removed) and should be modified there." 0 2 (fontified t face font-lock-comment-delimiter-face) 2 45 (fontified t face font-lock-comment-face) 45 62 (fontified t face font-lock-comment-face) 62 93 (fontified t face font-lock-comment-face)) . 22927) (t 25732 61422 795793 900000)) nil (25732 61455 389531 900000) 0 nil])
([nil nil ((22989 . 23083) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . 22988) (#("; this code was taken verbatim from activate (comments removed) and should be modified there." 0 2 (fontified t face font-lock-comment-delimiter-face) 2 93 (fontified t face font-lock-comment-face)) . 22988)) nil (25732 61455 389531 200000) 0 nil])
([nil nil ((22990 . 22994)) nil (25732 61455 389530 500000) 0 nil])
([nil nil ((22989 . 22990)) nil (25732 61455 389530 0) 0 nil])
([nil nil ((22990 . 22991)) nil (25732 61455 389529 400000) 0 nil])
([nil nil ((22990 . 22994) 22991) nil (25732 61455 389528 900000) 0 nil])
([nil nil ((22995 . 22998)) nil (25732 61455 389528 500000) 0 nil])
([nil nil ((22998 . 23003)) nil (25732 61455 389528 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 23009 . 23010) (nil fontified nil 23003 . 23010) (23003 . 23010)) nil (25732 61455 389527 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23016 . 23017) (nil fontified nil 23010 . 23017) (23010 . 23017)) nil (25732 61455 389526 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23023 . 23024) (nil fontified nil 23017 . 23024) (23017 . 23024)) nil (25732 61455 389525 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23030 . 23031) (nil fontified nil 23024 . 23031) (23024 . 23031)) nil (25732 61455 389525 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 23037 . 23038) (nil fontified nil 23031 . 23038) (23031 . 23038)) nil (25732 61455 389524 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23044 . 23045) (nil fontified nil 23038 . 23045) (23038 . 23045)) nil (25732 61455 389523 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23051 . 23052) (nil fontified nil 23045 . 23052) (23045 . 23052)) nil (25732 61455 389523 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23058 . 23059) (nil fontified nil 23052 . 23059) (23052 . 23059)) nil (25732 61455 389522 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23065 . 23066) (nil fontified nil 23059 . 23066) (23059 . 23066)) nil (25732 61455 389521 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23072 . 23073) (nil fontified nil 23066 . 23073) (23066 . 23073)) nil (25732 61455 389521 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23079 . 23080) (nil fontified nil 23073 . 23080) (23073 . 23080)) nil (25732 61455 389520 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23086 . 23087) (nil fontified nil 23080 . 23087) (23080 . 23087)) nil (25732 61455 389520 200000) 0 nil])
([nil nil ((23087 . 23185)) nil (25732 61455 389519 600000) 0 nil])
([nil nil ((23185 . 23381) 23087) nil (25732 61455 389518 600000) 0 nil])
([nil nil ((23185 . 23381) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . 23088) (undo-tree-id374 . -1) (#("    ; *******************************************************************************************
    ; *******************************************************************************************" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 98 (fontified t face font-lock-comment-face) 98 102 (fontified t) 102 104 (fontified t face font-lock-comment-delimiter-face) 104 195 (fontified t face font-lock-comment-face)) . -23088) (undo-tree-id375 . -97) (undo-tree-id376 . -97) (undo-tree-id377 . -195) (undo-tree-id378 . -97) (undo-tree-id379 . -195) 23185) nil (25732 61455 389517 500000) 0 nil])
([nil nil ((23283 . 23479) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . 23186) (undo-tree-id368 . -1) (#("    ; *******************************************************************************************
    ; *******************************************************************************************" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 98 (fontified t face font-lock-comment-face) 98 102 (fontified t) 102 104 (fontified t face font-lock-comment-delimiter-face) 104 195 (fontified t face font-lock-comment-face)) . -23186) (undo-tree-id369 . -97) (undo-tree-id370 . -97) (undo-tree-id371 . -97) (undo-tree-id372 . -195) (undo-tree-id373 . -195) 23283) nil (25732 61455 389511 700000) 0 nil])
([nil nil ((23226 . 23234) (#("activate" 0 8 (fontified t face font-lock-comment-face)) . 23226) (t 25732 61455 423064 200000)) nil (25732 61460 221849 100000) 0 nil])
([nil nil ((23235 . 23242) (23234 . 23236) (t 25732 61460 240790 300000)) nil (25732 61465 694362 900000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face font-lock-comment-face)) . 23244) (undo-tree-id381 . 1) (undo-tree-id382 . -1) (t 25732 61465 721897 100000)) nil (25732 61474 911896 100000) 0 nil])
([nil nil ((23244 . 23249)) nil (25732 61474 911893 400000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-comment-face)) . -23264) (undo-tree-id380 . -1) 23265) nil (25732 61474 911892 200000) 0 nil])
([nil nil ((23264 . 23265)) nil (25732 61474 911868 900000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 23265)) nil (25732 61474 911864 200000) 0 nil])
([nil nil ((22924 . 22925) (22875 . 22879) (#("    " 0 4 (fontified nil)) . 22875) (22879 . 22879) (22923 . 22924) (t 25732 61474 955973 700000)) nil (25732 61522 244741 600000) 0 nil])
([nil nil ((22925 . 22929)) nil (25732 61522 244740 700000) 0 nil])
([nil nil ((22925 . 22933) (#("Acti" 0 4 (fontified t)) . -22925) (undo-tree-id387 . -4) 22929) nil (25732 61522 244740 100000) 0 nil])
([nil nil ((22925 . 22936) (#("Activate" 0 8 (fontified t)) . -22925) (undo-tree-id386 . -8) 22933) nil (25732 61522 244739 200000) 0 nil])
([nil nil ((22936 . 22938)) nil (25732 61522 244738 100000) 0 nil])
([nil nil ((22925 . 22929) 22937) nil (25732 61522 244737 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22951 . 22952) (nil fontified nil 22951 . 22952) (nil fontified nil 22941 . 22951) (22941 . 22952)) nil (25732 61522 244736 800000) 0 nil])
([nil nil ((22952 . 22954)) nil (25732 61522 244736 100000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22964 . 22965) (nil fontified nil 22964 . 22965) (nil fontified nil 22954 . 22964) (22954 . 22965)) nil (25732 61522 244735 200000) 0 nil])
([nil nil ((22965 . 22967)) nil (25732 61522 244734 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22982 . 22983) (nil fontified nil 22977 . 22983) (nil fontified nil 22967 . 22977) (22967 . 22983)) nil (25732 61522 244734 0) 0 nil])
([nil nil ((#("SubTopLeftHeight" 0 10 (fontified t) 10 15 (fontified t) 15 16 (fontified t rear-nonsticky t)) . 22967) (undo-tree-id383 . -16) (undo-tree-id384 . -16) (undo-tree-id385 . -16) 22983) nil (25732 61522 244732 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22981 . 22982) (nil fontified nil 22977 . 22982) (nil fontified nil 22967 . 22977) (22967 . 22982)) nil (25732 61522 244720 500000) 0 nil])
([nil nil ((22982 . 22983)) nil (25732 61522 244719 600000) 0 nil])
([nil nil ((22983 . 22984)) nil (25732 61522 244718 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22999 . 23000) (nil fontified nil 22994 . 23000) (nil fontified nil 22984 . 22994) (22984 . 23000)) nil (25732 61522 244714 700000) 0 nil])
([nil nil ((22504 . 22505) (t 25732 61522 274781 500000)) nil (25732 62337 598773 400000) 0 nil])
([nil nil ((22505 . 22507)) nil (25732 62337 598772 600000) 0 nil])
([nil nil ((22505 . 22509) 22507) nil (25732 62337 598772 0) 0 nil])
([nil nil ((22511 . 22512)) nil (25732 62337 598771 100000) 0 nil])
([nil nil ((22509 . 22515) (#("Msg" 0 3 (fontified t)) . -22509) (undo-tree-id388 . -3) 22512) nil (25732 62337 598769 800000) 0 nil])
([nil nil ((22515 . 22521)) nil (25732 62337 598750 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22504) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#("    MsgBox test2" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 16 (fontified t)) . 22505) (undo-tree-id391 . -16) 22521 (t 25732 62337 632598 700000)) nil (25732 62383 152626 700000) 0 nil])
([nil nil ((23472 . 23476) (#("    " 0 4 (fontified nil)) . 23472) (23476 . 23476) (23569 . 23570) (t 25732 62343 868895 700000)) nil (25732 62394 683571 400000) 0 nil] [nil nil ((#("{" 0 1 (fontified nil)) . 22504) (undo-tree-id392 . 1) (undo-tree-id393 . -1) (22503 . 22504) (#("
" 0 1 (fontified t)) . 22502) (22503 . 22504) (t 25732 62343 868895 700000)) ((#("{" 0 1 (fontified nil)) . 22503) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (22502 . 22503) (#("
" 0 1 (fontified t)) . 22503) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (22504 . 22505)) (25732 62382 267864 400000) 0 nil])
([nil nil ((23570 . 23572)) nil (25732 62394 683570 300000) 0 nil])
([nil nil ((22504 . 22507)) ((#("his" 0 3 (fontified t)) . 22504) (undo-tree-id394 . -3) (undo-tree-id395 . 3)) (25732 62382 267783 100000) 0 nil])
([nil nil ((23570 . 23574) 23572) nil (25732 62394 683569 600000) 0 nil])
nil
([nil nil ((23576 . 23577)) nil (25732 62394 683568 600000) 0 nil])
([nil nil ((23574 . 23580) (#("Msg" 0 3 (fontified t)) . -23574) (undo-tree-id401 . -3) 23577) nil (25732 62394 683567 200000) 0 nil])
([nil nil ((23580 . 23586)) nil (25732 62394 683553 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -23569) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("    MsgBox test3" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 16 (fontified t)) . 23570) (undo-tree-id404 . -16) 23586 (t 25732 62394 715916 500000)) nil (25732 62400 24741 200000) 0 nil])
([nil nil ((#("with comments removed" 0 21 (fontified t face font-lock-comment-face)) . -23322) (undo-tree-id405 . -21) (undo-tree-id406 . -21) (undo-tree-id407 . -21) (undo-tree-id408 . -1) 23343 (t 25732 62400 65202 200000)) nil (25732 62456 767599 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 23322)) nil (25732 62456 767581 900000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 21) (23254 . 23255) (apply deactivate-cursor-after-undo 21) (apply activate-cursor-for-undo 22) (23352 . 23353) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 23) (23440 . 23441) (apply deactivate-cursor-after-undo 23) (23155 . 23156) (t 25732 62456 803022 100000)) nil (25732 62468 514404 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 23) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -23439) (apply deactivate-cursor-after-undo 23) (apply activate-cursor-for-undo 22) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -23351) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 21) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -23253) (apply deactivate-cursor-after-undo 21) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -23155) (undo-tree-id418 . -1) 23156) nil (25732 62468 818851 100000) 0 nil])
([nil nil ((23351 . 23352)) nil (25732 62494 448771 400000) 0 nil] [nil nil ((apply activate-cursor-for-undo 21) (#("**********" 0 10 (fontified t face font-lock-comment-face)) . -23243) (apply deactivate-cursor-after-undo 21) (apply activate-cursor-for-undo 22) (#("
" 0 1 (fontified t face font-lock-comment-face)) . 23341) (undo-tree-id415 . -1) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 23) (#("**********" 0 10 (fontified t face font-lock-comment-face)) . -23429) (apply deactivate-cursor-after-undo 23) (apply activate-cursor-for-undo 24) (#("**********" 0 10 (fontified t face font-lock-comment-face)) . -23527) (apply deactivate-cursor-after-undo 24) (#("**********" 0 2 (fontified t face font-lock-comment-face) 2 3 (rear-nonsticky t fontified t face font-lock-comment-face) 3 9 (fontified t face font-lock-comment-face) 9 10 (rear-nonsticky t fontified t face font-lock-comment-face)) . -23155) (undo-tree-id416 . -10) (undo-tree-id417 . -10) 23165) ((23155 . 23165) (23527 . 23537) (23429 . 23439) (23341 . 23342) (23243 . 23253)) (25732 62468 514599 200000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 26) (#("**********" 0 10 (fontified t face font-lock-comment-face)) . -23243) (apply deactivate-cursor-after-undo 26) (apply activate-cursor-for-undo 27) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -23341) (apply deactivate-cursor-after-undo 27) (apply activate-cursor-for-undo 28) (#("**********" 0 10 (fontified t face font-lock-comment-face)) . -23430) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("**********" 0 10 (fontified t face font-lock-comment-face)) . -23528) (apply deactivate-cursor-after-undo 29) (#("**********" 0 2 (fontified t face font-lock-comment-face) 2 3 (rear-nonsticky t fontified t face font-lock-comment-face) 3 9 (fontified t face font-lock-comment-face) 9 10 (rear-nonsticky t fontified t face font-lock-comment-face)) . -23155) (undo-tree-id419 . -10) (undo-tree-id420 . -10) (undo-tree-id421 . -1) (undo-tree-id422 . -10) 23165) nil (25732 62494 448768 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 24) (#("*" 0 1 (fontified t face font-lock-comment-face)) . -23501) (undo-tree-id409 . -1) (apply deactivate-cursor-after-undo 24) (apply activate-cursor-for-undo 23) (#("*" 0 1 (fontified nil face font-lock-comment-face)) . -23414) (undo-tree-id410 . -1) (apply deactivate-cursor-after-undo 23) (apply activate-cursor-for-undo 22) (#("." 0 1 (fontified t face font-lock-comment-face)) . -23328) (undo-tree-id411 . -1) (apply deactivate-cursor-after-undo 22) (apply activate-cursor-for-undo 21) (#("*" 0 1 (fontified t face font-lock-comment-face)) . -23241) (undo-tree-id412 . -1) (apply deactivate-cursor-after-undo 21) (#("*" 0 1 (fontified t face font-lock-comment-face)) . -23154) (undo-tree-id413 . -1) (undo-tree-id414 . -1) 23155) ((23154 . 23155) (23241 . 23242) (23328 . 23329) (23414 . 23415) (23501 . 23502)) (25732 62468 514394 600000) 0 nil])
([nil nil ((#("    AllWindowIds := GetAllWindowIds()
    FilteredWindowIds := FilterWindowIds(AllWindowIds)
    WindowIdsInMonitor := GetWindowIdsInMonitor(FilteredWindowIds, MonitorX, MonitorY, MonitorWidth, MonitorHeight)
    TopWindowIdInMonitor := WindowIdsInMonitor[1]
    WinActivate, ahk_id %TopWindowIdInMonitor%
    VarSetCapacity(rect, 16)
    DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect)
    originalX := NumGet(rect, 0, \"Int\")
    originalY := NumGet(rect, 4, \"Int\")
    radius := 5
    step := 90 
    steps := 360 / step
    pi := 3.14159
    Loop % steps
    {
        VarSetCapacity(rect_test, 16)
        DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect_test)
        test_X := NumGet(rect_test, 0, \"Int\")
        test_Y := NumGet(rect_test, 4, \"Int\")
        test_X := Abs(originalX - test_X)
        test_Y := Abs(originalY - test_Y)
        test_step := step * 4
        if (test_X > test_step || test_Y > test_step) {
            break
        }
        rad := A_Index * step * pi / 180
        new_X := originalX + radius * Cos(rad)
        new_Y := originalY + radius * Sin(rad)
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", new_X, \"Int\", new_Y, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
        Sleep, 3
    }
    VarSetCapacity(rect_test, 16)
    DllCall(\"GetWindowRect\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", &rect_test)
    test_X := NumGet(rect_test, 0, \"Int\")
    test_Y := NumGet(rect_test, 4, \"Int\")
    test_X := Abs(originalX - test_X)
    test_Y := Abs(originalY - test_Y)
    test_step := step * 4
    if !(test_X > test_step || test_Y > test_step) {
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", originalX, \"Int\", originalY, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
 " 0 17 (fontified t) 17 19 (fontified t face font-lock-builtin-face) 19 23 (fontified t) 23 38 (fontified t) 38 60 (fontified t) 60 62 (fontified t face font-lock-builtin-face) 62 92 (fontified t) 92 93 (fontified t) 93 116 (fontified t) 116 118 (fontified t face font-lock-builtin-face) 118 158 (fontified t) 158 159 (fontified t face font-lock-builtin-face) 159 168 (fontified t) 168 169 (fontified t face font-lock-builtin-face) 169 178 (fontified t) 178 179 (fontified t face font-lock-builtin-face) 179 192 (fontified t) 192 193 (fontified t face font-lock-builtin-face) 193 209 (fontified t) 209 234 (fontified t) 234 236 (fontified t face font-lock-builtin-face) 236 259 (fontified t) 259 263 (fontified t) 263 274 (fontified t face font-lock-keyword-face) 274 275 (fontified t face font-lock-builtin-face) 275 276 (fontified t) 276 282 (fontified t face font-lock-keyword-face) 282 283 (fontified t) 283 305 (fontified t face font-lock-variable-name-face) 305 306 (fontified t) 306 310 (fontified t) 310 324 (fontified t face font-lock-function-name-face) 324 329 (fontified t) 329 330 (fontified t face font-lock-builtin-face) 330 339 (fontified t) 339 346 (fontified t face font-lock-function-name-face) 346 347 (fontified t) 347 362 (fontified t face font-lock-string-face) 362 363 (fontified t face font-lock-builtin-face) 363 364 (fontified t) 364 369 (fontified t face font-lock-string-face) 369 370 (fontified t face font-lock-builtin-face) 370 391 (fontified t) 391 392 (fontified t face font-lock-builtin-face) 392 393 (fontified t) 393 398 (fontified t face font-lock-string-face) 398 399 (fontified t face font-lock-builtin-face) 399 400 (fontified t) 400 401 (fontified t face font-lock-builtin-face) 401 421 (fontified t) 421 423 (fontified t face font-lock-builtin-face) 423 424 (fontified t) 424 430 (fontified t face font-lock-function-name-face) 430 435 (fontified t) 435 436 (fontified t face font-lock-builtin-face) 436 438 (fontified t) 438 439 (fontified t face font-lock-builtin-face) 439 440 (fontified t) 440 445 (fontified t face font-lock-string-face) 445 447 (fontified t) 447 461 (fontified t) 461 463 (fontified t face font-lock-builtin-face) 463 464 (fontified t) 464 470 (fontified t face font-lock-function-name-face) 470 475 (fontified t) 475 476 (fontified t face font-lock-builtin-face) 476 478 (fontified t) 478 479 (fontified t face font-lock-builtin-face) 479 480 (fontified t) 480 485 (fontified t face font-lock-string-face) 485 486 (fontified t) 486 487 (fontified t) 487 498 (fontified t) 498 500 (fontified t face font-lock-builtin-face) 500 503 (fontified t) 503 512 (fontified t) 512 514 (fontified t face font-lock-builtin-face) 514 518 (fontified t) 518 519 (fontified t) 519 529 (fontified t) 529 531 (fontified t face font-lock-builtin-face) 531 536 (fontified t) 536 537 (fontified t face font-lock-builtin-face) 537 542 (fontified t) 542 543 (fontified t) 543 550 (fontified t) 550 552 (fontified t face font-lock-builtin-face) 552 554 (fontified t) 554 555 (fontified t face font-lock-builtin-face) 555 560 (fontified t) 560 561 (fontified t) 561 565 (fontified t) 565 569 (fontified t face font-lock-keyword-face) 569 578 (fontified t) 578 583 (fontified t) 583 584 (fontified t) 584 592 (fontified t) 592 606 (fontified t face font-lock-function-name-face) 606 616 (fontified t) 616 617 (fontified t face font-lock-builtin-face) 617 630 (fontified t) 630 637 (fontified t face font-lock-function-name-face) 637 638 (fontified t) 638 653 (fontified t face font-lock-string-face) 653 654 (fontified t face font-lock-builtin-face) 654 655 (fontified t) 655 660 (fontified t face font-lock-string-face) 660 661 (fontified t face font-lock-builtin-face) 661 682 (fontified t) 682 683 (fontified t face font-lock-builtin-face) 683 684 (fontified t) 684 689 (fontified t face font-lock-string-face) 689 690 (fontified t face font-lock-builtin-face) 690 691 (fontified t) 691 692 (fontified t face font-lock-builtin-face) 692 718 (fontified t) 718 720 (fontified t face font-lock-builtin-face) 720 721 (fontified t) 721 727 (fontified t face font-lock-function-name-face) 727 737 (fontified t) 737 738 (fontified t face font-lock-builtin-face) 738 740 (fontified t) 740 741 (fontified t face font-lock-builtin-face) 741 742 (fontified t) 742 747 (fontified t face font-lock-string-face) 747 764 (fontified t) 764 766 (fontified t face font-lock-builtin-face) 766 767 (fontified t) 767 773 (fontified t face font-lock-function-name-face) 773 783 (fontified t) 783 784 (fontified t face font-lock-builtin-face) 784 786 (fontified t) 786 787 (fontified t face font-lock-builtin-face) 787 788 (fontified t) 788 793 (fontified t face font-lock-string-face) 793 810 (fontified t) 810 812 (fontified t face font-lock-builtin-face) 812 813 (fontified t) 813 816 (fontified t face font-lock-function-name-face) 816 827 (fontified t) 827 828 (fontified t face font-lock-builtin-face) 828 852 (fontified t) 852 854 (fontified t face font-lock-builtin-face) 854 855 (fontified t) 855 858 (fontified t face font-lock-function-name-face) 858 869 (fontified t) 869 870 (fontified t face font-lock-builtin-face) 870 897 (fontified t) 897 899 (fontified t face font-lock-builtin-face) 899 905 (fontified t) 905 906 (fontified t face font-lock-builtin-face) 906 917 (fontified t) 917 919 (fontified t face font-lock-keyword-face) 919 928 (fontified t) 928 929 (fontified t face font-lock-builtin-face) 929 932 (fontified t) 932 940 (fontified t) 940 942 (fontified t face font-lock-builtin-face) 942 950 (fontified t) 950 951 (fontified t face font-lock-builtin-face) 951 965 (fontified t) 965 977 (fontified t) 977 982 (fontified t face font-lock-keyword-face) 982 983 (fontified t) 983 992 (fontified t) 992 993 (fontified t) 993 1005 (fontified t) 1005 1007 (fontified t face font-lock-builtin-face) 1007 1008 (fontified t) 1008 1014 (fontified t face font-lock-variable-name-face) 1014 1015 (fontified t face font-lock-variable-name-face) 1015 1016 (fontified t) 1016 1017 (fontified t face font-lock-builtin-face) 1017 1018 (fontified t) 1018 1021 (fontified t) 1021 1022 (fontified t) 1022 1023 (fontified t) 1023 1024 (fontified t face font-lock-builtin-face) 1024 1028 (fontified t) 1028 1029 (fontified t face font-lock-builtin-face) 1029 1033 (fontified t) 1033 1034 (fontified t) 1034 1048 (fontified t) 1048 1050 (fontified t face font-lock-builtin-face) 1050 1061 (fontified t) 1061 1062 (fontified t face font-lock-builtin-face) 1062 1070 (fontified t) 1070 1071 (fontified t face font-lock-builtin-face) 1071 1072 (fontified t) 1072 1075 (fontified t face font-lock-function-name-face) 1075 1081 (fontified t) 1081 1095 (fontified t) 1095 1097 (fontified t face font-lock-builtin-face) 1097 1108 (fontified t) 1108 1109 (fontified t face font-lock-builtin-face) 1109 1117 (fontified t) 1117 1118 (fontified t face font-lock-builtin-face) 1118 1119 (fontified t) 1119 1122 (fontified t face font-lock-keyword-face) 1122 1127 (fontified t) 1127 1128 (fontified t) 1128 1136 (fontified t) 1136 1143 (fontified t face font-lock-function-name-face) 1143 1144 (fontified t) 1144 1152 (fontified t face font-lock-string-face) 1152 1158 (fontified t face font-lock-string-face) 1158 1159 (fontified t face font-lock-builtin-face) 1159 1160 (fontified t) 1160 1165 (fontified t face font-lock-string-face) 1165 1166 (fontified t face font-lock-builtin-face) 1166 1187 (fontified t) 1187 1188 (fontified t face font-lock-builtin-face) 1188 1189 (fontified t) 1189 1194 (fontified t face font-lock-string-face) 1194 1195 (fontified t face font-lock-builtin-face) 1195 1197 (fontified t) 1197 1198 (fontified t face font-lock-builtin-face) 1198 1199 (fontified t) 1199 1204 (fontified t face font-lock-string-face) 1204 1205 (fontified t face font-lock-builtin-face) 1205 1211 (fontified t) 1211 1212 (fontified t face font-lock-builtin-face) 1212 1213 (fontified t) 1213 1218 (fontified t face font-lock-string-face) 1218 1219 (fontified t face font-lock-builtin-face) 1219 1225 (fontified t) 1225 1226 (fontified t face font-lock-builtin-face) 1226 1227 (fontified t) 1227 1232 (fontified t face font-lock-string-face) 1232 1233 (fontified t face font-lock-builtin-face) 1233 1235 (fontified t) 1235 1236 (fontified t face font-lock-builtin-face) 1236 1237 (fontified t) 1237 1242 (fontified t face font-lock-string-face) 1242 1243 (fontified t face font-lock-builtin-face) 1243 1245 (fontified t) 1245 1246 (fontified t face font-lock-builtin-face) 1246 1247 (fontified t) 1247 1253 (fontified t face font-lock-string-face) 1253 1254 (fontified t face font-lock-builtin-face) 1254 1262 (fontified t) 1262 1264 (fontified t face font-lock-comment-delimiter-face) 1264 1304 (fontified t face font-lock-comment-face) 1304 1318 (fontified t face font-lock-comment-face) 1318 1325 (fontified t face font-lock-comment-face) 1325 1326 (fontified t face font-lock-comment-face) 1326 1334 (fontified t) 1334 1339 (fontified t face font-lock-keyword-face) 1339 1340 (fontified t face font-lock-builtin-face) 1340 1343 (fontified t) 1343 1348 (fontified t) 1348 1349 (fontified t) 1349 1353 (fontified t) 1353 1367 (fontified t face font-lock-function-name-face) 1367 1377 (fontified t) 1377 1378 (fontified t face font-lock-builtin-face) 1378 1383 (fontified t) 1383 1387 (fontified t) 1387 1394 (fontified t face font-lock-function-name-face) 1394 1395 (fontified t) 1395 1402 (fontified t face font-lock-string-face) 1402 1410 (fontified t face font-lock-string-face) 1410 1411 (fontified t face font-lock-builtin-face) 1411 1412 (fontified t) 1412 1417 (fontified t face font-lock-string-face) 1417 1418 (fontified t face font-lock-builtin-face) 1418 1437 (fontified t) 1437 1439 (fontified t) 1439 1440 (fontified t face font-lock-builtin-face) 1440 1441 (fontified t) 1441 1446 (fontified t face font-lock-string-face) 1446 1447 (fontified t face font-lock-builtin-face) 1447 1448 (fontified t) 1448 1449 (fontified t face font-lock-builtin-face) 1449 1460 (fontified t) 1460 1464 (fontified t) 1464 1471 (fontified t) 1471 1473 (fontified t face font-lock-builtin-face) 1473 1474 (fontified t) 1474 1480 (fontified t face font-lock-function-name-face) 1480 1490 (fontified t) 1490 1491 (fontified t face font-lock-builtin-face) 1491 1493 (fontified t) 1493 1494 (fontified t face font-lock-builtin-face) 1494 1495 (fontified t) 1495 1500 (fontified t face font-lock-string-face) 1500 1502 (fontified t) 1502 1506 (fontified t) 1506 1513 (fontified t) 1513 1515 (fontified t face font-lock-builtin-face) 1515 1516 (fontified t) 1516 1522 (fontified t face font-lock-function-name-face) 1522 1532 (fontified t) 1532 1533 (fontified t face font-lock-builtin-face) 1533 1535 (fontified t) 1535 1536 (fontified t face font-lock-builtin-face) 1536 1537 (fontified t) 1537 1540 (fontified t face font-lock-string-face) 1540 1542 (fontified t face font-lock-string-face) 1542 1544 (fontified t) 1544 1548 (fontified t) 1548 1555 (fontified t) 1555 1557 (fontified t face font-lock-builtin-face) 1557 1558 (fontified t) 1558 1561 (fontified t face font-lock-function-name-face) 1561 1572 (fontified t) 1572 1573 (fontified t face font-lock-builtin-face) 1573 1582 (fontified t) 1582 1586 (fontified t) 1586 1593 (fontified t) 1593 1595 (fontified t face font-lock-builtin-face) 1595 1596 (fontified t) 1596 1598 (fontified t face font-lock-function-name-face) 1598 1599 (fontified t face font-lock-function-name-face) 1599 1610 (fontified t) 1610 1611 (fontified t face font-lock-builtin-face) 1611 1615 (fontified t) 1615 1620 (fontified t) 1620 1624 (fontified t) 1624 1634 (fontified t) 1634 1636 (fontified t face font-lock-builtin-face) 1636 1642 (fontified t) 1642 1643 (fontified t face font-lock-builtin-face) 1643 1646 (fontified t) 1646 1650 (fontified t) 1650 1652 (fontified t face font-lock-keyword-face) 1652 1662 (fontified t) 1662 1663 (fontified t face font-lock-builtin-face) 1663 1674 (fontified t) 1674 1676 (fontified t face font-lock-builtin-face) 1676 1684 (fontified t) 1684 1685 (fontified t face font-lock-builtin-face) 1685 1698 (fontified t) 1698 1699 (fontified t) 1699 1707 (fontified t) 1707 1714 (fontified t face font-lock-function-name-face) 1714 1715 (fontified t) 1715 1729 (fontified t face font-lock-string-face) 1729 1730 (fontified t face font-lock-builtin-face) 1730 1731 (fontified t) 1731 1736 (fontified t face font-lock-string-face) 1736 1737 (fontified t face font-lock-builtin-face) 1737 1758 (fontified t) 1758 1759 (fontified t face font-lock-builtin-face) 1759 1760 (fontified t) 1760 1762 (fontified t face font-lock-string-face) 1762 1765 (fontified t face font-lock-string-face) 1765 1766 (fontified t face font-lock-builtin-face) 1766 1768 (fontified t) 1768 1769 (fontified t face font-lock-builtin-face) 1769 1770 (fontified t) 1770 1775 (fontified t face font-lock-string-face) 1775 1776 (fontified t face font-lock-builtin-face) 1776 1786 (fontified t) 1786 1787 (fontified t face font-lock-builtin-face) 1787 1788 (fontified t) 1788 1793 (fontified t face font-lock-string-face) 1793 1794 (fontified t face font-lock-builtin-face) 1794 1804 (fontified t) 1804 1805 (fontified t face font-lock-builtin-face) 1805 1806 (fontified t) 1806 1811 (fontified t face font-lock-string-face) 1811 1812 (fontified t face font-lock-builtin-face) 1812 1814 (fontified t) 1814 1815 (fontified t face font-lock-builtin-face) 1815 1816 (fontified t) 1816 1821 (fontified t face font-lock-string-face) 1821 1822 (fontified t face font-lock-builtin-face) 1822 1824 (fontified t) 1824 1825 (fontified t face font-lock-builtin-face) 1825 1826 (fontified t) 1826 1832 (fontified t face font-lock-string-face) 1832 1833 (fontified t face font-lock-builtin-face) 1833 1841 (fontified t) 1841 1843 (fontified t face font-lock-comment-delimiter-face) 1843 1904 (fontified t face font-lock-comment-face) 1904 1905 (fontified t face font-lock-comment-face) 1905 1906 (fontified t)) . -23508) (undo-tree-id428 . -1906) (undo-tree-id429 . -837) (undo-tree-id430 . -93) (undo-tree-id431 . -1906) (undo-tree-id432 . -1905) (undo-tree-id433 . -1) 25414 (t 25732 62494 470679 500000)) nil (25732 62502 702679 800000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -23507) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("   }" 0 3 (fontified t) 3 4 (fontified t)) . 23508)) nil (25732 62502 702673 100000) 0 nil])
([nil nil ((23420 . 23424) (#("    " 0 4 (fontified nil)) . 23420) (23424 . 23424) (23507 . 23508) (t 25732 62502 741362 600000)) nil (25732 62536 29546 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -23507) (undo-tree-id434 . -1) (undo-tree-id435 . 1) (undo-tree-id436 . -1) 23508) nil (25732 62536 29544 800000) 0 nil])
([nil nil ((23507 . 26178)) nil (25732 62536 29529 900000) 0 nil])
([nil nil ((26173 . 26177) (#("    " 0 4 (fontified nil)) . 26173) (26177 . 26177) (26178 . 26179) (t 25732 62536 56190 800000)) nil (25732 62552 403692 200000) 0 nil])
([nil nil ((22757 . 22759) (t 25732 62552 432263 200000)) nil (25732 62669 228433 500000) 0 nil])
([nil nil ((22758 . 22760)) nil (25732 62669 228432 800000) 0 nil])
([nil nil ((22758 . 22762) 22760) nil (25732 62669 228431 900000) 0 nil])
([nil nil ((22764 . 22766)) nil (25732 62669 228431 100000) 0 nil])
([nil nil ((22762 . 22768) (#("MsgB" 0 4 (fontified t)) . -22762) (undo-tree-id437 . -4) 22766) nil (25732 62669 228430 400000) 0 nil])
([nil nil ((22768 . 22769)) nil (25732 62669 228420 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22786 . 22787) (nil fontified nil 22769 . 22787) (22769 . 22787)) nil (25732 62669 228419 700000) 0 nil])
([nil nil ((22787 . 22788)) nil (25732 62669 228418 200000) 0 nil])
([nil nil ((22769 . 22770)) nil (25732 62669 228412 500000) 0 nil])
([nil nil ((22757 . 22790) (#("
" 0 1 (fontified nil)) . 22757) (#("
    MsgBox %CurrentMonitorName%" 0 1 (fontified t) 1 5 (fontified t) 5 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t face font-lock-variable-name-face) 13 30 (fontified t face font-lock-variable-name-face) 30 31 (fontified t rear-nonsticky t face font-lock-variable-name-face) 31 32 (fontified t face font-lock-variable-name-face)) . 22757) (undo-tree-id456 . -12) (undo-tree-id457 . -13) (undo-tree-id458 . -14) (undo-tree-id459 . -12) (undo-tree-id460 . -13) (undo-tree-id461 . -13) (t 25732 62669 256099 200000)) nil (25732 62716 764945 300000) 0 nil])
([nil nil ((22792 . 22825) (#("
" 0 1 (fontified nil)) . 22758) (#("
    MsgBox %CurrentMonitorName%" 0 5 (fontified t) 5 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 32 (fontified t face font-lock-variable-name-face)) . 22758) (undo-tree-id453 . -13) (undo-tree-id454 . -13) (undo-tree-id455 . -14)) nil (25732 62716 764544 900000) 0 nil])
([nil nil ((22827 . 22860) (#("
" 0 1 (fontified nil)) . 22793) (#("
    MsgBox %CurrentMonitorName%" 0 5 (fontified t) 5 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 32 (fontified t face font-lock-variable-name-face)) . 22793) (undo-tree-id450 . -13) (undo-tree-id451 . -13) (undo-tree-id452 . -14)) nil (25732 62716 764542 900000) 0 nil])
([nil nil ((22874 . 22907) (#("
" 0 1 (fontified nil)) . 22828) (#("
    MsgBox %CurrentMonitorName%" 0 5 (fontified t) 5 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 32 (fontified t face font-lock-variable-name-face)) . 22828) (undo-tree-id447 . -13) (undo-tree-id448 . -13) (undo-tree-id449 . -14)) nil (25732 62716 764540 800000) 0 nil])
([nil nil ((22923 . 22956) (#("
" 0 1 (fontified nil)) . 22875) (#("
    MsgBox %CurrentMonitorName%" 0 5 (fontified t) 5 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 32 (fontified t face font-lock-variable-name-face)) . 22875) (undo-tree-id444 . -13) (undo-tree-id445 . -13) (undo-tree-id446 . -14)) nil (25732 62716 764538 300000) 0 nil])
([nil nil ((#("%CurrentMonitorName%" 0 20 (fontified t face font-lock-variable-name-face)) . 22936) (undo-tree-id438 . -20) (undo-tree-id439 . -1) (undo-tree-id440 . -20) (undo-tree-id441 . -1) (undo-tree-id442 . -2) (undo-tree-id443 . -20)) nil (25732 62716 765009 100000) 0 nil])
([nil nil ((22936 . 22938)) ((#("%%" 0 2 (fontified t)) . 22936) (undo-tree-id462 . -1)) (25732 62718 196780 0) 0 nil])
([nil nil ((22936 . 22937)) nil (25732 62722 551635 700000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -22936) (undo-tree-id463 . -1) 22937) nil (25732 62722 551725 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22947 . 22948) (nil fontified nil 22947 . 22948) (nil fontified nil 22937 . 22947) (22937 . 22948)) nil (25732 62729 694390 600000) 0 nil] [nil nil ((nil rear-nonsticky nil 22978 . 22979) (nil fontified nil 22977 . 22979) (nil fontified nil 22971 . 22977) (nil fontified nil 22967 . 22971) (nil fontified nil 22966 . 22967) (nil fontified nil 22963 . 22966) (nil fontified nil 22962 . 22963) (nil fontified nil 22961 . 22962) (nil fontified nil 22960 . 22961) (nil fontified nil 22955 . 22960) (nil fontified nil 22941 . 22955) (nil fontified nil 22940 . 22941) (nil fontified nil 22938 . 22940) (nil fontified nil 22937 . 22938) (22937 . 22979)) ((#(" := CurrentMonitorHeight / 2

    MsgBox %" 0 1 (fontified nil) 1 3 (fontified nil face font-lock-builtin-face) 3 4 (fontified nil) 4 18 (fontified nil) 18 23 (fontified nil) 23 24 (rear-nonsticky t fontified nil) 24 25 (fontified nil) 25 26 (fontified nil face font-lock-builtin-face) 26 29 (fontified nil) 29 30 (fontified nil) 30 34 (fontified nil) 34 40 (fontified nil face font-lock-keyword-face) 40 41 (fontified nil) 41 42 (fontified nil rear-nonsticky nil)) . 22937) (undo-tree-id464 . -42) (undo-tree-id465 . -30) (undo-tree-id466 . -1) (nil fontified t 22963 . 22966) (nil fontified t 22966 . 22967) (nil rear-nonsticky t 22978 . 22979)) (25732 62722 551621 100000) 0 nil])
([nil nil ((22925 . 22929) (#("    " 0 4 (fontified nil)) . 22925) (22929 . 22929) (22949 . 22950) (t 25732 62729 768031 900000)) nil (25732 62743 933437 500000) 0 nil])
nil
([nil nil ((22950 . 22952)) nil (25732 62743 933436 800000) 0 nil])
([nil nil ((22950 . 22954) 22952) nil (25732 62743 933436 100000) 0 nil])
([nil nil ((22956 . 22957)) nil (25732 62743 933435 400000) 0 nil])
([nil nil ((22954 . 22960) (#("Msg" 0 3 (fontified t)) . -22954) (undo-tree-id469 . -3) 22957) nil (25732 62743 933503 700000) 0 nil])
([nil nil ((22960 . 22982)) nil (25732 62771 450051 700000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 22960) (undo-tree-id467 . -1) (undo-tree-id468 . -1)) ((22960 . 22961)) (25732 62743 933430 900000) 0 nil])
([nil nil ((22960 . 22962)) nil (25732 62771 450051 100000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 22972 . 22973) (nil fontified nil 22972 . 22973) (nil fontified nil 22962 . 22972) (22962 . 22973)) nil (25732 62771 450050 500000) 0 nil])
([nil nil ((22973 . 22974)) nil (25732 62771 450049 600000) 0 nil])
([nil nil ((22985 . 22987)) nil (25732 62771 450049 0) 0 nil])
([nil nil ((22997 . 22998)) nil (25732 62771 450048 400000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -22997) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("x" 0 1 (fontified t)) . -22998) (undo-tree-id472 . -1) (undo-tree-id473 . -1) 22999) nil (25732 62771 450047 400000) 0 nil])
([nil nil ((22997 . 22998)) nil (25732 62771 450036 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23001 . 23002) (nil fontified nil 22997 . 23002) (nil fontified nil 22987 . 22997) (22987 . 23002)) nil (25732 62771 450035 900000) 0 nil])
([nil nil ((23002 . 23003)) nil (25732 62771 450035 200000) 0 nil])
([nil nil ((23014 . 23016)) nil (25732 62771 450034 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23031 . 23032) (nil fontified nil 23026 . 23032) (nil fontified nil 23016 . 23026) (23016 . 23032)) nil (25732 62771 450033 800000) 0 nil])
([nil nil ((23032 . 23033)) nil (25732 62771 450029 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22923) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("
    MsgBox %SubTopLeftX%
    MsgBox %SubTopLeftY%
    MsgBox %SubTopLeftWidth%
    MsgBox %SubTopLeftHeight%" 0 1 (fontified t) 1 5 (fontified t) 5 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t face font-lock-variable-name-face) 13 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t rear-nonsticky t face font-lock-variable-name-face) 24 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t) 26 30 (fontified t) 30 36 (fontified t face font-lock-keyword-face) 36 37 (fontified t) 37 38 (fontified t face font-lock-variable-name-face) 38 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t rear-nonsticky t face font-lock-variable-name-face) 49 50 (fontified t face font-lock-variable-name-face) 50 51 (fontified t) 51 55 (fontified t) 55 61 (fontified t face font-lock-keyword-face) 61 62 (fontified t) 62 63 (fontified t face font-lock-variable-name-face) 63 73 (fontified t face font-lock-variable-name-face) 73 77 (fontified t face font-lock-variable-name-face) 77 78 (fontified t rear-nonsticky t face font-lock-variable-name-face) 78 79 (fontified t face font-lock-variable-name-face) 79 80 (fontified t) 80 84 (fontified t) 84 90 (fontified t face font-lock-keyword-face) 90 91 (fontified t) 91 92 (fontified t face font-lock-variable-name-face) 92 102 (fontified t face font-lock-variable-name-face) 102 107 (fontified t face font-lock-variable-name-face) 107 108 (fontified t rear-nonsticky t face font-lock-variable-name-face) 108 109 (fontified t face font-lock-variable-name-face)) . 22924) (undo-tree-id489 . -109) (undo-tree-id490 . -12) (undo-tree-id491 . -12) (undo-tree-id492 . -13) (undo-tree-id493 . -89) (undo-tree-id494 . -38) (undo-tree-id495 . -63) (undo-tree-id496 . -92) (undo-tree-id497 . -109) (undo-tree-id498 . -92) (undo-tree-id499 . -93) (undo-tree-id500 . -109) (t 25732 62771 513497 900000)) nil (25732 62805 149377 300000) 0 nil])
([nil nil ((23508 . 23509)) nil (25732 62805 148919 500000) 0 nil])
([nil nil ((23508 . 23618)) nil (25732 62805 148914 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23508) (undo-tree-id501 . -1) (undo-tree-id502 . -1) 23509 (t 25732 62805 216533 100000)) nil (25732 62808 871916 300000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 33) (#("SubTopLeft" 0 10 (fontified t face font-lock-variable-name-face)) . -23570) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (#("SubTopLeft" 0 10 (fontified t face font-lock-variable-name-face)) . -23551) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (#("SubTopLeft" 0 10 (fontified t face font-lock-variable-name-face)) . -23536) (apply deactivate-cursor-after-undo 31) (#("SubTopLeft" 0 10 (fontified t face font-lock-variable-name-face)) . -23521) (undo-tree-id503 . -10) (undo-tree-id504 . -10) (undo-tree-id505 . -10) 23531 (t 25732 62808 938974 600000)) nil (25732 62843 245992 700000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 33) (23597 . 23598) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (23571 . 23572) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (23549 . 23550) (apply deactivate-cursor-after-undo 31) (23527 . 23528) (apply activate-cursor-for-undo 33) (23593 . 23594) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (23568 . 23569) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (23547 . 23548) (apply deactivate-cursor-after-undo 31) (23526 . 23527) (apply activate-cursor-for-undo 33) (23589 . 23590) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (23565 . 23566) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (23545 . 23546) (apply deactivate-cursor-after-undo 31) (23525 . 23526) (apply activate-cursor-for-undo 33) (23585 . 23586) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (23562 . 23563) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (23543 . 23544) (apply deactivate-cursor-after-undo 31) (23524 . 23525) (apply activate-cursor-for-undo 33) (23581 . 23582) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (23559 . 23560) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (23541 . 23542) (apply deactivate-cursor-after-undo 31) (23523 . 23524) (apply activate-cursor-for-undo 33) (23577 . 23578) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (23556 . 23557) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (23539 . 23540) (apply deactivate-cursor-after-undo 31) (23522 . 23523) (apply activate-cursor-for-undo 33) (23573 . 23574) (apply deactivate-cursor-after-undo 33) (apply activate-cursor-for-undo 32) (23553 . 23554) (apply deactivate-cursor-after-undo 32) (apply activate-cursor-for-undo 31) (23537 . 23538) (apply deactivate-cursor-after-undo 31) (23521 . 23522)) nil (25732 62843 245971 300000) 0 nil])
([nil nil ((apply -8 23508 23615 undo--wrap-and-run-primitive-undo 23508 23615 ((23589 . 23591) (23561 . 23563) (23537 . 23539) (23513 . 23515) 23606)) (t 25732 62843 269982 900000)) nil (25732 62858 430513 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -23507) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("
    ; MsgBox %MonitorX%
    ; MsgBox %MonitorY%
    ; MsgBox %MonitorWidth%
    ; MsgBox %MonitorHeight%
" 0 1 (fontified t) 1 5 (fontified t) 5 7 (fontified t face font-lock-comment-delimiter-face) 7 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 22 (fontified t face font-lock-comment-face) 22 23 (rear-nonsticky t fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 29 (fontified t) 29 31 (fontified t face font-lock-comment-delimiter-face) 31 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 46 (fontified t face font-lock-comment-face) 46 47 (rear-nonsticky t fontified t face font-lock-comment-face) 47 48 (fontified t face font-lock-comment-face) 48 49 (fontified t face font-lock-comment-face) 49 53 (fontified t) 53 55 (fontified t face font-lock-comment-delimiter-face) 55 61 (fontified t face font-lock-comment-face) 61 62 (fontified t face font-lock-comment-face) 62 70 (fontified t face font-lock-comment-face) 70 74 (fontified t face font-lock-comment-face) 74 75 (rear-nonsticky t fontified t face font-lock-comment-face) 75 76 (fontified t face font-lock-comment-face) 76 77 (fontified t face font-lock-comment-face) 77 81 (fontified t) 81 83 (fontified t face font-lock-comment-delimiter-face) 83 89 (fontified t face font-lock-comment-face) 89 90 (fontified t face font-lock-comment-face) 90 98 (fontified t face font-lock-comment-face) 98 103 (fontified t face font-lock-comment-face) 103 104 (rear-nonsticky t fontified t face font-lock-comment-face) 104 105 (fontified t face font-lock-comment-face) 105 106 (fontified t face font-lock-comment-face)) . 23508) (undo-tree-id517 . -106) (undo-tree-id518 . -24) (undo-tree-id519 . -15) (undo-tree-id520 . -106) (undo-tree-id521 . -15) (undo-tree-id522 . -106) (undo-tree-id523 . -1) (undo-tree-id524 . 15) (undo-tree-id525 . -104) (undo-tree-id526 . -106) 23614 (t 25732 62858 467190 100000)) nil (25732 62866 661515 800000) 0 nil])
([nil nil ((23420 . 23424) (#("    " 0 4 (fontified nil)) . 23420) (23424 . 23424) (23507 . 23508)) nil (25732 62866 661348 500000) 0 nil])
([nil nil ((#("    ; " 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face)) . 23657) (undo-tree-id530 . -6) (undo-tree-id531 . -6) (undo-tree-id532 . -6) (t 25732 62866 693139 700000)) nil (25732 62994 837871 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -23656) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) 23657) nil (25732 63392 127009 900000) 1 nil])
([nil nil ((23656 . 23657)) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 23656) (undo-tree-id664 . -1) (undo-tree-id665 . -1)) (25732 63386 122753 100000) -1 nil] [nil nil ((23656 . 23657)) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 23656)) (25732 63393 688651 800000) 0 nil])
nil
([nil nil ((23869 . 23870) (23819 . 23823) (#("    " 0 4 (fontified nil)) . 23819) (23868 . 23869)) ((#("
" 0 1 (fontified nil)) . 23868) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id651 . -1) (undo-tree-id653 . -1) (undo-tree-id655 . -1) (23819 . 23823) (#("    " 0 4 (fontified t)) . 23819) (undo-tree-id656 . -4) (#("
" 0 1 (fontified t)) . 23869) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id660 . -1) (undo-tree-id662 . -1)) (25732 63393 833648 0) 0 nil])
([nil nil ((23870 . 23872)) ((#("Ms" 0 2 (fontified t)) . 23870) (undo-tree-id647 . -2)) (25732 63393 975139 0) 0 nil])
([nil nil ((23870 . 23874)) ((#("    " 0 4 (fontified t)) . 23870) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id645 . -4)) (25732 63394 115129 300000) 0 nil])
([nil nil ((23876 . 23877)) ((#("B" 0 1 (fontified t)) . 23876) (undo-tree-id641 . -1)) (25732 63394 305302 0) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . 23876)) ((23876 . 23877)) (25732 63394 481480 500000) 0 nil])
([nil nil ((23876 . 23878)) ((#("gB" 0 2 (fontified t)) . 23876) (undo-tree-id640 . -2)) (25732 63394 655071 0) 0 nil])
([nil nil ((23874 . 23880) (#("MsgB" 0 2 (fontified t) 2 4 (fontified t)) . 23874) (undo-tree-id666 . -2) (undo-tree-id667 . -2)) ((23874 . 23878) (#("MsgBox" 0 6 (fontified t face font-lock-keyword-face)) . 23874) (undo-tree-id634 . -6) (undo-tree-id635 . -6) (undo-tree-id637 . -6) (undo-tree-id639 . -6)) (25732 63394 831443 900000) 0 nil])
([nil nil ((23880 . 23881)) ((#(" " 0 1 (fontified t)) . 23880) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id631 . -1) (undo-tree-id633 . -1)) (25732 63394 996074 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23902 . 23903) (23881 . 23903)) ((#("%TopWindowIdInMonitor%" 0 21 (fontified nil face font-lock-variable-name-face) 21 22 (rear-nonsticky nil fontified nil face font-lock-variable-name-face)) . 23881) (undo-tree-id621 . -22) (undo-tree-id623 . -22) (undo-tree-id625 . -22) (undo-tree-id627 . -21) (nil rear-nonsticky t 23902 . 23903)) (25732 63395 159624 600000) 0 nil])
([nil nil ((apply -2 23870 23906 undo--wrap-and-run-primitive-undo 23870 23906 ((23874 . 23876)))) ((apply 2 23870 23904 undo--wrap-and-run-primitive-undo 23870 23904 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 23874) 23905))) (25732 63395 339048 0) 0 nil] [nil nil ((23903 . 23905) (t 25732 63078 520728 900000)) ((#(" ;" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 23903) (undo-tree-id535 . -2)) (25732 63142 814767 700000) 0 nil])
([nil nil ((apply 2 23870 23903 undo--wrap-and-run-primitive-undo 23870 23903 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 23874)))) ((apply -2 23870 23905 undo--wrap-and-run-primitive-undo 23870 23905 ((23874 . 23876) 23903))) (25732 63395 508375 800000) 0 nil])
nil
([nil nil ((apply -2 23870 23906 undo--wrap-and-run-primitive-undo 23870 23906 ((23874 . 23876)))) ((apply 2 23870 23904 undo--wrap-and-run-primitive-undo 23870 23904 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 23874) 23905))) (25732 63396 14946 700000) 0 nil])
([nil nil ((23905 . 23941)) ((#("
    ; MsgBox %TopWindowIdInMonitor%" 0 1 (fontified t face font-lock-comment-face) 1 5 (fontified t) 5 7 (fontified t face font-lock-comment-delimiter-face) 7 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 35 (fontified t face font-lock-comment-face) 35 36 (fontified t face font-lock-comment-face)) . 23905) (undo-tree-id615 . -36) (undo-tree-id617 . -1) (undo-tree-id619 . -36)) (25732 63396 211400 500000) 0 nil])
([nil nil ((apply 2 23906 23939 undo--wrap-and-run-primitive-undo 23906 23939 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 23910)))) ((apply -2 23906 23941 undo--wrap-and-run-primitive-undo 23906 23941 ((23910 . 23912) 23940))) (25732 63396 395225 100000) 0 nil])
([nil nil ((23940 . 23941)) ((#("
" 0 1 (fontified t)) . 23940)) (25732 63396 574714 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23984 . 23985) (23940 . 23985)) ((#("TopWindowIdInMonitor := WindowIdsInMonitor[1]" 0 21 (fontified nil) 21 23 (fontified nil face font-lock-builtin-face) 23 44 (fontified nil) 44 45 (fontified nil rear-nonsticky nil)) . 23940) (undo-tree-id610 . -45) (undo-tree-id611 . 1) (undo-tree-id612 . -45) (undo-tree-id613 . 3) (undo-tree-id614 . -43) (nil rear-nonsticky t 23984 . 23985)) (25732 63396 756945 0) 0 nil])
([nil nil ((23940 . 23944)) ((#("    " 0 4 (fontified t)) . 23940)) (25732 63396 928167 800000) 0 nil])
([nil nil ((23906 . 23956) (#("
    TopWindowIdInMonitor := WindowIdsInMonitor[1]" 0 1 (fontified t) 1 5 (fontified t) 5 26 (fontified t) 26 28 (fontified t face font-lock-builtin-face) 28 49 (fontified t) 49 50 (fontified t rear-nonsticky t)) . 23939) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1)) ((23939 . 23989) (#("    TopWindowIdInMonitor := WindowIdsInMonitor[1]
" 0 4 (fontified t) 4 24 (fontified t) 24 25 (fontified t) 25 27 (fontified t face font-lock-builtin-face) 27 28 (fontified t) 28 46 (fontified t) 46 50 (fontified t)) . 23906) (undo-tree-id607 . -28) (undo-tree-id609 . -4)) (25732 63397 109831 700000) 0 nil])
([nil nil ((#("TopWindowIdInMonitor" 0 20 (fontified t)) . 23910)) ((23910 . 23930)) (25732 63397 290362 800000) 0 nil])
([nil nil ((23967 . 23968) (23919 . 23920) (23965 . 23966) (23918 . 23919) (23963 . 23964) (23917 . 23918) (23961 . 23962) (23916 . 23917) (23959 . 23960) (23915 . 23916) (23957 . 23958) (23914 . 23915) (23955 . 23956) (23913 . 23914) (23953 . 23954) (23912 . 23913) (23951 . 23952) (23911 . 23912) (23949 . 23950) (#("TopWindowIdInMonitor" 0 20 (fontified t face font-lock-variable-name-face)) . 23949) (23910 . 23911)) ((#("T" 0 1 (fontified nil)) . 23910) (23949 . 23969) (#("T" 0 1 (fontified nil face font-lock-variable-name-face)) . 23949) (#("e" 0 1 (fontified nil)) . 23911) (#("e" 0 1 (fontified nil face font-lock-variable-name-face)) . 23951) (#("s" 0 1 (fontified nil)) . 23912) (#("s" 0 1 (fontified nil face font-lock-variable-name-face)) . 23953) (#("t" 0 1 (fontified nil)) . 23913) (#("t" 0 1 (fontified nil face font-lock-variable-name-face)) . 23955) (#("W" 0 1 (fontified nil)) . 23914) (#("W" 0 1 (fontified nil face font-lock-variable-name-face)) . 23957) (#("i" 0 1 (fontified nil)) . 23915) (#("i" 0 1 (fontified nil face font-lock-variable-name-face)) . 23959) (#("n" 0 1 (fontified nil)) . 23916) (#("n" 0 1 (fontified nil face font-lock-variable-name-face)) . 23961) (#("d" 0 1 (fontified nil)) . 23917) (#("d" 0 1 (fontified nil face font-lock-variable-name-face)) . 23963) (#("o" 0 1 (fontified nil)) . 23918) (#("o" 0 1 (fontified nil face font-lock-variable-name-face)) . 23965) (#("w" 0 1 (fontified t)) . 23919) (#("w" 0 1 (fontified t face font-lock-variable-name-face)) . 23967)) (25732 63397 470286 300000) 0 nil])
([nil nil ((#("WindowIdsInMonitor" 0 18 (fontified t)) . 23924)) ((23924 . 23942)) (25732 63397 642021 300000) 0 nil])
([nil nil ((23924 . 23930)) ((#("Filter" 0 6 (fontified t)) . 23924) (undo-tree-id605 . -6)) (25732 63397 817171 300000) 0 nil])
([nil nil ((23924 . 23939) (#("Filter" 0 6 (fontified t)) . 23924)) ((23924 . 23930) (#("FilterWindowIds" 0 15 (fontified t)) . 23924) (undo-tree-id602 . -6) (undo-tree-id604 . -6)) (25732 63397 998043 400000) 0 nil])
([nil nil ((23930 . 23932)) ((#("ed" 0 2 (fontified t)) . 23930) (undo-tree-id600 . -2)) (25732 63398 161088 800000) 0 nil])
([nil nil ((#("

    ; MsgBox %TopWindowIdInMonitor%
    TestWindow := FilteredWindowIds[1]
    MsgBox %TestWindow%" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 8 (fontified t face font-lock-comment-delimiter-face) 8 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 36 (fontified t face font-lock-comment-face) 36 37 (rear-nonsticky t fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 55 (fontified t face font-lock-builtin-face) 55 56 (fontified t) 56 62 (fontified t) 62 64 (fontified t) 64 73 (fontified t) 73 77 (fontified t) 77 81 (fontified t) 81 87 (fontified t face font-lock-keyword-face) 87 88 (fontified t) 88 89 (fontified t face font-lock-variable-name-face) 89 90 (fontified t face font-lock-variable-name-face) 90 91 (fontified t face font-lock-variable-name-face) 91 92 (fontified t face font-lock-variable-name-face) 92 93 (fontified t face font-lock-variable-name-face) 93 94 (fontified t face font-lock-variable-name-face) 94 95 (fontified t face font-lock-variable-name-face) 95 96 (fontified t face font-lock-variable-name-face) 96 97 (fontified t face font-lock-variable-name-face) 97 98 (fontified t face font-lock-variable-name-face) 98 99 (fontified t face font-lock-variable-name-face) 99 100 (fontified t face font-lock-variable-name-face)) . 23868) (undo-tree-id671 . -15) (undo-tree-id672 . -100) (undo-tree-id673 . -62) (undo-tree-id674 . -62) (undo-tree-id675 . -100)) ((23868 . 23968)) (25732 63398 333345 600000) 0 nil])
([nil nil ((22832 . 22833) (22794 . 22795) (22830 . 22831) (22793 . 22794) (22828 . 22829) (22792 . 22793)) ((#(" " 0 1 (fontified nil)) . 22792) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (#(" " 0 1 (fontified nil)) . 22828) (#("-" 0 1 (fontified nil face font-lock-builtin-face)) . 22793) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("-" 0 1 (fontified nil face font-lock-builtin-face)) . 22830) (#(" " 0 1 (fontified t)) . 22794) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (#(" " 0 1 (fontified t)) . 22832)) (25732 63398 522154 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22862 . 22863) (22848 . 22863) (nil rear-nonsticky nil 22809 . 22810) (22795 . 22810)) ((#("EdgeForgiveness" 0 14 (fontified nil) 14 15 (fontified nil rear-nonsticky nil)) . 22795) (nil rear-nonsticky t 22809 . 22810) (#("EdgeForgiveness" 0 14 (fontified nil) 14 15 (fontified nil rear-nonsticky nil)) . 22848) (nil rear-nonsticky t 22862 . 22863) (t 25732 63322 102772 600000)) (25732 63398 691510 900000) 0 nil])
([nil nil ((22757 . 22758) (t 25732 63322 102772 600000)) nil (25732 63423 856773 0) 0 nil])
([nil nil ((22758 . 22760)) nil (25732 63423 856772 100000) 0 nil])
([nil nil ((22758 . 22762) 22760) nil (25732 63423 856771 300000) 0 nil])
([nil nil ((22764 . 22774)) nil (25734 17084 28580 0) 0 nil])
([nil nil ((22769 . 22784) (#("EdgeF" 0 5 (fontified t)) . 22769) (undo-tree-id689 . -5)) ((22769 . 22774) (#("EdgeForgiveness" 0 15 (fontified t)) . 22769) (t 25732 63423 901423 100000)) (25734 17106 53343 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23643 . 23644) (nil fontified nil 23642 . 23644) (nil fontified nil 23641 . 23642) (nil fontified nil 23640 . 23641) (nil fontified nil 23639 . 23640) (nil fontified nil 23634 . 23639) (nil fontified nil 23624 . 23634) (nil fontified nil 23623 . 23624) (nil fontified nil 23622 . 23623) (nil fontified nil 23621 . 23622) (nil fontified nil 23617 . 23621) (nil fontified nil 23607 . 23617) (nil fontified nil 23606 . 23607) (nil fontified nil 23605 . 23606) (nil fontified nil 23604 . 23605) (nil fontified nil 23594 . 23604) (nil fontified nil 23593 . 23594) (nil fontified nil 23592 . 23593) (nil fontified nil 23591 . 23592) (nil fontified nil 23581 . 23591) (nil fontified nil 23580 . 23581) (nil fontified nil 23569 . 23580) (nil fontified nil 23565 . 23569) (nil fontified nil 23564 . 23565) (nil fontified nil 23563 . 23564) (nil fontified nil 23561 . 23563) (nil fontified nil 23560 . 23561) (nil fontified nil 23559 . 23560) (nil fontified nil 23558 . 23559) (nil fontified nil 23553 . 23558) (nil fontified nil 23539 . 23553) (nil fontified nil 23538 . 23539) (nil fontified nil 23536 . 23538) (nil fontified nil 23529 . 23536) (nil fontified nil 23519 . 23529) (nil fontified nil 23515 . 23519) (nil fontified nil 23512 . 23515) (nil fontified nil 23511 . 23512) (nil fontified nil 23510 . 23511) (nil fontified nil 23509 . 23510) (nil fontified nil 23505 . 23509) (nil fontified nil 23491 . 23505) (nil fontified nil 23490 . 23491) (nil fontified nil 23488 . 23490) (nil fontified nil 23482 . 23488) (nil fontified nil 23468 . 23482) (nil fontified nil 23467 . 23468) (nil fontified nil 23466 . 23467) (nil fontified nil 23452 . 23466) (nil fontified nil 23451 . 23452) (nil fontified nil 23450 . 23451) (nil fontified nil 23449 . 23450) (nil fontified nil 23448 . 23449) (nil fontified nil 23434 . 23448) (nil fontified nil 23433 . 23434) (nil fontified nil 23431 . 23433) (nil fontified nil 23429 . 23431) (nil fontified nil 23415 . 23429) (nil fontified nil 23414 . 23415) (nil fontified nil 23413 . 23414) (nil fontified nil 23399 . 23413) (nil fontified nil 23398 . 23399) (nil fontified nil 23397 . 23398) (nil fontified nil 23396 . 23397) (nil fontified nil 23395 . 23396) (nil fontified nil 23381 . 23395) (nil fontified nil 23380 . 23381) (nil fontified nil 23378 . 23380) (nil fontified nil 23376 . 23378) (nil fontified nil 23362 . 23376) (nil fontified nil 23361 . 23362) (nil fontified nil 23346 . 23361) (nil fontified nil 23345 . 23346) (nil fontified nil 23339 . 23345) (nil fontified nil 23335 . 23339) (nil fontified nil 23334 . 23335) (nil fontified nil 23315 . 23334) (nil fontified nil 23313 . 23315) (nil fontified nil 23292 . 23313) (nil fontified nil 23288 . 23292) (nil fontified nil 23269 . 23288) (nil fontified nil 23267 . 23269) (nil fontified nil 23247 . 23267) (nil fontified nil 23243 . 23247) (nil fontified nil 23224 . 23243) (nil fontified nil 23222 . 23224) (nil fontified nil 23206 . 23222) (nil fontified nil 23202 . 23206) (nil fontified nil 23183 . 23202) (nil fontified nil 23181 . 23183) (nil fontified nil 23178 . 23181) (nil fontified nil 23165 . 23178) (nil fontified nil 23161 . 23165) (nil fontified nil 23142 . 23161) (nil fontified nil 23140 . 23142) (nil fontified nil 23117 . 23140) (nil fontified nil 23116 . 23117) (nil fontified nil 23115 . 23116) (nil fontified nil 23103 . 23115) (nil fontified nil 23101 . 23103) (nil fontified nil 23100 . 23101) (nil fontified nil 23099 . 23100) (nil fontified nil 23086 . 23099) (nil fontified nil 23082 . 23086) (nil fontified nil 23081 . 23082) (nil fontified nil 23080 . 23081) (nil fontified nil 23079 . 23080) (nil fontified nil 23077 . 23079) (nil fontified nil 23067 . 23077) (23067 . 23644) (t 25732 63423 901423 100000)) nil (25734 17125 400624 500000) 0 nil] [nil nil ((#("
SubTopLeft()
{
    CurrentMonitor := GetMonitor()
    CurrentMonitorName := CurrentMonitor[1]
    CurrentMonitorX := CurrentMonitor[2]
    CurrentMonitorY := CurrentMonitor[3]
    CurrentMonitorWidth := CurrentMonitor[4]
    CurrentMonitorHeight := CurrentMonitor[5]

    global EdgeForgiveness
    SubTopLeftX := CurrentMonitorX - EdgeForgiveness
    SubTopLeftY := CurrentMonitorY - EdgeForgiveness
    SubTopLeftWidth := CurrentMonitorWidth / 2
    SubTopLeftHeight := CurrentMonitorHeight / 2

    ActivateSub(SubTopLeftX, SubTopLeftY, SubTopLeftWidth, SubTopLeftHeight)
}
" 0 1 (fontified t) 1 11 (fontified t face font-lock-function-name-face) 11 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t) 20 33 (fontified t) 33 34 (rear-nonsticky t fontified t) 34 35 (fontified t) 35 37 (fontified t face font-lock-builtin-face) 37 49 (fontified t) 49 50 (rear-nonsticky t fontified t) 50 51 (fontified t) 51 74 (fontified t) 74 76 (fontified t face font-lock-builtin-face) 76 95 (fontified t) 95 99 (fontified t) 99 112 (fontified t) 112 115 (fontified t) 115 117 (fontified t face font-lock-builtin-face) 117 136 (fontified t) 136 140 (fontified t) 140 156 (fontified t) 156 158 (fontified t face font-lock-builtin-face) 158 177 (fontified t) 177 181 (fontified t) 181 201 (fontified t) 201 203 (fontified t face font-lock-builtin-face) 203 222 (fontified t) 222 226 (fontified t) 226 247 (fontified t) 247 249 (fontified t face font-lock-builtin-face) 249 268 (fontified t) 268 269 (fontified t) 269 273 (fontified t) 273 279 (fontified t face font-lock-keyword-face) 279 280 (fontified t) 280 295 (fontified t) 295 296 (fontified t) 296 310 (fontified t) 310 312 (fontified t) 312 314 (fontified t face font-lock-builtin-face) 314 315 (fontified t) 315 329 (fontified t) 329 330 (rear-nonsticky t fontified t) 330 331 (fontified t) 331 332 (fontified t face font-lock-builtin-face) 332 333 (fontified t) 333 347 (fontified t) 347 348 (rear-nonsticky t fontified t) 348 349 (fontified t) 349 363 (fontified t) 363 365 (fontified t) 365 367 (fontified t face font-lock-builtin-face) 367 368 (fontified t) 368 382 (fontified t) 382 383 (rear-nonsticky t fontified t) 383 384 (fontified t) 384 385 (fontified t face font-lock-builtin-face) 385 386 (fontified t) 386 400 (fontified t) 400 401 (rear-nonsticky t fontified t) 401 402 (fontified t) 402 416 (fontified t) 416 422 (fontified t) 422 424 (fontified t face font-lock-builtin-face) 424 425 (fontified t) 425 439 (fontified t) 439 443 (fontified t) 443 444 (rear-nonsticky t fontified t) 444 445 (fontified t) 445 446 (fontified t face font-lock-builtin-face) 446 449 (fontified t) 449 453 (fontified t) 453 463 (fontified t) 463 470 (fontified t) 470 472 (fontified t face font-lock-builtin-face) 472 473 (fontified t) 473 487 (fontified t) 487 492 (fontified t) 492 493 (rear-nonsticky t fontified t) 493 494 (fontified t) 494 495 (fontified t face font-lock-builtin-face) 495 497 (fontified t) 497 498 (fontified t) 498 499 (fontified t) 499 503 (fontified t) 503 514 (fontified t) 514 515 (fontified t) 515 525 (fontified t) 525 526 (rear-nonsticky t fontified t) 526 527 (fontified t face font-lock-builtin-face) 527 528 (fontified t) 528 538 (fontified t) 538 539 (rear-nonsticky t fontified t) 539 540 (fontified t face font-lock-builtin-face) 540 541 (fontified t) 541 551 (fontified t) 551 555 (fontified t) 555 556 (rear-nonsticky t fontified t) 556 557 (fontified t face font-lock-builtin-face) 557 558 (fontified t) 558 568 (fontified t) 568 573 (fontified t) 573 574 (rear-nonsticky t fontified t) 574 575 (fontified t) 575 576 (fontified t) 576 578 (fontified t)) . -22489) (undo-tree-id706 . -574) (undo-tree-id707 . -268) (undo-tree-id708 . -1) (undo-tree-id709 . -14) (undo-tree-id710 . -578) (undo-tree-id711 . -578) (undo-tree-id712 . -1) (undo-tree-id713 . -578) (t 25732 63423 901423 100000)) ((22489 . 23067)) (25734 17105 431542 200000) 0 nil] [nil nil ((#("
SubTopLeft()
{
    CurrentMonitor := GetMonitor()
    CurrentMonitorName := CurrentMonitor[1]
    CurrentMonitorX := CurrentMonitor[2]
    CurrentMonitorY := CurrentMonitor[3]
    CurrentMonitorWidth := CurrentMonitor[4]
    CurrentMonitorHeight := CurrentMonitor[5]

    global EdgeForgiveness
    SubTopLeftX := CurrentMonitorX - EdgeForgiveness
    SubTopLeftY := CurrentMonitorY - EdgeForgiveness
    SubTopLeftWidth := CurrentMonitorWidth / 2
    SubTopLeftHeight := CurrentMonitorHeight / 2

    ActivateSub(SubTopLeftX, SubTopLeftY, SubTopLeftWidth, SubTopLeftHeight)
}
" 0 1 (fontified t) 1 11 (fontified t face font-lock-function-name-face) 11 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t) 20 33 (fontified t) 33 34 (rear-nonsticky t fontified t) 34 35 (fontified t) 35 37 (fontified t face font-lock-builtin-face) 37 49 (fontified t) 49 50 (rear-nonsticky t fontified t) 50 51 (fontified t) 51 74 (fontified t) 74 76 (fontified t face font-lock-builtin-face) 76 95 (fontified t) 95 99 (fontified t) 99 112 (fontified t) 112 115 (fontified t) 115 117 (fontified t face font-lock-builtin-face) 117 136 (fontified t) 136 140 (fontified t) 140 156 (fontified t) 156 158 (fontified t face font-lock-builtin-face) 158 177 (fontified t) 177 181 (fontified t) 181 201 (fontified t) 201 203 (fontified t face font-lock-builtin-face) 203 222 (fontified t) 222 226 (fontified t) 226 247 (fontified t) 247 249 (fontified t face font-lock-builtin-face) 249 268 (fontified t) 268 269 (fontified t) 269 273 (fontified t) 273 279 (fontified t face font-lock-keyword-face) 279 280 (fontified t) 280 295 (fontified t) 295 296 (fontified t) 296 310 (fontified t) 310 312 (fontified t) 312 314 (fontified t face font-lock-builtin-face) 314 315 (fontified t) 315 329 (fontified t) 329 330 (rear-nonsticky t fontified t) 330 331 (fontified t) 331 332 (fontified t face font-lock-builtin-face) 332 333 (fontified t) 333 347 (fontified t) 347 348 (rear-nonsticky t fontified t) 348 349 (fontified t) 349 363 (fontified t) 363 365 (fontified t) 365 367 (fontified t face font-lock-builtin-face) 367 368 (fontified t) 368 382 (fontified t) 382 383 (rear-nonsticky t fontified t) 383 384 (fontified t) 384 385 (fontified t face font-lock-builtin-face) 385 386 (fontified t) 386 400 (fontified t) 400 401 (rear-nonsticky t fontified t) 401 402 (fontified t) 402 416 (fontified t) 416 422 (fontified t) 422 424 (fontified t face font-lock-builtin-face) 424 425 (fontified t) 425 439 (fontified t) 439 443 (fontified t) 443 444 (rear-nonsticky t fontified t) 444 445 (fontified t) 445 446 (fontified t face font-lock-builtin-face) 446 449 (fontified t) 449 453 (fontified t) 453 463 (fontified t) 463 470 (fontified t) 470 472 (fontified t face font-lock-builtin-face) 472 473 (fontified t) 473 487 (fontified t) 487 492 (fontified t) 492 493 (rear-nonsticky t fontified t) 493 494 (fontified t) 494 495 (fontified t face font-lock-builtin-face) 495 497 (fontified t) 497 498 (fontified t) 498 499 (fontified t) 499 503 (fontified t) 503 514 (fontified t) 514 515 (fontified t) 515 525 (fontified t) 525 526 (rear-nonsticky t fontified t) 526 527 (fontified t face font-lock-builtin-face) 527 528 (fontified t) 528 538 (fontified t) 538 539 (rear-nonsticky t fontified t) 539 540 (fontified t face font-lock-builtin-face) 540 541 (fontified t) 541 551 (fontified t) 551 555 (fontified t) 555 556 (rear-nonsticky t fontified t) 556 557 (fontified t face font-lock-builtin-face) 557 558 (fontified t) 558 568 (fontified t) 568 573 (fontified t) 573 574 (rear-nonsticky t fontified t) 574 575 (fontified t) 575 576 (fontified t) 576 578 (fontified t)) . 22489) (undo-tree-id690 . -498) (undo-tree-id691 . -574) (undo-tree-id692 . -268) (undo-tree-id693 . -1) (undo-tree-id695 . -14) (undo-tree-id696 . -280) (undo-tree-id698 . -498) (undo-tree-id699 . -499) (undo-tree-id700 . -1) (t 25732 63423 901423 100000)) ((22489 . 23067)) (25734 17100 161992 900000) 0 nil])
([nil nil ((23067 . 23068)) nil (25734 17125 400618 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22503 . 22504) (nil fontified nil 22489 . 22504) (22489 . 22504)) ((#("EdgeForgiveness" 0 14 (fontified nil) 14 15 (fontified nil rear-nonsticky nil)) . 22489) (undo-tree-id714 . -15) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (nil rear-nonsticky t 22503 . 22504)) (25734 17105 431451 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22503 . 22504) (22489 . 22504)) ((#("EdgeForgiveness" 0 14 (fontified nil) 14 15 (fontified nil rear-nonsticky nil)) . 22489) (undo-tree-id705 . -15) (nil rear-nonsticky t 22503 . 22504)) (25734 17099 822609 700000) 0 nil])
([nil nil ((#("Left" 0 4 (fontified t face font-lock-function-name-face)) . -23074) (undo-tree-id717 . -4) (undo-tree-id718 . -1) (undo-tree-id719 . -4)) nil (25734 17125 400617 800000) 0 nil])
nil
([nil nil ((#("EdgeForgiveness" 0 14 (fontified t) 14 15 (fontified t rear-nonsticky t)) . -22489) (undo-tree-id701 . -15) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -15) 22504) ((22489 . 22504)) (25734 17099 822543 100000) 0 nil])
([nil nil ((23074 . 23079)) nil (25734 17125 400602 800000) 0 nil])
nil
([nil nil ((23417 . 23513) (#("
" 0 1 (fontified t)) . -23469) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (#("    SubTopLeftWidth := CurrentMonitorWidth / 2
    SubTopLeftHeight := CurrentMonitorHeight / 2" 0 14 (fontified t) 14 20 (fontified t) 20 22 (fontified t face font-lock-builtin-face) 22 23 (fontified t) 23 37 (fontified t) 37 41 (fontified t) 41 42 (rear-nonsticky t fontified t) 42 43 (fontified t) 43 44 (fontified t face font-lock-builtin-face) 44 47 (fontified t) 47 51 (fontified t) 51 61 (fontified t) 61 68 (fontified t) 68 70 (fontified t face font-lock-builtin-face) 70 71 (fontified t) 71 85 (fontified t) 85 90 (fontified t) 90 91 (rear-nonsticky t fontified t) 91 92 (fontified t) 92 93 (fontified t face font-lock-builtin-face) 93 95 (fontified t)) . 23470) (undo-tree-id761 . -14) (undo-tree-id762 . -61) (undo-tree-id763 . -14) (undo-tree-id764 . -15) (undo-tree-id765 . -37) (undo-tree-id766 . -38) (undo-tree-id767 . -14) (undo-tree-id768 . -16) (undo-tree-id769 . -37) (undo-tree-id770 . -39) (undo-tree-id771 . -14) (undo-tree-id772 . -17) (undo-tree-id773 . -37) (undo-tree-id774 . -40) (undo-tree-id775 . -14) (undo-tree-id776 . -17) (undo-tree-id777 . -37) (undo-tree-id778 . -40) (undo-tree-id779 . -47) (undo-tree-id780 . -14) (undo-tree-id781 . -15) (undo-tree-id782 . -14) (undo-tree-id783 . -61) 23531 (t 25734 17125 433127 700000)) nil (25734 17146 572631 500000) 0 nil])
([nil nil ((23417 . 23466) (#("
" 0 1 (fontified t)) . -23463) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (#("    SubTopLeftHeight := CurrentMonitorHeight / 2" 0 21 (fontified t) 21 23 (fontified t face font-lock-builtin-face) 23 45 (fontified t) 45 46 (fontified t face font-lock-builtin-face) 46 48 (fontified t)) . 23464) (undo-tree-id809 . -14) 23478) nil (25734 17168 140583 600000) 0 nil] [nil nil ((#("Width := CurrentMonitorWidth / 2
    SubTopLeft" 0 6 (fontified t) 6 8 (fontified t face font-lock-builtin-face) 8 29 (fontified t) 29 30 (fontified t face font-lock-builtin-face) 30 47 (fontified t)) . -23378) (undo-tree-id720 . -47) (undo-tree-id721 . -47) (undo-tree-id722 . -33) (undo-tree-id723 . -1) (23364 . 23460) (#("
" 0 1 (fontified t)) . -23416) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("    SubTopLeftWidth := CurrentMonitorWidth / 2
    SubTopLeftHeight := CurrentMonitorHeight / 2" 0 20 (fontified t) 20 22 (fontified t face font-lock-builtin-face) 22 43 (fontified t) 43 44 (fontified t face font-lock-builtin-face) 44 68 (fontified t) 68 70 (fontified t face font-lock-builtin-face) 70 92 (fontified t) 92 93 (fontified t face font-lock-builtin-face) 93 95 (fontified t)) . 23417) (undo-tree-id731 . -14) (undo-tree-id732 . -61) (undo-tree-id733 . -14) (undo-tree-id734 . -61) (undo-tree-id735 . -47) (undo-tree-id736 . -14) (undo-tree-id737 . -15) 23478) ((23416 . 23512) (#("    SubTopLeftWidth := CurrentMonitorWidth / 2
    SubTopLeftHeight := CurrentMonitorHeight / 2
" 0 14 (fontified nil) 14 20 (fontified nil) 20 22 (fontified nil face font-lock-builtin-face) 22 43 (fontified nil) 43 44 (fontified nil face font-lock-builtin-face) 44 61 (fontified nil) 61 68 (fontified nil) 68 70 (fontified nil face font-lock-builtin-face) 70 92 (fontified nil) 92 93 (fontified nil face font-lock-builtin-face) 93 96 (fontified nil)) . 23364) (undo-tree-id786 . -14) (undo-tree-id787 . -61) (23378 . 23425)) (25734 17145 999041 600000) 0 nil])
([nil nil ((23364 . 23413) (#("
" 0 1 (fontified t)) . -23416) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (#("    SubTopLeftHeight := CurrentMonitorHeight / 2" 0 21 (fontified t) 21 23 (fontified t face font-lock-builtin-face) 23 45 (fontified t) 45 46 (fontified t face font-lock-builtin-face) 46 48 (fontified t)) . 23417) (undo-tree-id806 . -14) 23431) nil (25734 17168 140579 700000) 0 nil])
([nil nil ((23378 . 23379)) ((#("s" 0 1 (fontified t)) . 23378) (undo-tree-id784 . -1) (undo-tree-id785 . -1)) (25734 17145 998933 700000) 0 nil])
([nil nil ((23416 . 23465) (#("
" 0 1 (fontified nil)) . 23364) (#("    SubTopLeftHeight := CurrentMonitorHeight / 2" 0 21 (fontified t) 21 23 (fontified t face font-lock-builtin-face) 23 45 (fontified t) 45 46 (fontified t face font-lock-builtin-face) 46 48 (fontified t)) . 23364) (undo-tree-id802 . -14) (undo-tree-id803 . -1) 23378) nil (25734 17168 140577 600000) 0 nil])
nil
([nil nil ((23463 . 23512) (#("
" 0 1 (fontified nil)) . 23417) (#("    SubTopLeftHeight := CurrentMonitorHeight / 2" 0 21 (fontified t) 21 23 (fontified t face font-lock-builtin-face) 23 45 (fontified t) 45 46 (fontified t face font-lock-builtin-face) 46 48 (fontified t)) . 23417) (undo-tree-id801 . -14) 23431) nil (25734 17168 140576 100000) 0 nil])
([nil nil ((23364 . 23460) (#("
" 0 1 (fontified t)) . -23416) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#("    SubTopLeftWidth := CurrentMonitorWidth / 2
    SubTopLeftHeight := CurrentMonitorHeight / 2" 0 20 (fontified t) 20 22 (fontified t face font-lock-builtin-face) 22 43 (fontified t) 43 44 (fontified t face font-lock-builtin-face) 44 47 (fontified t) 47 68 (fontified t) 68 70 (fontified t face font-lock-builtin-face) 70 92 (fontified t) 92 93 (fontified t face font-lock-builtin-face) 93 95 (fontified t)) . 23417) (undo-tree-id795 . -14) (undo-tree-id796 . -14) (undo-tree-id797 . -61) (undo-tree-id798 . -62) (undo-tree-id799 . -14) (undo-tree-id800 . -61) 23431) nil (25734 17168 140574 600000) 0 nil])
([nil nil ((23512 . 23515)) nil (25734 17168 140559 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23529 . 23530) (nil fontified nil 23515 . 23530) (23515 . 23530)) nil (25734 17168 140555 300000) 0 nil])
([nil nil ((#("SubTopLeft" 0 10 (fontified t)) . 23368) (undo-tree-id819 . -10) (undo-tree-id820 . -10) (undo-tree-id821 . -10) (undo-tree-id822 . -10) (undo-tree-id823 . -10) (undo-tree-id824 . -10) (undo-tree-id825 . -10) (undo-tree-id826 . -10) (undo-tree-id827 . -10) (undo-tree-id828 . -10) (undo-tree-id829 . -10) (undo-tree-id830 . -10) (t 25734 17168 183432 0)) nil (25734 17209 79578 400000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 48) (23662 . 23663) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23644 . 23645) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23630 . 23631) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23616 . 23617) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23549 . 23550) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23528 . 23529) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23476 . 23477) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23426 . 23427) (apply deactivate-cursor-after-undo 41) (23378 . 23379) (apply activate-cursor-for-undo 48) (23653 . 23654) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23636 . 23637) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23623 . 23624) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23610 . 23611) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23544 . 23545) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23524 . 23525) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23473 . 23474) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23424 . 23425) (apply deactivate-cursor-after-undo 41) (23377 . 23378) (apply activate-cursor-for-undo 48) (23644 . 23645) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23628 . 23629) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23616 . 23617) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23604 . 23605) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23539 . 23540) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23520 . 23521) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23470 . 23471) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23422 . 23423) (apply deactivate-cursor-after-undo 41) (23376 . 23377) (apply activate-cursor-for-undo 48) (23635 . 23636) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23620 . 23621) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23609 . 23610) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23598 . 23599) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23534 . 23535) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23516 . 23517) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23467 . 23468) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23420 . 23421) (apply deactivate-cursor-after-undo 41) (23375 . 23376) (apply activate-cursor-for-undo 48) (23626 . 23627) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23612 . 23613) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23602 . 23603) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23592 . 23593) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23529 . 23530) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23512 . 23513) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23464 . 23465) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23418 . 23419) (apply deactivate-cursor-after-undo 41) (23374 . 23375) (apply activate-cursor-for-undo 48) (23617 . 23618) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23604 . 23605) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23595 . 23596) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23586 . 23587) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23524 . 23525) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23508 . 23509) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23461 . 23462) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23416 . 23417) (apply deactivate-cursor-after-undo 41) (23373 . 23374) (apply activate-cursor-for-undo 48) (23608 . 23609) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23596 . 23597) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23588 . 23589) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23580 . 23581) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23519 . 23520) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23504 . 23505) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23458 . 23459) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23414 . 23415) (apply deactivate-cursor-after-undo 41) (23372 . 23373) (apply activate-cursor-for-undo 48) (23599 . 23600) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23588 . 23589) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23581 . 23582) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23574 . 23575) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23514 . 23515) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23500 . 23501) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23455 . 23456) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23412 . 23413) (apply deactivate-cursor-after-undo 41) (23371 . 23372) (apply activate-cursor-for-undo 48) (23590 . 23591) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23580 . 23581) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23574 . 23575) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23568 . 23569) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23509 . 23510) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23496 . 23497) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23452 . 23453) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23410 . 23411) (apply deactivate-cursor-after-undo 41) (23370 . 23371) (apply activate-cursor-for-undo 48) (23581 . 23582) (apply deactivate-cursor-after-undo 48) (apply activate-cursor-for-undo 47) (23572 . 23573) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 46) (23567 . 23568) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 45) (23562 . 23563) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 44) (23504 . 23505) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 43) (23492 . 23493) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 42) (23449 . 23450) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 41) (23408 . 23409) (apply deactivate-cursor-after-undo 41) (23369 . 23370) (apply activate-cursor-for-undo 41) (23406 . 23407) (#("SubTopLeft" 0 10 (fontified t)) . 23406) (undo-tree-id810 . -10) (undo-tree-id811 . -10) (apply deactivate-cursor-after-undo 41) (apply activate-cursor-for-undo 42) (23455 . 23456) (#("SubTopLeft" 0 10 (fontified nil)) . 23455) (undo-tree-id812 . -10) (apply deactivate-cursor-after-undo 42) (apply activate-cursor-for-undo 43) (23506 . 23507) (#("SubTopLeft" 0 10 (fontified t)) . 23506) (undo-tree-id813 . -10) (apply deactivate-cursor-after-undo 43) (apply activate-cursor-for-undo 44) (23526 . 23527) (#("SubTopLeft" 0 10 (fontified t)) . 23526) (undo-tree-id814 . -10) (apply deactivate-cursor-after-undo 44) (apply activate-cursor-for-undo 45) (23592 . 23593) (#("SubTopLeft" 0 10 (fontified nil)) . 23592) (undo-tree-id815 . -10) (apply deactivate-cursor-after-undo 45) (apply activate-cursor-for-undo 46) (23605 . 23606) (#("SubTopLeft" 0 10 (fontified nil)) . 23605) (undo-tree-id816 . -10) (apply deactivate-cursor-after-undo 46) (apply activate-cursor-for-undo 47) (23618 . 23619) (#("SubTopLeft" 0 10 (fontified nil)) . 23618) (undo-tree-id817 . -10) (apply deactivate-cursor-after-undo 47) (apply activate-cursor-for-undo 48) (23635 . 23636) (#("SubTopLeft" 0 10 (fontified t)) . 23635) (undo-tree-id818 . -10) (apply deactivate-cursor-after-undo 48) (23368 . 23369)) nil (25734 17209 79566 300000) 0 nil])
([nil nil ((nil fontified nil 24263 . 24264) (nil fontified nil 24262 . 24263) (nil fontified nil 24261 . 24262) (nil fontified nil 24260 . 24261) (nil fontified nil 24259 . 24260) (nil fontified nil 24254 . 24259) (nil fontified nil 24242 . 24254) (nil fontified nil 24241 . 24242) (nil fontified nil 24240 . 24241) (nil fontified nil 24236 . 24240) (nil fontified nil 24224 . 24236) (nil fontified nil 24223 . 24224) (nil fontified nil 24222 . 24223) (nil fontified nil 24210 . 24222) (nil fontified nil 24209 . 24210) (nil fontified nil 24208 . 24209) (nil fontified nil 24196 . 24208) (nil fontified nil 24185 . 24196) (nil fontified nil 24181 . 24185) (nil fontified nil 24180 . 24181) (nil fontified nil 24179 . 24180) (nil fontified nil 24178 . 24179) (nil fontified nil 24164 . 24178) (nil fontified nil 24163 . 24164) (nil fontified nil 24162 . 24163) (nil fontified nil 24161 . 24162) (nil fontified nil 24160 . 24161) (nil fontified nil 24146 . 24160) (nil fontified nil 24145 . 24146) (nil fontified nil 24143 . 24145) (nil fontified nil 24141 . 24143) (nil fontified nil 24126 . 24141) (nil fontified nil 24125 . 24126) (nil fontified nil 24124 . 24125) (nil fontified nil 24120 . 24124) (nil fontified nil 24108 . 24120) (nil fontified nil 24107 . 24108) (nil fontified nil 24106 . 24107) (nil fontified nil 24105 . 24106) (nil fontified nil 24091 . 24105) (nil fontified nil 24090 . 24091) (nil fontified nil 24089 . 24090) (nil fontified nil 24088 . 24089) (nil fontified nil 24087 . 24088) (nil fontified nil 24073 . 24087) (nil fontified nil 24072 . 24073) (nil fontified nil 24070 . 24072) (nil fontified nil 24068 . 24070) (nil fontified nil 24053 . 24068) (nil fontified nil 24050 . 24053) (nil fontified nil 24049 . 24050) (nil fontified nil 24027 . 24049) (nil fontified nil 24025 . 24027) (nil fontified nil 24003 . 24025) (nil fontified nil 24000 . 24003) (nil fontified nil 23999 . 24000) (nil fontified nil 23978 . 23999) (nil fontified nil 23976 . 23978) (nil fontified nil 23955 . 23976) (nil fontified nil 23954 . 23955) (nil fontified nil 23939 . 23954) (nil fontified nil 23938 . 23939) (nil fontified nil 23932 . 23938) (nil fontified nil 23928 . 23932) (nil fontified nil 23927 . 23928) (nil fontified nil 23908 . 23927) (nil fontified nil 23906 . 23908) (nil fontified nil 23885 . 23906) (nil fontified nil 23881 . 23885) (nil fontified nil 23862 . 23881) (nil fontified nil 23860 . 23862) (nil fontified nil 23840 . 23860) (nil fontified nil 23836 . 23840) (nil fontified nil 23817 . 23836) (nil fontified nil 23815 . 23817) (nil fontified nil 23799 . 23815) (nil fontified nil 23795 . 23799) (nil fontified nil 23776 . 23795) (nil fontified nil 23774 . 23776) (nil fontified nil 23771 . 23774) (nil fontified nil 23758 . 23771) (nil fontified nil 23754 . 23758) (nil fontified nil 23735 . 23754) (nil fontified nil 23733 . 23735) (nil fontified nil 23710 . 23733) (nil fontified nil 23709 . 23710) (nil fontified nil 23708 . 23709) (nil fontified nil 23696 . 23708) (nil fontified nil 23694 . 23696) (nil fontified nil 23693 . 23694) (nil fontified nil 23692 . 23693) (nil fontified nil 23679 . 23692) (nil fontified nil 23675 . 23679) (nil fontified nil 23674 . 23675) (nil fontified nil 23673 . 23674) (23673 . 24264) (t 25734 17209 109801 400000)) nil (25734 17315 462550 300000) 0 nil])
([nil nil ((23673 . 23675)) nil (25734 17315 462543 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23686 . 23687) (nil fontified nil 23685 . 23687) (nil fontified nil 23674 . 23685) (23674 . 23687)) nil (25734 17315 462543 100000) 0 nil])
([nil nil ((#("TopRight" 0 8 (fontified t face font-lock-function-name-face)) . 23677) (undo-tree-id899 . -8) (undo-tree-id900 . -8) (undo-tree-id901 . -8)) nil (25734 17315 462541 800000) 0 nil])
([nil nil ((23677 . 23687)) nil (25734 17315 462540 0) 0 nil])
([nil nil ((24020 . 24147) (#("
" 0 1 (fontified t)) . -24069) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (#("    SubTopRightX := CurrentMonitorX - EdgeForgiveness + SubTopRightWidth
    SubTopRightY := CurrentMonitorY - EdgeForgiveness" 0 15 (fontified t) 15 17 (fontified t) 17 19 (fontified t face font-lock-builtin-face) 19 20 (fontified t) 20 34 (fontified t) 34 35 (rear-nonsticky t fontified t) 35 36 (fontified t) 36 37 (fontified t face font-lock-builtin-face) 37 38 (fontified t) 38 52 (fontified t) 52 53 (rear-nonsticky t fontified t) 53 54 (fontified t) 54 55 (fontified t face font-lock-builtin-face) 55 67 (fontified t) 67 71 (fontified t) 71 72 (rear-nonsticky t fontified t) 72 73 (fontified t) 73 88 (fontified t) 88 90 (fontified t) 90 92 (fontified t face font-lock-builtin-face) 92 93 (fontified t) 93 107 (fontified t) 107 108 (rear-nonsticky t fontified t) 108 109 (fontified t) 109 110 (fontified t face font-lock-builtin-face) 110 111 (fontified t) 111 125 (fontified t) 125 126 (rear-nonsticky t fontified t)) . 24070) (undo-tree-id893 . -16) (undo-tree-id894 . -89) (undo-tree-id895 . -16) (undo-tree-id896 . -17) (undo-tree-id897 . -16) (undo-tree-id898 . -89) 24159) nil (25734 17315 462536 400000) 0 nil])
([nil nil ((23972 . 24099) (#("
" 0 1 (fontified t)) . -24019) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (#("    SubTopRightX := CurrentMonitorX - EdgeForgiveness + SubTopRightWidth
    SubTopRightY := CurrentMonitorY - EdgeForgiveness" 0 17 (fontified t) 17 19 (fontified t face font-lock-builtin-face) 19 36 (fontified t) 36 37 (fontified t face font-lock-builtin-face) 37 54 (fontified t) 54 55 (fontified t face font-lock-builtin-face) 55 90 (fontified t) 90 92 (fontified t face font-lock-builtin-face) 92 109 (fontified t) 109 110 (fontified t face font-lock-builtin-face) 110 126 (fontified t)) . 24020) (undo-tree-id881 . -16) (undo-tree-id882 . -89) (undo-tree-id883 . -16) (undo-tree-id884 . -89) (undo-tree-id885 . -16) (undo-tree-id886 . -17) 24109) nil (25734 17315 462404 700000) 0 nil])
([nil nil ((24019 . 24146) (#("
" 0 1 (fontified nil)) . 23972) (undo-tree-id866 . -1) (#("    SubTopRightX := CurrentMonitorX - EdgeForgiveness + SubTopRightWidth
    SubTopRightY := CurrentMonitorY - EdgeForgiveness" 0 17 (fontified t) 17 19 (fontified t face font-lock-builtin-face) 19 36 (fontified t) 36 37 (fontified t face font-lock-builtin-face) 37 54 (fontified t) 54 55 (fontified t face font-lock-builtin-face) 55 90 (fontified t) 90 92 (fontified t face font-lock-builtin-face) 92 109 (fontified t) 109 110 (fontified t face font-lock-builtin-face) 110 126 (fontified t)) . -23972) (undo-tree-id867 . -53) (undo-tree-id868 . -53) (undo-tree-id869 . -16) (undo-tree-id870 . -126) (undo-tree-id871 . -16) (undo-tree-id872 . -17) (undo-tree-id873 . -53) (undo-tree-id874 . -126) 24025) nil (25734 17315 462401 200000) 0 nil])
([nil nil ((24069 . 24196) (#("
" 0 1 (fontified nil)) . 24020) (undo-tree-id860 . -1) (#("    SubTopRightX := CurrentMonitorX - EdgeForgiveness + SubTopRightWidth
    SubTopRightY := CurrentMonitorY - EdgeForgiveness" 0 17 (fontified t) 17 19 (fontified t face font-lock-builtin-face) 19 36 (fontified t) 36 37 (fontified t face font-lock-builtin-face) 37 54 (fontified t) 54 55 (fontified t face font-lock-builtin-face) 55 90 (fontified t) 90 92 (fontified t face font-lock-builtin-face) 92 109 (fontified t) 109 110 (fontified t face font-lock-builtin-face) 110 126 (fontified t)) . -24020) (undo-tree-id861 . -53) (undo-tree-id862 . -53) (undo-tree-id863 . -53) (undo-tree-id864 . -126) (undo-tree-id865 . -126) 24073) nil (25734 17315 462396 900000) 0 nil])
([nil nil ((#(" + SubTopRightWidth" 0 1 (fontified t) 1 2 (fontified t face font-lock-builtin-face) 2 19 (fontified t)) . -24123) (undo-tree-id857 . -19) (undo-tree-id858 . -1) (undo-tree-id859 . -19) 24142) nil (25734 17315 462394 500000) 0 nil])
([nil nil ((24177 . 24180)) nil (25734 17315 462393 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24196 . 24197) (nil fontified nil 24180 . 24197) (24180 . 24197)) nil (25734 17315 462392 800000) 0 nil])
([nil nil ((#("TopRight" 0 8 (fontified t)) . -24183) (undo-tree-id839 . -8) (undo-tree-id840 . -8) (undo-tree-id841 . -8) (undo-tree-id842 . -8) (undo-tree-id843 . -8) (undo-tree-id844 . -8) (undo-tree-id845 . -8) (undo-tree-id846 . -8) (undo-tree-id847 . -8) (undo-tree-id848 . -8) (undo-tree-id849 . -8) (undo-tree-id850 . -8) (undo-tree-id851 . -8) (undo-tree-id852 . -8) (undo-tree-id853 . -8) (undo-tree-id854 . -8) (undo-tree-id855 . -8) (undo-tree-id856 . -8)) nil (25734 17315 462391 800000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 62) (24271 . 24272) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24253 . 24254) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24239 . 24240) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24225 . 24226) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23986 . 23987) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24033 . 24034) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24082 . 24083) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24135 . 24136) (apply deactivate-cursor-after-undo 63) (24186 . 24187) (apply activate-cursor-for-undo 62) (24262 . 24263) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24245 . 24246) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24232 . 24233) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24219 . 24220) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23985 . 23986) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24031 . 24032) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24079 . 24080) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24131 . 24132) (apply deactivate-cursor-after-undo 63) (24181 . 24182) (apply activate-cursor-for-undo 62) (24253 . 24254) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24237 . 24238) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24225 . 24226) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24213 . 24214) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23984 . 23985) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24029 . 24030) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24076 . 24077) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24127 . 24128) (apply deactivate-cursor-after-undo 63) (24176 . 24177) (apply activate-cursor-for-undo 62) (24244 . 24245) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24229 . 24230) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24218 . 24219) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24207 . 24208) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23983 . 23984) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24027 . 24028) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24073 . 24074) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24123 . 24124) (apply deactivate-cursor-after-undo 63) (24171 . 24172) (apply activate-cursor-for-undo 62) (24235 . 24236) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24221 . 24222) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24211 . 24212) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24201 . 24202) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23982 . 23983) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24025 . 24026) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24070 . 24071) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24119 . 24120) (apply deactivate-cursor-after-undo 63) (24166 . 24167) (apply activate-cursor-for-undo 62) (24226 . 24227) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24213 . 24214) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24204 . 24205) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24195 . 24196) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23981 . 23982) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24023 . 24024) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24067 . 24068) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24115 . 24116) (apply deactivate-cursor-after-undo 63) (24161 . 24162) (apply activate-cursor-for-undo 62) (24217 . 24218) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24205 . 24206) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24197 . 24198) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24189 . 24190) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23980 . 23981) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24021 . 24022) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24064 . 24065) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24111 . 24112) (apply deactivate-cursor-after-undo 63) (24156 . 24157) (apply activate-cursor-for-undo 62) (24208 . 24209) (#("TopRight" 0 8 (fontified nil)) . -24208) (undo-tree-id831 . -8) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24197 . 24198) (#("TopRight" 0 8 (fontified nil)) . -24197) (undo-tree-id832 . -8) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24190 . 24191) (#("TopRight" 0 8 (fontified nil)) . -24190) (undo-tree-id833 . -8) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24183 . 24184) (#("TopRight" 0 8 (fontified t)) . -24183) (undo-tree-id834 . -8) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23979 . 23980) (#("TopRight" 0 8 (fontified t)) . -23979) (undo-tree-id835 . -8) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24027 . 24028) (#("TopRight" 0 8 (fontified t)) . -24027) (undo-tree-id836 . -8) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24077 . 24078) (#("TopRight" 0 8 (fontified t)) . -24077) (undo-tree-id837 . -8) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24131 . 24132) (#("TopRight" 0 8 (fontified nil)) . -24131) (undo-tree-id838 . -8) (apply deactivate-cursor-after-undo 63) (24183 . 24184)) nil (25734 17315 462382 500000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 62) (24289 . 24290) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24269 . 24270) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24253 . 24254) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24237 . 24238) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23988 . 23989) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24037 . 24038) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24088 . 24089) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24143 . 24144) (apply deactivate-cursor-after-undo 63) (24196 . 24197) (apply activate-cursor-for-undo 62) (24280 . 24281) (apply deactivate-cursor-after-undo 62) (apply activate-cursor-for-undo 61) (24261 . 24262) (apply deactivate-cursor-after-undo 61) (apply activate-cursor-for-undo 60) (24246 . 24247) (apply deactivate-cursor-after-undo 60) (apply activate-cursor-for-undo 59) (24231 . 24232) (apply deactivate-cursor-after-undo 59) (apply activate-cursor-for-undo 66) (23987 . 23988) (apply deactivate-cursor-after-undo 66) (apply activate-cursor-for-undo 65) (24035 . 24036) (apply deactivate-cursor-after-undo 65) (apply activate-cursor-for-undo 64) (24085 . 24086) (apply deactivate-cursor-after-undo 64) (apply activate-cursor-for-undo 63) (24139 . 24140) (apply deactivate-cursor-after-undo 63) (24191 . 24192)) nil (25734 17315 462355 100000) 0 nil])
([nil nil ((24300 . 24927) (t 25734 17315 501524 100000)) nil (25734 17361 317567 200000) 0 nil])
([nil nil ((#("Left" 0 4 (fontified t face font-lock-function-name-face)) . -24310) (undo-tree-id946 . -4) (undo-tree-id947 . -1) (undo-tree-id948 . -4)) nil (25734 17361 317566 300000) 0 nil])
([nil nil ((24310 . 24311)) nil (25734 17361 317564 200000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-function-name-face)) . -24310) (undo-tree-id944 . -1) (undo-tree-id945 . -1) 24311) nil (25734 17361 317563 200000) 0 nil])
([nil nil ((24310 . 24315)) nil (25734 17361 317561 600000) 0 nil])
([nil nil ((24757 . 24760)) nil (25734 17361 317561 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 24777 . 24778) (nil fontified nil 24760 . 24778) (24760 . 24778)) nil (25734 17405 316169 700000) 0 nil])
([nil nil ((#("eft" 0 3 (fontified t)) . 24770) (undo-tree-id1049 . -3) (undo-tree-id1050 . -3) (undo-tree-id1051 . -3) (undo-tree-id1052 . -3) (undo-tree-id1053 . -3)) nil (25734 17431 27954 100000) 0 nil] [nil nil ((#("SubBottomLeft" 0 13 (fontified t)) . -24760) (undo-tree-id1001 . -13) (undo-tree-id1002 . -13) (undo-tree-id1003 . -13) (undo-tree-id1004 . -1) 24773) ((24760 . 24773)) (25734 17402 216009 700000) 0 nil] [nil nil ((#("SubBottomLeft" 0 13 (fontified t)) . 24760) (undo-tree-id931 . -13) (undo-tree-id932 . -13) (undo-tree-id933 . -13) (undo-tree-id935 . -13) (undo-tree-id937 . -13) (undo-tree-id939 . -13) (undo-tree-id941 . -13) (undo-tree-id943 . -13)) ((24760 . 24773)) (25734 17386 835442 800000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 83) (24958 . 24959) (apply deactivate-cursor-after-undo 83) (apply activate-cursor-for-undo 82) (24936 . 24937) (apply deactivate-cursor-after-undo 82) (apply activate-cursor-for-undo 81) (24918 . 24919) (apply deactivate-cursor-after-undo 81) (apply activate-cursor-for-undo 80) (24900 . 24901) (apply deactivate-cursor-after-undo 80) (apply activate-cursor-for-undo 79) (24861 . 24862) (apply deactivate-cursor-after-undo 79) (apply activate-cursor-for-undo 78) (24805 . 24806) (apply deactivate-cursor-after-undo 78) (apply activate-cursor-for-undo 86) (24618 . 24619) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (24669 . 24670) (apply deactivate-cursor-after-undo 85) (apply activate-cursor-for-undo 84) (24722 . 24723) (apply deactivate-cursor-after-undo 84) (24777 . 24778) (apply activate-cursor-for-undo 83) (24948 . 24949) (apply deactivate-cursor-after-undo 83) (apply activate-cursor-for-undo 82) (24927 . 24928) (apply deactivate-cursor-after-undo 82) (apply activate-cursor-for-undo 81) (24910 . 24911) (apply deactivate-cursor-after-undo 81) (apply activate-cursor-for-undo 80) (24893 . 24894) (apply deactivate-cursor-after-undo 80) (apply activate-cursor-for-undo 79) (24855 . 24856) (apply deactivate-cursor-after-undo 79) (apply activate-cursor-for-undo 78) (24800 . 24801) (apply deactivate-cursor-after-undo 78) (apply activate-cursor-for-undo 86) (24617 . 24618) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (24667 . 24668) (apply deactivate-cursor-after-undo 85) (apply activate-cursor-for-undo 84) (24719 . 24720) (apply deactivate-cursor-after-undo 84) (24773 . 24774) (apply activate-cursor-for-undo 83) (24938 . 24939) (apply deactivate-cursor-after-undo 83) (apply activate-cursor-for-undo 82) (24918 . 24919) (apply deactivate-cursor-after-undo 82) (apply activate-cursor-for-undo 81) (24902 . 24903) (apply deactivate-cursor-after-undo 81) (apply activate-cursor-for-undo 80) (24886 . 24887) (apply deactivate-cursor-after-undo 80) (apply activate-cursor-for-undo 79) (24849 . 24850) (apply deactivate-cursor-after-undo 79) (apply activate-cursor-for-undo 78) (24795 . 24796) (apply deactivate-cursor-after-undo 78) (apply activate-cursor-for-undo 86) (24616 . 24617) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (24665 . 24666) (apply deactivate-cursor-after-undo 85) (apply activate-cursor-for-undo 84) (24716 . 24717) (apply deactivate-cursor-after-undo 84) (24769 . 24770) (apply activate-cursor-for-undo 83) (24928 . 24929) (apply deactivate-cursor-after-undo 83) (apply activate-cursor-for-undo 82) (24909 . 24910) (apply deactivate-cursor-after-undo 82) (apply activate-cursor-for-undo 81) (24894 . 24895) (apply deactivate-cursor-after-undo 81) (apply activate-cursor-for-undo 80) (24879 . 24880) (apply deactivate-cursor-after-undo 80) (apply activate-cursor-for-undo 79) (24843 . 24844) (apply deactivate-cursor-after-undo 79) (apply activate-cursor-for-undo 78) (24790 . 24791) (apply deactivate-cursor-after-undo 78) (apply activate-cursor-for-undo 86) (24615 . 24616) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (24663 . 24664) (apply deactivate-cursor-after-undo 85) (apply activate-cursor-for-undo 84) (24713 . 24714) (apply deactivate-cursor-after-undo 84) (24765 . 24766) (apply activate-cursor-for-undo 83) (24918 . 24919) (#("eft" 0 3 (fontified nil)) . 24918) (undo-tree-id1040 . -3) (apply deactivate-cursor-after-undo 83) (apply activate-cursor-for-undo 82) (24900 . 24901) (#("eft" 0 3 (fontified nil)) . 24900) (undo-tree-id1041 . -3) (apply deactivate-cursor-after-undo 82) (apply activate-cursor-for-undo 81) (24886 . 24887) (#("eft" 0 3 (fontified nil)) . 24886) (undo-tree-id1042 . -3) (apply deactivate-cursor-after-undo 81) (apply activate-cursor-for-undo 80) (24872 . 24873) (#("eft" 0 3 (fontified t)) . 24872) (undo-tree-id1043 . -3) (apply deactivate-cursor-after-undo 80) (apply activate-cursor-for-undo 79) (24837 . 24838) (#("eft" 0 3 (fontified nil)) . 24837) (undo-tree-id1044 . -3) (apply deactivate-cursor-after-undo 79) (apply activate-cursor-for-undo 78) (24785 . 24786) (#("eft" 0 3 (fontified t)) . 24785) (undo-tree-id1045 . -3) (apply deactivate-cursor-after-undo 78) (apply activate-cursor-for-undo 86) (24614 . 24615) (#("eft" 0 3 (fontified t)) . 24614) (undo-tree-id1046 . -3) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (24664 . 24665) (#("eft" 0 3 (fontified t)) . 24664) (undo-tree-id1047 . -3) (apply deactivate-cursor-after-undo 85) (apply activate-cursor-for-undo 84) (24716 . 24717) (#("eft" 0 3 (fontified nil)) . 24716) (undo-tree-id1048 . -3) (apply deactivate-cursor-after-undo 84) (24770 . 24771)) nil (25734 17431 27644 500000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 83) (24846 . 24854) (#(" " 0 1 (fontified nil)) . 24845) (undo-tree-id976 . -1) (24831 . 24839) (#("        " 0 8 (fontified nil)) . 24831) (24839 . 24839) (24846 . 24847) (#("SubBottomLeft" 0 9 (fontified nil) 9 13 (fontified nil)) . -24846) (apply deactivate-cursor-after-undo 83) (apply activate-cursor-for-undo 82) (24831 . 24839) (#(" " 0 1 (fontified nil)) . 24830) (undo-tree-id977 . -1) (24820 . 24828) (#("        " 0 8 (fontified nil)) . 24820) (24828 . 24828) (24831 . 24832) (#("SubBottomLeft" 0 9 (fontified nil) 9 13 (fontified nil)) . -24831) (apply deactivate-cursor-after-undo 82) (apply activate-cursor-for-undo 81) (24820 . 24828) (#(" " 0 1 (fontified nil)) . 24819) (undo-tree-id978 . -1) (24809 . 24817) (#("        " 0 8 (fontified nil)) . 24809) (24817 . 24817) (24820 . 24821) (#("SubBottomLeft" 0 9 (fontified nil) 9 13 (fontified nil)) . -24820) (apply deactivate-cursor-after-undo 81) (apply activate-cursor-for-undo 80) (24809 . 24817) (24792 . 24796) (#("    " 0 4 (fontified nil)) . 24792) (24796 . 24796) (24808 . 24809) (#("SubBottomLeft" 0 9 (fontified t) 9 13 (fontified t)) . -24808) (apply deactivate-cursor-after-undo 80) (apply activate-cursor-for-undo 79) (24780 . 24784) (#(" " 0 1 (fontified nil)) . 24779) (undo-tree-id979 . -1) (24735 . 24739) (#("    " 0 4 (fontified nil)) . 24735) (24739 . 24739) (24780 . 24781) (#("SubBottomLeft" 0 9 (fontified nil) 9 13 (fontified nil)) . -24780) (apply deactivate-cursor-after-undo 79) (apply activate-cursor-for-undo 78) (24735 . 24739) (#("    " 0 4 (fontified nil)) . 24734) (24738 . 24738) (24738 . 24739) (#("SubBottomLeft" 0 9 (fontified t) 9 13 (fontified t)) . -24738) (undo-tree-id980 . -13) (undo-tree-id981 . -9) (apply deactivate-cursor-after-undo 78) (apply activate-cursor-for-undo 84) (24678 . 24683) (#("    SubBottomLeft" 0 4 (fontified nil) 4 13 (fontified nil) 13 17 (fontified nil)) . -24678) (apply deactivate-cursor-after-undo 84) (apply activate-cursor-for-undo 86) (24601 . 24605) (#("    " 0 4 (fontified nil)) . 24600) (24604 . 24604) (24604 . 24605) (#("SubBottomLeft" 0 9 (fontified t) 9 13 (fontified t)) . -24604) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (24651 . 24655) (#("    " 0 4 (fontified nil)) . 24650) (24654 . 24654) (24654 . 24655) (#("SubBottomLeft" 0 9 (fontified t) 9 13 (fontified t)) . -24654) (apply deactivate-cursor-after-undo 85) (24760 . 24764) (#(" " 0 1 (fontified nil)) . 24759) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (24702 . 24706) (#("    " 0 4 (fontified nil)) . 24702) (24706 . 24706) (24760 . 24761)) ((#("
" 0 1 (fontified nil)) . 24760) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (24702 . 24706) (#("    " 0 4 (fontified nil)) . 24702) (24759 . 24760) (#("    " 0 4 (fontified t)) . 24760) (24654 . 24667) (#("
" 0 1 (fontified nil)) . 24654) (24650 . 24654) (#("    " 0 4 (fontified t)) . 24651) (24604 . 24617) (#("
" 0 1 (fontified nil)) . 24604) (24600 . 24604) (#("    " 0 4 (fontified t)) . 24601) (24678 . 24695) (#("
    " 0 5 (fontified t)) . 24678) (24738 . 24751) (#("
" 0 1 (fontified nil)) . 24738) (24734 . 24738) (#("    " 0 4 (fontified nil)) . 24735) (24780 . 24793) (#("
" 0 1 (fontified nil)) . 24780) (24735 . 24739) (#("    " 0 4 (fontified nil)) . 24735) (24779 . 24780) (#("    " 0 4 (fontified t)) . 24780) (24808 . 24821) (#("
" 0 1 (fontified nil)) . 24808) (24792 . 24796) (#("    " 0 4 (fontified t)) . 24792) (#("        " 0 8 (fontified nil)) . 24809) (24820 . 24833) (#("
" 0 1 (fontified nil)) . 24820) (24809 . 24817) (#("        " 0 8 (fontified nil)) . 24809) (24819 . 24820) (#("        " 0 8 (fontified nil)) . 24820) (24831 . 24844) (#("
" 0 1 (fontified nil)) . 24831) (24820 . 24828) (#("        " 0 8 (fontified nil)) . 24820) (24830 . 24831) (#("        " 0 8 (fontified nil)) . 24831) (24846 . 24859) (#("
" 0 1 (fontified nil)) . 24846) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (24831 . 24839) (#("        " 0 8 (fontified nil)) . 24831) (24845 . 24846) (#("        " 0 8 (fontified t)) . 24846)) (25734 17402 215516 600000) 0 nil])
([nil nil ((#("Left" 0 4 (fontified t)) . -24779) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id964 . -4)) ((24779 . 24783)) (25734 17386 426964 600000) 0 nil] [nil nil ((apply activate-cursor-for-undo 73) (24846 . 24854) (#(" " 0 1 (fontified nil)) . 24845) (undo-tree-id902 . -1) (24831 . 24839) (#("        " 0 8 (fontified nil)) . 24831) (24839 . 24839) (24846 . 24847) (#("SubBottomLeft" 0 13 (fontified nil)) . 24846) (undo-tree-id903 . -13) (apply deactivate-cursor-after-undo 73) (apply activate-cursor-for-undo 72) (24831 . 24839) (#(" " 0 1 (fontified nil)) . 24830) (undo-tree-id904 . -1) (24820 . 24828) (#("        " 0 8 (fontified nil)) . 24820) (24828 . 24828) (24831 . 24832) (#("SubBottomLeft" 0 13 (fontified nil)) . 24831) (undo-tree-id905 . -13) (apply deactivate-cursor-after-undo 72) (apply activate-cursor-for-undo 71) (24820 . 24828) (#(" " 0 1 (fontified nil)) . 24819) (undo-tree-id906 . -1) (24809 . 24817) (#("        " 0 8 (fontified nil)) . 24809) (24817 . 24817) (24820 . 24821) (#("SubBottomLeft" 0 13 (fontified nil)) . 24820) (undo-tree-id907 . -13) (apply deactivate-cursor-after-undo 71) (apply activate-cursor-for-undo 70) (24809 . 24817) (24792 . 24796) (#("    " 0 4 (fontified nil)) . 24792) (24796 . 24796) (24808 . 24809) (#("SubBottomLeft" 0 13 (fontified t)) . 24808) (undo-tree-id908 . -13) (apply deactivate-cursor-after-undo 70) (apply activate-cursor-for-undo 69) (24780 . 24784) (#(" " 0 1 (fontified nil)) . 24779) (undo-tree-id909 . -1) (24735 . 24739) (#("    " 0 4 (fontified nil)) . 24735) (24739 . 24739) (24780 . 24781) (#("SubBottomLeft" 0 13 (fontified nil)) . 24780) (undo-tree-id910 . -13) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 68) (24735 . 24739) (#("    " 0 4 (fontified nil)) . 24734) (24738 . 24738) (24738 . 24739) (#("SubBottomLeft" 0 13 (fontified t)) . 24738) (undo-tree-id911 . -13) (apply deactivate-cursor-after-undo 68) (apply activate-cursor-for-undo 74) (24678 . 24683) (#("    SubBottomLeft" 0 4 (fontified nil) 4 17 (fontified nil)) . 24678) (undo-tree-id912 . -17) (apply deactivate-cursor-after-undo 74) (apply activate-cursor-for-undo 76) (24601 . 24605) (#("    " 0 4 (fontified nil)) . 24600) (24604 . 24604) (24604 . 24605) (#("SubBottomLeft" 0 13 (fontified t)) . 24604) (undo-tree-id913 . -13) (apply deactivate-cursor-after-undo 76) (apply activate-cursor-for-undo 75) (24651 . 24655) (#("    " 0 4 (fontified nil)) . 24650) (24654 . 24654) (24654 . 24655) (#("SubBottomLeft" 0 13 (fontified t)) . 24654) (undo-tree-id914 . -13) (apply deactivate-cursor-after-undo 75) (24760 . 24764) (#(" " 0 1 (fontified nil)) . 24759) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (24702 . 24706) (#("    " 0 4 (fontified nil)) . 24702) (24706 . 24706) (24760 . 24761)) ((#("
" 0 1 (fontified nil)) . 24760) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (24702 . 24706) (#("    " 0 4 (fontified nil)) . 24702) (undo-tree-id951 . -1) (24759 . 24760) (#("    " 0 4 (fontified t)) . 24760) (24654 . 24667) (#("
" 0 1 (fontified nil)) . 24654) (24650 . 24654) (#("    " 0 4 (fontified t)) . 24651) (24604 . 24617) (#("
" 0 1 (fontified nil)) . 24604) (24600 . 24604) (#("    " 0 4 (fontified t)) . 24601) (24678 . 24695) (#("
    " 0 5 (fontified t)) . 24678) (24738 . 24751) (#("
" 0 1 (fontified nil)) . 24738) (24734 . 24738) (#("    " 0 4 (fontified nil)) . 24735) (24780 . 24793) (#("
" 0 1 (fontified nil)) . 24780) (24735 . 24739) (#("    " 0 4 (fontified nil)) . 24735) (24779 . 24780) (#("    " 0 4 (fontified t)) . 24780) (24808 . 24821) (#("
" 0 1 (fontified nil)) . 24808) (24792 . 24796) (#("    " 0 4 (fontified t)) . 24792) (#("        " 0 8 (fontified nil)) . 24809) (24820 . 24833) (#("
" 0 1 (fontified nil)) . 24820) (24809 . 24817) (#("        " 0 8 (fontified nil)) . 24809) (24819 . 24820) (#("        " 0 8 (fontified nil)) . 24820) (24831 . 24844) (#("
" 0 1 (fontified nil)) . 24831) (24820 . 24828) (#("        " 0 8 (fontified nil)) . 24820) (24830 . 24831) (#("        " 0 8 (fontified nil)) . 24831) (24846 . 24859) (#("
" 0 1 (fontified nil)) . 24846) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (24831 . 24839) (#("        " 0 8 (fontified nil)) . 24831) (24845 . 24846) (#("        " 0 8 (fontified t)) . 24846)) (25734 17361 317534 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -24780) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) 24781) nil (25734 17431 27636 500000) 0 nil])
nil
([nil nil ((apply activate-cursor-for-undo 73) (24939 . 24940) (apply deactivate-cursor-after-undo 73) (apply activate-cursor-for-undo 72) (24918 . 24919) (apply deactivate-cursor-after-undo 72) (apply activate-cursor-for-undo 71) (24901 . 24902) (apply deactivate-cursor-after-undo 71) (apply activate-cursor-for-undo 70) (24884 . 24885) (apply deactivate-cursor-after-undo 70) (apply activate-cursor-for-undo 69) (24846 . 24847) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 76) (24617 . 24618) (apply deactivate-cursor-after-undo 76) (apply activate-cursor-for-undo 75) (24667 . 24668) (apply deactivate-cursor-after-undo 75) (apply activate-cursor-for-undo 74) (24719 . 24720) (apply deactivate-cursor-after-undo 74) (apply activate-cursor-for-undo 68) (24783 . 24784) (apply deactivate-cursor-after-undo 68) (24787 . 24788) (apply activate-cursor-for-undo 73) (24929 . 24930) (apply deactivate-cursor-after-undo 73) (apply activate-cursor-for-undo 72) (24909 . 24910) (apply deactivate-cursor-after-undo 72) (apply activate-cursor-for-undo 71) (24893 . 24894) (apply deactivate-cursor-after-undo 71) (apply activate-cursor-for-undo 70) (24877 . 24878) (apply deactivate-cursor-after-undo 70) (apply activate-cursor-for-undo 69) (24840 . 24841) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 76) (24616 . 24617) (apply deactivate-cursor-after-undo 76) (apply activate-cursor-for-undo 75) (24665 . 24666) (apply deactivate-cursor-after-undo 75) (apply activate-cursor-for-undo 74) (24716 . 24717) (apply deactivate-cursor-after-undo 74) (apply activate-cursor-for-undo 68) (24779 . 24780) (apply deactivate-cursor-after-undo 68) (24782 . 24783) (apply activate-cursor-for-undo 73) (24919 . 24920) (apply deactivate-cursor-after-undo 73) (apply activate-cursor-for-undo 72) (24900 . 24901) (apply deactivate-cursor-after-undo 72) (apply activate-cursor-for-undo 71) (24885 . 24886) (apply deactivate-cursor-after-undo 71) (apply activate-cursor-for-undo 70) (24870 . 24871) (apply deactivate-cursor-after-undo 70) (apply activate-cursor-for-undo 69) (24834 . 24835) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 76) (24615 . 24616) (apply deactivate-cursor-after-undo 76) (apply activate-cursor-for-undo 75) (24663 . 24664) (apply deactivate-cursor-after-undo 75) (apply activate-cursor-for-undo 74) (24713 . 24714) (apply deactivate-cursor-after-undo 74) (apply activate-cursor-for-undo 68) (24775 . 24776) (apply deactivate-cursor-after-undo 68) (24777 . 24778) (apply activate-cursor-for-undo 73) (24909 . 24910) (apply deactivate-cursor-after-undo 73) (apply activate-cursor-for-undo 72) (24891 . 24892) (apply deactivate-cursor-after-undo 72) (apply activate-cursor-for-undo 71) (24877 . 24878) (apply deactivate-cursor-after-undo 71) (apply activate-cursor-for-undo 70) (24863 . 24864) (apply deactivate-cursor-after-undo 70) (apply activate-cursor-for-undo 69) (24828 . 24829) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 68) (24774 . 24775) (apply deactivate-cursor-after-undo 68) (apply activate-cursor-for-undo 76) (24614 . 24615) (apply deactivate-cursor-after-undo 76) (apply activate-cursor-for-undo 75) (24661 . 24662) (apply deactivate-cursor-after-undo 75) (apply activate-cursor-for-undo 74) (24710 . 24711) (apply deactivate-cursor-after-undo 74) (24772 . 24773) (apply activate-cursor-for-undo 73) (24899 . 24900) (#("Left" 0 4 (fontified nil)) . -24899) (apply deactivate-cursor-after-undo 73) (apply activate-cursor-for-undo 72) (24882 . 24883) (#("Left" 0 4 (fontified nil)) . -24882) (apply deactivate-cursor-after-undo 72) (apply activate-cursor-for-undo 71) (24869 . 24870) (#("Left" 0 4 (fontified nil)) . -24869) (apply deactivate-cursor-after-undo 71) (apply activate-cursor-for-undo 70) (24856 . 24857) (#("Left" 0 4 (fontified t)) . -24856) (apply deactivate-cursor-after-undo 70) (apply activate-cursor-for-undo 69) (24822 . 24823) (#("Left" 0 4 (fontified nil)) . -24822) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 76) (24613 . 24614) (#("Left" 0 4 (fontified t)) . -24613) (apply deactivate-cursor-after-undo 76) (apply activate-cursor-for-undo 75) (24663 . 24664) (#("Left" 0 4 (fontified t)) . -24663) (apply deactivate-cursor-after-undo 75) (apply activate-cursor-for-undo 74) (24715 . 24716) (#("Left" 0 4 (fontified t)) . -24715) (apply deactivate-cursor-after-undo 74) (apply activate-cursor-for-undo 68) (24779 . 24780) (apply deactivate-cursor-after-undo 68) (24779 . 24780)) ((#("R" 0 1 (fontified nil)) . 24779) (undo-tree-id970 . -1) (#("R" 0 1 (fontified nil)) . 24779) (undo-tree-id971 . -1) (24715 . 24719) (#("R" 0 1 (fontified nil)) . 24715) (24663 . 24667) (#("R" 0 1 (fontified nil)) . 24663) (24613 . 24617) (#("R" 0 1 (fontified nil)) . 24613) (24822 . 24826) (#("R" 0 1 (fontified nil)) . 24822) (24856 . 24860) (#("R" 0 1 (fontified nil)) . 24856) (24869 . 24873) (#("R" 0 1 (fontified nil)) . 24869) (24882 . 24886) (#("R" 0 1 (fontified nil)) . 24882) (24899 . 24903) (#("R" 0 1 (fontified nil)) . 24899) (#("i" 0 1 (fontified nil)) . 24772) (undo-tree-id972 . -1) (#("i" 0 1 (fontified nil)) . 24710) (#("i" 0 1 (fontified nil)) . 24661) (#("i" 0 1 (fontified nil)) . 24614) (#("i" 0 1 (fontified nil)) . 24774) (#("i" 0 1 (fontified nil)) . 24828) (#("i" 0 1 (fontified nil)) . 24863) (#("i" 0 1 (fontified nil)) . 24877) (#("i" 0 1 (fontified nil)) . 24891) (#("i" 0 1 (fontified nil)) . 24909) (#("g" 0 1 (fontified nil)) . 24777) (undo-tree-id973 . -1) (#("g" 0 1 (fontified nil)) . 24775) (#("g" 0 1 (fontified nil)) . 24713) (#("g" 0 1 (fontified nil)) . 24663) (#("g" 0 1 (fontified nil)) . 24615) (#("g" 0 1 (fontified nil)) . 24834) (#("g" 0 1 (fontified nil)) . 24870) (#("g" 0 1 (fontified nil)) . 24885) (#("g" 0 1 (fontified nil)) . 24900) (#("g" 0 1 (fontified nil)) . 24919) (#("h" 0 1 (fontified nil)) . 24782) (undo-tree-id974 . -1) (#("h" 0 1 (fontified nil)) . 24779) (#("h" 0 1 (fontified nil)) . 24716) (#("h" 0 1 (fontified nil)) . 24665) (#("h" 0 1 (fontified nil)) . 24616) (#("h" 0 1 (fontified nil)) . 24840) (#("h" 0 1 (fontified nil)) . 24877) (#("h" 0 1 (fontified nil)) . 24893) (#("h" 0 1 (fontified nil)) . 24909) (#("h" 0 1 (fontified nil)) . 24929) (#("t" 0 1 (fontified nil)) . 24787) (undo-tree-id975 . -1) (#("t" 0 1 (fontified nil)) . 24783) (#("t" 0 1 (fontified t)) . 24719) (#("t" 0 1 (fontified t)) . 24667) (#("t" 0 1 (fontified t)) . 24617) (#("t" 0 1 (fontified t)) . 24846) (#("t" 0 1 (fontified nil)) . 24884) (#("t" 0 1 (fontified nil)) . 24901) (#("t" 0 1 (fontified nil)) . 24918) (#("t" 0 1 (fontified t)) . 24939)) (25734 17385 970700 0) 0 nil])
nil
([nil nil ((24780 . 24781)) nil (25734 17431 27634 500000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -24787) (undo-tree-id965 . -1) (#("i" 0 1 (fontified t)) . -24788) (undo-tree-id966 . -1) (#("g" 0 1 (fontified t)) . -24789) (undo-tree-id967 . -1) (#("h" 0 1 (fontified t)) . -24790) (undo-tree-id968 . -1) (#("t" 0 1 (fontified t)) . -24791) (undo-tree-id969 . -1) 24792 (t 25734 17375 688919 900000)) ((24787 . 24792) (t 25734 17381 171649 700000)) (25734 17381 137992 500000) 0 nil])
([nil nil ((#("LR" 0 2 (fontified t)) . 24775) (undo-tree-id1018 . -2) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -2) (undo-tree-id1024 . -2) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -2) (undo-tree-id1031 . -2) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -1) (undo-tree-id1035 . -2)) nil (25734 17431 27633 100000) 0 nil])
nil
([nil nil ((apply activate-cursor-for-undo 96) (24613 . 24614) (#("LR" 0 2 (fontified t)) . 24613) (undo-tree-id1009 . -2) (apply deactivate-cursor-after-undo 96) (apply activate-cursor-for-undo 95) (24665 . 24666) (#("LR" 0 2 (fontified t)) . 24665) (undo-tree-id1010 . -2) (apply deactivate-cursor-after-undo 95) (apply activate-cursor-for-undo 94) (24719 . 24720) (#("LR" 0 2 (fontified nil)) . 24719) (undo-tree-id1011 . -2) (apply deactivate-cursor-after-undo 94) (apply activate-cursor-for-undo 88) (24799 . 24800) (#("LR" 0 2 (fontified nil)) . 24799) (undo-tree-id1012 . -2) (apply deactivate-cursor-after-undo 88) (apply activate-cursor-for-undo 89) (24855 . 24856) (#("LR" 0 2 (fontified t)) . 24855) (undo-tree-id1013 . -2) (apply deactivate-cursor-after-undo 89) (apply activate-cursor-for-undo 90) (24894 . 24895) (#("LR" 0 2 (fontified nil)) . 24894) (undo-tree-id1014 . -2) (apply deactivate-cursor-after-undo 90) (apply activate-cursor-for-undo 91) (24912 . 24913) (#("LR" 0 2 (fontified nil)) . 24912) (undo-tree-id1015 . -2) (apply deactivate-cursor-after-undo 91) (apply activate-cursor-for-undo 92) (24930 . 24931) (#("LR" 0 2 (fontified nil)) . 24930) (undo-tree-id1016 . -2) (apply deactivate-cursor-after-undo 92) (apply activate-cursor-for-undo 93) (24952 . 24953) (#("LR" 0 2 (fontified t)) . 24952) (undo-tree-id1017 . -2) (apply deactivate-cursor-after-undo 93) (24775 . 24776)) nil (25734 17431 27621 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3405) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (#("
#Include sub-window-manager.ahk" 0 1 (fontified t) 1 9 (fontified t face font-lock-preprocessor-face) 9 13 (fontified t) 13 14 (fontified t face font-lock-builtin-face) 14 20 (fontified t) 20 21 (fontified t face font-lock-builtin-face) 21 28 (fontified t) 28 29 (fontified t face font-lock-builtin-face) 29 32 (fontified t)) . 3406) (undo-tree-id1061 . -13) (undo-tree-id1062 . -13) (undo-tree-id1063 . -14) (undo-tree-id1064 . -13) (t 25734 17431 55759 300000)) nil (25734 17481 648935 300000) 0 nil])
([nil nil ((16729 . 16737) (#("        " 0 8 (fontified nil)) . 16729) (16737 . 16737) (16738 . 16739) (t 25734 17481 681326 200000)) nil (25734 17813 859084 500000) 0 nil])
([nil nil ((16739 . 16741)) nil (25734 17813 859083 600000) 0 nil])
([nil nil ((16739 . 16747) 16741) nil (25734 17813 859083 200000) 0 nil])
([nil nil ((16749 . 16760)) nil (25734 17813 859082 400000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-comment-face)) . -16759) (undo-tree-id1066 . -1) 16760) nil (25734 17813 859081 800000) 0 nil])
([nil nil ((16759 . 16769)) nil (25734 17813 859080 600000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -16768) (undo-tree-id1065 . -1) 16769) nil (25734 17813 859079 500000) 0 nil])
([nil nil ((16768 . 16779)) nil (25734 17813 859069 700000) 0 nil])
([nil nil ((16779 . 16800)) nil (25734 17813 859068 700000) 0 nil])
([nil nil ((16800 . 16804)) nil (25734 17813 859063 400000) 0 nil])
([nil nil ((16739 . 16747) (#("        " 0 8 (fontified nil)) . 16739) (16747 . 16747) (16804 . 16805) (t 25734 17813 898197 500000)) nil (25734 17888 313387 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16840 . 16841) (nil fontified nil 16805 . 16841) (16805 . 16841)) nil (25734 17888 313386 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -16840) (undo-tree-id1071 . -1) 16841) nil (25734 17888 313385 700000) 0 nil])
([nil nil ((16805 . 16813) 16840) nil (25734 17888 313384 300000) 0 nil])
([nil nil ((16805 . 16813) (#("        " 0 8 (fontified nil)) . 16805) (16813 . 16813) (16848 . 16849)) nil (25734 17888 313383 500000) 0 nil])
([nil nil ((16849 . 16850)) nil (25734 17888 313382 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16849) (16850 . 16850)) nil (25734 17888 313381 500000) 0 nil])
([nil nil ((16849 . 16854)) nil (25734 17888 313381 100000) 0 nil])
([nil nil ((16853 . 16856)) nil (25734 17888 313380 300000) 0 nil])
([nil nil ((16853 . 16870) (#("Cur" 0 3 (fontified t)) . -16853) (undo-tree-id1070 . -3) 16856) nil (25734 17888 313379 800000) 0 nil])
([nil nil ((16870 . 16874)) nil (25734 17888 313378 700000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-builtin-face)) . -16872) (undo-tree-id1068 . -1) (#(" " 0 1 (fontified t)) . -16873) (undo-tree-id1069 . -1) 16874) nil (25734 17888 313377 300000) 0 nil])
([nil nil ((16872 . 16879)) nil (25734 17888 313374 900000) 0 nil])
([nil nil ((16873 . 16893) (#("TopWin" 0 6 (fontified t)) . -16873) (undo-tree-id1067 . -6) 16879) nil (25734 17888 313373 600000) 0 nil])
([nil nil ((16894 . 16897)) nil (25734 17888 313363 600000) 0 nil])
([nil nil ((16849 . 16857) (16896 . 16898)) nil (25734 17888 313363 0) 0 nil])
([nil nil ((16860 . 16861)) nil (25734 17888 313362 200000) 0 nil])
([nil nil ((16907 . 16915) 16908) nil (25734 17888 313361 700000) 0 nil])
([nil nil ((16906 . 16908)) nil (25734 17888 313360 800000) 0 nil])
([nil nil ((16906 . 16918) 16908) nil (25734 17888 313360 0) 0 nil])
([nil nil ((16920 . 16923)) nil (25734 17888 313355 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16738) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (#("        ; make sure i didn't switch windows while it was wiggling
        CurrentActiveTest := WinActive(\"A\")
        if !(CurrentActiveTest = TopWindowIdInMonitor) {
            break
        }" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 66 (fontified t face font-lock-comment-face) 66 74 (fontified t) 74 92 (fontified t) 92 94 (fontified t face font-lock-builtin-face) 94 95 (fontified t) 95 104 (fontified t face font-lock-function-name-face) 104 105 (fontified t) 105 108 (fontified t face font-lock-string-face) 108 110 (fontified t) 110 118 (fontified t) 118 120 (fontified t face font-lock-keyword-face) 120 122 (fontified t) 122 123 (fontified t) 123 141 (fontified t) 141 142 (fontified t face font-lock-builtin-face) 142 143 (fontified t) 143 163 (fontified t) 163 165 (fontified t) 165 167 (fontified t) 167 179 (fontified t) 179 184 (fontified t face font-lock-keyword-face) 184 185 (fontified t) 185 194 (fontified t)) . 16739) (undo-tree-id1105 . -194) (undo-tree-id1106 . -110) (undo-tree-id1107 . -194) (undo-tree-id1108 . -66) (undo-tree-id1109 . -17) (undo-tree-id1110 . -194) (undo-tree-id1111 . -185) (undo-tree-id1112 . -17) (undo-tree-id1113 . -18) (undo-tree-id1114 . -66) (undo-tree-id1115 . -67) (undo-tree-id1116 . 1) (undo-tree-id1117 . -194) (undo-tree-id1118 . 29) (undo-tree-id1119 . -166) 16933 (t 25734 17888 345415 900000)) nil (25734 17941 859616 100000) 0 nil])
([nil nil ((16738 . 16933)) nil (25734 17941 859605 800000) 0 nil])
([nil nil ((17851 . 17855) (#("    " 0 4 (fontified nil)) . 17851) (17855 . 17855) (17903 . 17904)) nil (25734 17941 859604 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18098 . 18099) (nil fontified nil 17904 . 18099) (17904 . 18099)) nil (25734 17941 859604 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17903) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . 1) (undo-tree-id1091 . -1) 17904) nil (25734 17941 859603 100000) 0 nil])
([nil nil ((#("eak" 0 3 (fontified t face font-lock-keyword-face)) . 18085) (undo-tree-id1087 . -3)) nil (25734 17941 859600 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 18071)) nil (25734 17941 859600 0) 0 nil])
([nil nil ((#("           br" 0 11 (fontified t) 11 13 (fontified t)) . 18071) (undo-tree-id1086 . -13)) nil (25734 17941 859599 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18071) (undo-tree-id1085 . -1)) nil (25734 17944 143790 200000) 0 nil])
([nil nil ((18071 . 18329) (#("
" 0 1 (fontified t)) . -18080) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (#("        ; Reset the window to the original position
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", originalX, \"Int\", originalY, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10" 0 8 (fontified t) 8 9 (fontified t face font-lock-comment-delimiter-face) 9 10 (fontified t face font-lock-comment-delimiter-face) 10 52 (fontified t face font-lock-comment-face) 52 60 (fontified t) 60 67 (fontified t face font-lock-function-name-face) 67 68 (fontified t) 68 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-builtin-face) 83 84 (fontified t) 84 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-builtin-face) 90 111 (fontified t) 111 112 (fontified t face font-lock-builtin-face) 112 113 (fontified t) 113 118 (fontified t face font-lock-string-face) 118 119 (fontified t face font-lock-builtin-face) 119 121 (fontified t) 121 122 (fontified t face font-lock-builtin-face) 122 123 (fontified t) 123 128 (fontified t face font-lock-string-face) 128 129 (fontified t face font-lock-builtin-face) 129 139 (fontified t) 139 140 (fontified t face font-lock-builtin-face) 140 141 (fontified t) 141 146 (fontified t face font-lock-string-face) 146 147 (fontified t face font-lock-builtin-face) 147 157 (fontified t) 157 158 (fontified t face font-lock-builtin-face) 158 159 (fontified t) 159 164 (fontified t face font-lock-string-face) 164 165 (fontified t face font-lock-builtin-face) 165 167 (fontified t) 167 168 (fontified t face font-lock-builtin-face) 168 169 (fontified t) 169 174 (fontified t face font-lock-string-face) 174 175 (fontified t face font-lock-builtin-face) 175 177 (fontified t) 177 178 (fontified t face font-lock-builtin-face) 178 179 (fontified t) 179 185 (fontified t face font-lock-string-face) 185 186 (fontified t face font-lock-builtin-face) 186 194 (fontified t) 194 196 (fontified t face font-lock-comment-delimiter-face) 196 257 (fontified t face font-lock-comment-face)) . 18081) (undo-tree-id1132 . -52) (undo-tree-id1133 . -53) (undo-tree-id1134 . -52)) nil (25734 18042 29168 100000) 0 nil] [nil nil ((18071 . 18329) (#("
" 0 1 (fontified t)) . -18080) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (#("        ; Reset the window to the original position
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", originalX, \"Int\", originalY, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10" 0 8 (fontified t) 8 9 (fontified t face font-lock-comment-delimiter-face) 9 10 (fontified t face font-lock-comment-delimiter-face) 10 52 (fontified t face font-lock-comment-face) 52 60 (fontified t) 60 67 (fontified t face font-lock-function-name-face) 67 68 (fontified t) 68 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-builtin-face) 83 84 (fontified t) 84 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-builtin-face) 90 111 (fontified t) 111 112 (fontified t face font-lock-builtin-face) 112 113 (fontified t) 113 118 (fontified t face font-lock-string-face) 118 119 (fontified t face font-lock-builtin-face) 119 121 (fontified t) 121 122 (fontified t face font-lock-builtin-face) 122 123 (fontified t) 123 128 (fontified t face font-lock-string-face) 128 129 (fontified t face font-lock-builtin-face) 129 139 (fontified t) 139 140 (fontified t face font-lock-builtin-face) 140 141 (fontified t) 141 146 (fontified t face font-lock-string-face) 146 147 (fontified t face font-lock-builtin-face) 147 157 (fontified t) 157 158 (fontified t face font-lock-builtin-face) 158 159 (fontified t) 159 164 (fontified t face font-lock-string-face) 164 165 (fontified t face font-lock-builtin-face) 165 167 (fontified t) 167 168 (fontified t face font-lock-builtin-face) 168 169 (fontified t) 169 174 (fontified t face font-lock-string-face) 174 175 (fontified t face font-lock-builtin-face) 175 177 (fontified t) 177 178 (fontified t face font-lock-builtin-face) 178 179 (fontified t) 179 185 (fontified t face font-lock-string-face) 185 186 (fontified t face font-lock-builtin-face) 186 194 (fontified t) 194 196 (fontified t face font-lock-comment-delimiter-face) 196 257 (fontified t face font-lock-comment-face)) . 18081) (undo-tree-id1081 . -52) (undo-tree-id1082 . -52) (undo-tree-id1083 . -1) (undo-tree-id1084 . -52) 18133) ((18080 . 18338) (#("        ; Reset the window to the original position
        DllCall(\"SetWindowPos\", \"Ptr\", TopWindowIdInMonitor, \"Ptr\", 0, \"Int\", originalX, \"Int\", originalY, \"Int\", 0, \"Int\", 0, \"UInt\", 0x15)  ; SWP_NOZORDER = 0x4 | SWP_NOSIZE = 0x1 | SWP_NOACTIVATE = 0x10
" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 52 (fontified t face font-lock-comment-face) 52 60 (fontified t) 60 67 (fontified t face font-lock-function-name-face) 67 68 (fontified t) 68 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-builtin-face) 83 84 (fontified t) 84 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-builtin-face) 90 111 (fontified t) 111 112 (fontified t face font-lock-builtin-face) 112 113 (fontified t) 113 118 (fontified t face font-lock-string-face) 118 119 (fontified t face font-lock-builtin-face) 119 121 (fontified t) 121 122 (fontified t face font-lock-builtin-face) 122 123 (fontified t) 123 128 (fontified t face font-lock-string-face) 128 129 (fontified t face font-lock-builtin-face) 129 139 (fontified t) 139 140 (fontified t face font-lock-builtin-face) 140 141 (fontified t) 141 146 (fontified t face font-lock-string-face) 146 147 (fontified t face font-lock-builtin-face) 147 157 (fontified t) 157 158 (fontified t face font-lock-builtin-face) 158 159 (fontified t) 159 164 (fontified t face font-lock-string-face) 164 165 (fontified t face font-lock-builtin-face) 165 167 (fontified t) 167 168 (fontified t face font-lock-builtin-face) 168 169 (fontified t) 169 174 (fontified t face font-lock-string-face) 174 175 (fontified t face font-lock-builtin-face) 175 177 (fontified t) 177 178 (fontified t face font-lock-builtin-face) 178 179 (fontified t) 179 185 (fontified t face font-lock-string-face) 185 186 (fontified t face font-lock-builtin-face) 186 194 (fontified t) 194 196 (fontified t face font-lock-comment-delimiter-face) 196 258 (fontified t face font-lock-comment-face)) . 18071) (undo-tree-id1123 . -52) (undo-tree-id1124 . -52) (undo-tree-id1125 . -52)) (25734 17943 108746 900000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -18083) (18071 . 18083)) nil (25734 18042 29144 700000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -18083) (undo-tree-id1073 . -1) (18071 . 18083) 18123) ((#("            " 0 12 (fontified nil)) . 18071) (18083 . 18091)) (25734 17942 685151 700000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -18139) (18127 . 18139)) nil (25734 18042 29142 900000) 0 nil])
([nil nil ((18127 . 18128)) ((#("s" 0 1 (fontified t)) . 18127) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1)) (25734 17942 225530 0) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . 18025)) nil (25734 18042 29138 400000) 0 nil])
([nil nil ((18127 . 18131) 18128) ((#("    " 0 4 (fontified t)) . 18127) (undo-tree-id1120 . -1)) (25734 17941 859684 500000) 0 nil])
([nil nil ((28474 . 31110) (t 25734 18042 53043 600000)) nil (25734 18143 883399 400000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -18131) (undo-tree-id1072 . -1) 18132) ((18131 . 18132)) (25734 17941 859587 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -28474) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) 28475) nil (25734 18143 883395 900000) 0 nil])
nil
([nil nil ((28474 . 28476) (t 25734 18143 915692 400000)) nil (25734 18171 846372 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -28475) (undo-tree-id1138 . -1) 28476) nil (25734 18171 846371 700000) 0 nil])
([nil nil ((28475 . 28476)) nil (25734 18171 846370 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -28475) (undo-tree-id1137 . -1) 28476) nil (25734 18171 846369 400000) 0 nil])
([nil nil ((28475 . 28496)) nil (25734 18171 846359 300000) 0 nil])
([nil nil ((28496 . 28506)) nil (25734 18171 846358 600000) 0 nil])
([nil nil ((28506 . 28511)) nil (25734 18171 846357 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28570 . 28571) (nil fontified nil 28570 . 28571) (nil fontified nil 28569 . 28570) (nil fontified nil 28557 . 28569) (nil fontified nil 28556 . 28557) (nil fontified nil 28555 . 28556) (nil fontified nil 28554 . 28555) (nil fontified nil 28543 . 28554) (nil fontified nil 28542 . 28543) (nil fontified nil 28541 . 28542) (nil fontified nil 28532 . 28541) (nil fontified nil 28531 . 28532) (nil fontified nil 28522 . 28531) (nil fontified nil 28511 . 28522) (28511 . 28571)) nil (25734 18171 846356 500000) 0 nil])
([nil nil ((28475 . 28479)) nil (25734 18171 846350 0) 0 nil])
([nil nil ((#("
ActivateWow()
{
    AllWindowIds := GetAllWindowIds()

    FilteredWindowIds := FilterWow(AllWindowIds)

    Wow := FilteredWindowIds[1]

    WinActivate, ahk_id %Wow%
}
" 0 1 (fontified t) 1 12 (face font-lock-function-name-face fontified t) 12 34 (fontified t) 34 36 (face font-lock-builtin-face fontified t) 36 56 (fontified t) 56 78 (fontified t) 78 80 (face font-lock-builtin-face fontified t) 80 81 (fontified t) 81 114 (fontified t) 114 116 (face font-lock-builtin-face fontified t) 116 143 (fontified t) 143 154 (face font-lock-keyword-face fontified t) 154 155 (face font-lock-builtin-face fontified t) 155 156 (fontified t) 156 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 168 (face font-lock-variable-name-face fontified t) 168 171 (fontified t)) . -18452) (undo-tree-id0 . -171) (undo-tree-id1 . -56) (undo-tree-id2 . -81) (undo-tree-id3 . -171) (undo-tree-id4 . -171) (undo-tree-id5 . -1) 18623 (t 25734 18171 880965 700000)) nil (25811 18092 451356 500000) 0 nil])
([nil nil ((#("
FilterWow(AllWindowIds)
{
    FilteredWindowIds := []
    for Index, WindowId in AllWindowIds
    {
        Id := WindowId
        WinGetTitle Title, ahk_id %Id%
        WinGetClass Class, ahk_id %Id%
        WinGetPos, Xpos, Ypos, W, H, ahk_id %Id%
        if (Title == \"World of Warcraft\") {
            FilteredWindowIds.Push(WindowId)
        }
    }
    return FilteredWindowIds

}
" 0 1 (fontified t) 1 10 (face font-lock-function-name-face fontified t) 10 49 (fontified t) 49 51 (face font-lock-builtin-face fontified t) 51 59 (fontified t) 59 62 (face font-lock-keyword-face fontified t) 62 68 (fontified t) 68 69 (face font-lock-builtin-face fontified t) 69 79 (fontified t) 79 81 (face font-lock-keyword-face fontified t) 81 109 (fontified t) 109 111 (face font-lock-keyword-face fontified t) 111 112 (fontified t) 112 114 (face font-lock-builtin-face fontified t) 114 132 (fontified t) 132 143 (face font-lock-keyword-face fontified t) 143 149 (fontified t) 149 150 (face font-lock-builtin-face fontified t) 150 151 (fontified t) 151 157 (face font-lock-keyword-face fontified t) 157 158 (fontified t) 158 162 (face font-lock-variable-name-face fontified t) 162 171 (fontified t) 171 182 (face font-lock-keyword-face fontified t) 182 188 (fontified t) 188 189 (face font-lock-builtin-face fontified t) 189 190 (fontified t) 190 196 (face font-lock-keyword-face fontified t) 196 197 (fontified t) 197 201 (face font-lock-variable-name-face fontified t) 201 210 (fontified t) 210 219 (face font-lock-keyword-face fontified t) 219 220 (face font-lock-builtin-face fontified t) 220 225 (fontified t) 225 226 (face font-lock-builtin-face fontified t) 226 231 (fontified t) 231 232 (face font-lock-builtin-face fontified t) 232 234 (fontified t) 234 235 (face font-lock-builtin-face fontified t) 235 237 (fontified t) 237 238 (face font-lock-builtin-face fontified t) 238 239 (fontified t) 239 245 (face font-lock-keyword-face fontified t) 245 246 (fontified t) 246 250 (face font-lock-variable-name-face fontified t) 250 259 (fontified t) 259 261 (face font-lock-keyword-face fontified t) 261 269 (fontified t) 269 271 (face font-lock-builtin-face fontified t) 271 272 (fontified t) 272 291 (face font-lock-string-face fontified t) 291 324 (fontified t) 324 325 (face font-lock-builtin-face fontified t) 325 360 (fontified t) 360 366 (face font-lock-warning-face fontified t) 366 388 (fontified t)) . -5146) (undo-tree-id6 . -1) (undo-tree-id7 . -95) (undo-tree-id8 . -388) (undo-tree-id9 . -388) (undo-tree-id10 . -388) (undo-tree-id11 . -1) 5534 (t 25811 18092 484903 900000)) nil (25811 18100 450618 500000) 0 nil])
([nil nil ((apply deactivate-cursor-after-undo 14)) nil (25811 18368 426494 500000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 20) (4225 . 4226) (apply deactivate-cursor-after-undo 20) (apply activate-cursor-for-undo 19) (3826 . 3827) (apply deactivate-cursor-after-undo 19) (3613 . 3614) (t 25811 18100 579948 400000)) nil (25811 18553 525302 700000) 0 nil] [nil nil ((#("AllWindowIds" 0 12 (fontified t)) . 3610) (undo-tree-id12 . -12) (undo-tree-id13 . -12) (undo-tree-id14 . -12) (undo-tree-id15 . -12) (undo-tree-id16 . -12) (undo-tree-id17 . -12) (undo-tree-id18 . 12) (undo-tree-id19 . -12) (undo-tree-id20 . -12) (undo-tree-id21 . -12) (undo-tree-id22 . -12) (undo-tree-id23 . -12) (undo-tree-id24 . -12) (undo-tree-id25 . -12) (t 25811 18100 579948 400000)) ((3610 . 3622)) (25811 18368 64190 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 23) (25326 . 25327) (apply deactivate-cursor-after-undo 23) (apply activate-cursor-for-undo 22) (14989 . 14990) (apply deactivate-cursor-after-undo 22) (3600 . 3601) (t 25811 18395 529951 400000)) nil (25811 18679 981176 100000) 0 nil] [nil nil ((#("WindowIds)" 0 10 (fontified t)) . 3614) (undo-tree-id0 . -9) (undo-tree-id1 . -9) (undo-tree-id2 . -10) (undo-tree-id3 . -10) (t 25811 18395 529951 400000)) ((3614 . 3624)) (25811 18553 524626 700000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 15) (3614 . 3615) (apply deactivate-cursor-after-undo 15) (apply activate-cursor-for-undo 17) (3614 . 3615) (apply deactivate-cursor-after-undo 17) (apply activate-cursor-for-undo 18) (3614 . 3615) (apply deactivate-cursor-after-undo 18) (3610 . 3611)) ((#("f" 0 1 (fontified t)) . 3610) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("f" 0 1 (fontified nil)) . 3614) (undo-tree-id28 . -1) (#("f" 0 1 (fontified nil)) . 3614) (undo-tree-id29 . -1) (#("f" 0 1 (fontified t)) . 3614) (undo-tree-id30 . -1)) (25811 18368 64046 0) 0 nil])
([nil nil ((4166 . 4220) 4143) nil (25811 18679 981175 200000) 0 nil])
nil
nil
([nil nil ((apply -2 4167 4223 undo--wrap-and-run-primitive-undo 4167 4223 ((4171 . 4173) 4197))) nil (25811 18679 981174 500000) 0 nil])
([nil nil ((4145 . 4146)) nil (25811 18679 981174 100000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t)) . -4141) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("D" 0 1 (fontified t)) . -4142) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("." 0 1 (fontified t face font-lock-builtin-face)) . -4143) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("g" 0 1 (fontified t)) . -4144) (undo-tree-id16 . -1) (#("s" 0 1 (fontified t)) . -4145) (undo-tree-id17 . -1) 4146) nil (25811 18679 981172 900000) 0 nil])
([nil nil ((4141 . 4142) (4162 . 4163)) nil (25811 18679 981169 200000) 0 nil])
([nil nil ((#("\"etCurrentDesktopNum()\"" 0 1 (fontified t face font-lock-string-face) 1 23 (fontified t face font-lock-string-face)) . 4141) (undo-tree-id4 . -23) (undo-tree-id5 . -23) (undo-tree-id6 . -23) (undo-tree-id7 . -23)) nil (25811 18679 981168 300000) 0 nil])
([nil nil ((4141 . 4143) (#("\"" 0 1 (fontified nil)) . -4141) (4141 . 4142)) nil (25811 18679 981157 800000) 0 nil])
([nil nil ((4146 . 4147) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -4146) (4143 . 4147)) nil (25811 18679 981153 600000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -4141) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -4142) (undo-tree-id41 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -4143) (undo-tree-id42 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -4144) (undo-tree-id43 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -4145) (undo-tree-id44 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -4146) (undo-tree-id45 . -1) 4147 (t 25811 18680 9732 500000)) nil (25811 18697 586816 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4112) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("    CurrentActiveDesktop := " 0 25 (fontified t) 25 27 (fontified t face font-lock-builtin-face) 27 28 (fontified t)) . 4113) (undo-tree-id29 . -28) (undo-tree-id30 . -24) (undo-tree-id31 . -24) (undo-tree-id32 . -4) (undo-tree-id33 . -28) (undo-tree-id34 . -28) (undo-tree-id35 . -28) (undo-tree-id36 . -28) (undo-tree-id37 . -28) 4141) nil (25811 19254 845630 300000) 0 nil])
([nil nil ((apply 2 4113 4166 undo--wrap-and-run-primitive-undo 4113 4166 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 4117) 4141))) ((apply -2 4113 4168 undo--wrap-and-run-primitive-undo 4113 4168 ((4117 . 4119) 3628))) (25811 19257 224554 700000) 0 nil])
([nil nil ((apply 32 3628 4080 undo--wrap-and-run-primitive-undo 3628 4080 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4068) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4047) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4041) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3984) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3935) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3896) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3857) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3834) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3828) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3787) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3770) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3764) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3735) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3677) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3671) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3633) 4112))) nil (25811 19260 892776 500000) 0 nil] [nil nil ((apply 32 3628 4080 undo--wrap-and-run-primitive-undo 3628 4080 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4068) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4047) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4041) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3984) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3935) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3896) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3857) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3834) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3828) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3787) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3770) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3764) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3735) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3677) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3671) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3633) 3628)) (t 25811 18697 624398 900000)) ((apply -32 3628 4112 undo--wrap-and-run-primitive-undo 3628 4112 ((3633 . 3635) (3671 . 3673) (3677 . 3679) (3735 . 3737) (3764 . 3766) (3770 . 3772) (3787 . 3789) (3828 . 3830) (3834 . 3836) (3857 . 3859) (3896 . 3898) (3935 . 3937) (3984 . 3986) (4041 . 4043) (4047 . 4049) (4068 . 4070) 3628)) (t 25811 19253 792375 200000)) (25811 19253 762846 600000) 0 nil] [nil nil ((4140 . 4144) (4113 . 4117) (#("    " 0 4 (fontified nil)) . 4113) (4117 . 4117) (4139 . 4140) (t 25811 18697 624398 900000)) ((#("
" 0 1 (fontified nil)) . 4139) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (4113 . 4117) (#("    " 0 4 (fontified t)) . 4113) (#("    " 0 4 (fontified t)) . 4140)) (25811 18700 34227 100000) 0 nil])
([nil nil ((apply -32 3628 4113 undo--wrap-and-run-primitive-undo 3628 4113 ((4098 . 4100) (4075 . 4077) (4067 . 4069) (4008 . 4010) (3957 . 3959) (3916 . 3918) (3875 . 3877) (3850 . 3852) (3842 . 3844) (3799 . 3801) (3780 . 3782) (3772 . 3774) (3741 . 3743) (3681 . 3683) (3673 . 3675) (3633 . 3635) 3628)) (t 25811 19260 923660 700000)) nil (25811 19644 493642 0) 0 nil])
nil
nil
([nil nil ((apply 32 3628 4080 undo--wrap-and-run-primitive-undo 3628 4080 ((#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4068) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4047) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -4041) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3984) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3935) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3896) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3857) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3834) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3828) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3787) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3770) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3764) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3735) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3677) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3671) (#("; " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3633) 3628)) (t 25811 19644 526542 900000)) nil (25811 20022 574465 100000) 0 nil])
([nil current ((apply -32 3628 4113 undo--wrap-and-run-primitive-undo 3628 4113 ((4098 . 4100) (4075 . 4077) (4067 . 4069) (4008 . 4010) (3957 . 3959) (3916 . 3918) (3875 . 3877) (3850 . 3852) (3842 . 3844) (3799 . 3801) (3780 . 3782) (3772 . 3774) (3741 . 3743) (3681 . 3683) (3673 . 3675) (3633 . 3635) 4080)) (t 25811 20022 611219 300000)) nil (25811 20049 201356 0) 0 nil])
nil
